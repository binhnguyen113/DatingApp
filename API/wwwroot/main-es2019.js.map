{"version":3,"sources":["./src/app/members/member-messages/member-messages.component.css","./src/app/register/register.component.css","./src/app/errors/test-errors/test-errors.component.ts","./src/app/_forms/date-input/date-input.component.ts","tough-cookie (ignored)","./src/app/register/register.component.ts","./src/app/_forms/text-input/text-input.component.css","node-fetch (ignored)","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/members/member-messages/member-messages.component.ts","fetch-cookie (ignored)","abort-controller (ignored)","./src/app/admin/photo-management/photo-management.component.ts","./src/app/errors/not-found/not-found.component.ts","ws (ignored)","./src/app/_services/account.service.ts","eventsource (ignored)","./src/app/errors/not-found/not-found.component.css","./src/app/errors/server-error/server-error.component.ts","./src/app/_directives/has-role.directive.ts","./src/app/_services/busy.service.ts","./src/app/home/home.component.ts","./src/app/app.component.css","./src/app/_models/pagination.ts","./src/environments/environment.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/_interceptors/jwt.interceptor.ts","./src/app/modals/roles-modal/roles-modal.component.html","./src/app/messages/messages.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/admin/user-management/user-management.component.html","./src/app/errors/test-errors/test-errors.component.css","./src/app/admin/photo-management/photo-management.component.html","./src/app/home/home.component.html","./src/app/admin/photo-management/photo-management.component.css","./src/app/_modules/shared.module.ts","./src/app/errors/test-errors/test-errors.component.html","./src/app/lists/lists.component.html","./src/app/_interceptors/error.interceptor.ts","./src/app/errors/server-error/server-error.component.html","./src/app/_guards/admin.guard.ts","./src/app/_services/admin.service.ts","./src/app/register/register.component.html","./src/app/admin/user-management/user-management.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/messages/messages.component.css","./src/app/members/member-detail/member-detail.component.ts","./src/app/_guards/auth.guard.ts","./src/app/_services/message.service.ts","./src/app/errors/server-error/server-error.component.css","./src/app/home/home.component.css","./src/app/members/member-list/member-list.component.ts","./src/app/nav/nav.component.css","./src/app/members/member-edit/member-edit.component.html","./src/app/app.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/members/member-edit/member-edit.component.css","./src/app/_forms/date-input/date-input.component.css","./src/app/members/member-card/member-card.component.html","./src/app/members/member-detail/member-detail.component.css","./src/app/members/member-list/member-list.component.css","./src/app/_interceptors/loading.interceptor.ts","./src/app/_services/paginationHelpers.ts","./src/app/app.component.html","./src/app/_services/members.service.ts","./src/app/app.module.ts","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/_resolvers/member-detailed.resolver.ts","./src/app/members/photo-editor/photo-editor.component.css","./src/app/modals/roles-modal/roles-modal.component.css","./src/app/_forms/text-input/text-input.component.ts","./src/app/lists/lists.component.ts","./src/app/admin/admin-panel/admin-panel.component.css","./src/app/modals/confirm-dialog/confirm-dialog.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/_services/presence.service.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/_models/userParams.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.css","./src/app/admin/user-management/user-management.component.css","./src/app/members/member-card/member-card.component.css","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/_forms/date-input/date-input.component.html","./src/app/messages/messages.component.html","./src/app/members/member-detail/member-detail.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/app-routing.module.ts","./src/app/_services/confirm.service.ts","./src/app/modals/roles-modal/roles-modal.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/lists/lists.component.css"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,uEAAQ,qBAAqB,KAAK,eAAe,yBAAyB,kBAAkB,mBAAmB,KAAK,kBAAkB,4BAA4B,6BAA6B,0CAA0C,KAAK,yBAAyB,yBAAyB,KAAK,+CAA+C,+1BAA+1B,E;;;;;;;;;;;;ACAlsC;AAAe,6GAA8C,mJAAmJ,E;;;;;;;;;;;;;;;;;;;;;;;ACA9J;AACA;AACS;IAO9C,mBAAmB,SAAnB,mBAAmB;IAI9B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHpC,YAAO,GAAG,wEAAW,CAAC,MAAM,CAAC;QAC7B,qBAAgB,GAAa,EAAE,CAAC;IAEQ,CAAC;IAEzC,QAAQ;IACR,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,iBAAiB,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACnE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,mBAAmB,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACrE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,oBAAoB,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACtE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC9D,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,kBAAkB,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACzE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC,CAAC;IACJ,CAAC;CAEF;;YA3DQ,+DAAU;;AASN,mBAAmB;IAL/B,+DAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,wFAA2C;;KAE5C,CAAC;GACW,mBAAmB,CAkD/B;AAlD+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACT+B;AACE;IAQpD,kBAAkB,SAAlB,kBAAkB;IAK7B,YAA2B,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;QAJtC,UAAK,GAAW,EAAE,CAAC;QACnB,YAAO,GAAS,IAAI,IAAI,EAAE,CAAE;QAInC,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAG;YACd,cAAc,EAAE,WAAW;YAC3B,eAAe,EAAE,cAAc;SAChC;IACF,CAAC;IACF,UAAU,CAAC,GAAQ;IAEnB,CAAC;IACD,gBAAgB,CAAC,EAAO;IAExB,CAAC;IACD,iBAAiB,CAAC,EAAO;IAEzB,CAAC;IAED,QAAQ;IACR,CAAC;CAGF;;YAlC8B,wDAAS,uBAazB,kDAAI;;;oBAJhB,mDAAK;sBACL,mDAAK;;AAFK,kBAAkB;IAL9B,+DAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,uFAA0C;;KAE3C,CAAC;GACW,kBAAkB,CA0B9B;AA1B8B;;;;;;;;;;;;ACT/B,e;;;;;;;;;;;;;;;;;;;;;;;;;ACA+E;AACjB;AACnB;AACoE;AAEtE;IAO5B,iBAAiB,SAAjB,iBAAiB;IAM1B,YAAoB,cAA8B,EAAU,MAAqB,EACvE,EAAe,EAAU,MAAc;QAD7B,mBAAc,GAAd,cAAc,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAe;QACvE,OAAE,GAAF,EAAE,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QANvC,mBAAc,GAAG,IAAI,0DAAY,EAAE,CAAC;QAE9C,YAAO,GAAS,IAAI,IAAI,EAAE,CAAC;QAC3B,qBAAgB,GAAY,EAAE,CAAC;IAGsB,CAAC;IAEtD,QAAQ;QACN,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,GAAE,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,eAAe;QACb,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,MAAM,EAAE,CAAC,MAAM,CAAC;YAChB,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,QAAQ,EAAE,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ;oBAClC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAClD,eAAe,EAAC,CAAE,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;SAC3E,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,OAAY;QACtB,OAAO,CAAC,OAAwB,EAAE,EAAE;;YAClC,IAAI,GAAG,GAAG,aAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,0CAAE,QAAe,CAAC;YAC3C,IAAG,GAAG;gBACJ,OAAO,QAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,MAAK,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;gBACtE,OAAO,IAAI,CAAC;QACnB,CAAC;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,CAC7D,QAAQ,CAAC,EAAE;YACX,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACxC,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC,CAAC;IACJ,CAAC;IAGD,MAAM;QACJ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;CAEJ;;YAhEQ,wEAAc;YACd,wDAAa;YACI,0DAAW;YAE5B,sDAAM;;;6BAQV,oDAAM;;AADE,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,qFAAwC;;KAEzC,CAAC;GACW,iBAAiB,CAqD7B;AArD6B;;;;;;;;;;;;;ACZ9B;AAAe,6GAA8C,+JAA+J,E;;;;;;;;;;;ACA5N,e;;;;;;;;;;;;ACAA;AAAe,wlBAAyhB,E;;;;;;;;;;;;;;;;;;;;;;ACA3c;AAG1B;IAQtD,uBAAuB,SAAvB,uBAAuB;IAOlC,YAAmB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAI,CAAC;IAEtD,QAAQ;IAER,CAAC;IAED,WAAW;QACT,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YAC5E,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QAC3B,CAAC,CAAC;IACJ,CAAC;CACF;;YA1BQ,+EAAc;;;0BASpB,uDAAS,SAAC,aAAa;uBACvB,mDAAK;uBACL,mDAAK;;AAHK,uBAAuB;IANnC,+DAAS,CAAC;QACT,eAAe,EAAE,qEAAuB,CAAC,MAAM;QAC/C,QAAQ,EAAE,qBAAqB;QAC/B,4FAA+C;;KAEhD,CAAC;GACW,uBAAuB,CAkBnC;AAlBmC;;;;;;;;;;;;ACXpC,e;;;;;;;;;;;ACAA,e;;;;;;;;;;;;;;;;;;;;;ACAkD;IAOrC,wBAAwB,SAAxB,wBAAwB;IAEnC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;;AAPY,wBAAwB;IALpC,+DAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,6FAAgD;;KAEjD,CAAC;GACW,wBAAwB,CAOpC;AAPoC;;;;;;;;;;;;;;;;;;;;;;ACPK;IAO7B,iBAAiB,SAAjB,iBAAiB;CAE7B;AAFY,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,sFAAyC;;KAE1C,CAAC;GACW,iBAAiB,CAE7B;AAF6B;;;;;;;;;;;;ACP9B,e;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACP;AACN;AAEA;AACsB;AACN;IAKxC,cAAc,SAAd,cAAc;IAKzB,YAAoB,IAAgB,EAAU,QAAyB;QAAnD,SAAI,GAAJ,IAAI,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QAJvE,YAAO,GAAG,wEAAW,CAAC,MAAM,CAAC;QACrB,sBAAiB,GAAG,IAAI,kDAAa,CAAO,CAAC,CAAC,CAAC;QACvD,iBAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;IAEsB,CAAC;IAE5E,KAAK,CAAC,KAAU;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,OAAO,GAAG,eAAe,EAAE,KAAK,CAAC,CAAC,IAAI,CACrE,0DAAG,CAAC,CAAC,QAAc,EAAE,EAAE;YACrB,MAAM,IAAI,GAAG,QAAQ,CAAC;YACtB,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;gBAC1B,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;aACzC;QACH,CAAC,CAAC,CACH;IACH,CAAC;IAED,QAAQ,CAAC,KAAU;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,OAAO,GAAG,kBAAkB,EAAE,KAAK,CAAC,CAAC,IAAI,CACxE,0DAAG,CAAC,CAAC,IAAU,EAAE,EAAE;YACjB,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;gBAC1B,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;aACzC;QACH,CAAC,CAAC,CACH;IACH,CAAC;IAED,cAAc,CAAC,IAAU;QACvB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC;QACpD,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnE,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IAGD,MAAM;QACJ,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAChC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAK,CAAC,CAAC;QACnC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC;IACpC,CAAC;IAED,eAAe,CAAC,KAAa;QAC3B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,CAAC;CACF;;YA3DQ,+DAAU;YAMV,iEAAe;;AAKX,cAAc;IAH1B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,cAAc,CAgD1B;AAhD0B;;;;;;;;;;;;ACX3B,e;;;;;;;;;;;;ACAA;AAAe,6GAA8C,+JAA+J,E;;;;;;;;;;;;;;;;;;;;;;ACA1K;AACT;IAO5B,oBAAoB,SAApB,oBAAoB;IAG/B,YAAoB,MAAc;;QAAd,WAAM,GAAN,MAAM,CAAQ;QAChC,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC;QACtD,IAAI,CAAC,KAAK,eAAG,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,MAAM,0CAAE,KAAK,0CAAG,OAAO,CAAC,CAAC;IACpD,CAAC;IAED,QAAQ;IACR,CAAC;CAEF;;YAlBQ,sDAAM;;AAOF,oBAAoB;IALhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,yFAA4C;;KAE7C,CAAC;GACW,oBAAoB,CAWhC;AAXgC;;;;;;;;;;;;;;;;;;;;ACR+C;AAClB;AACxB;IAMzB,gBAAgB,SAAhB,gBAAgB;IAI3B,YAAoB,gBAAkC,EAAU,WAA6B,EACnF,cAA8B;QADpB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,gBAAW,GAAX,WAAW,CAAkB;QACnF,mBAAc,GAAd,cAAc,CAAgB;QACpC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC9D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC;IACH,CAAC;IAEF,QAAQ;;QACN,wBAAwB;QACxB,IAAG,QAAC,IAAI,CAAC,IAAI,0CAAE,KAAK,KAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAC;YACxC,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;YAC9B,OAAQ;SACT;QAED,UAAG,IAAI,CAAC,IAAI,0CAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAE;YACzD,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC5D;aAAM;YACL,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;SAC/B;IACH,CAAC;CAIJ;;YAnCuC,8DAAgB;YAA7B,yDAAW;YAC7B,wEAAc;;;yBAQpB,mDAAK;;AADK,gBAAgB;IAH5B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;KACzB,CAAC;GACW,gBAAgB,CA2B5B;AA3B4B;;;;;;;;;;;;;;;;;;;ACRc;AACK;IAKnC,WAAW,SAAX,WAAW;IAGtB,YAAoB,cAAiC;QAAjC,mBAAc,GAAd,cAAc,CAAmB;QAFrD,qBAAgB,GAAG,CAAC,CAAC;IAEoC,CAAC;IAE1D,IAAI;QACF,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE;YAClC,IAAI,EAAE,kBAAkB;YACxB,OAAO,EAAE,qBAAqB;YAC9B,KAAK,EAAC,SAAS;SAChB,CAAC,CAAC;IACL,CAAC;IACA,IAAI;QACH,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAG,IAAI,CAAC,gBAAgB,IAAG,CAAC,EAAC;YAC3B,IAAI,CAAC,gBAAgB,GAAE,CAAC,CAAC;YACzB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;SAC5B;IACF,CAAC;CACH;;YAzBQ,6DAAiB;;AAKb,WAAW;IAHvB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,WAAW,CAoBvB;AApBuB;;;;;;;;;;;;;;;;;;;;;;ACLkB;IAO7B,aAAa,SAAb,aAAa;IAIxB;QAHA,iBAAY,GAAG,KAAK,CAAC;IAGL,CAAC;IAEjB,QAAQ;IACR,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;IACzC,CAAC;IAID,mBAAmB,CAAC,KAAc;QAChC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;CAEF;;AAnBY,aAAa;IALzB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,iFAAoC;;KAErC,CAAC;GACW,aAAa,CAmBzB;AAnByB;;;;;;;;;;;;;ACR1B;AAAe,6GAA8C,+HAA+H,E;;;;;;;;;;;;ACO5L;AAAA;AAAO,MAAM,eAAe;CAG3B;;;;;;;;;;;;;ACVD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE,6BAA6B;IACrC,MAAM,EAAE,8BAA8B;CACvC,CAAC;AAEA;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACjBrE;AAAe,0VAA2R,eAAe,mYAAmY,+CAA+C,yCAAyC,wBAAwB,2PAA2P,+BAA+B,0dAA0d,4BAA4B,+IAA+I,iBAAiB,szBAAszB,E;;;;;;;;;;;;;;;;;;;ACAv+E;AAQmB;AAExB;IAGzB,cAAc,SAAd,cAAc;IAEzB,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAG,CAAC;IAEtD,SAAS,CAAC,OAA6B,EAAE,IAAiB;QACxD,IAAI,WAAkB,CAAC;QACvB,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC;QACrF,IAAI,WAAW,EAAE;YACf,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACtB,UAAU,EAAE;oBACV,aAAa,EAAE,UAAU,WAAW,CAAC,KAAK,EAAE;iBAC7C;aACF,CAAC,CAAC;SACJ;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;CACF;;YAtBQ,wEAAc;;AAKV,cAAc;IAD1B,gEAAU,EAAE;GACA,cAAc,CAiB1B;AAjB0B;;;;;;;;;;;;;ACb3B;AAAe,uJAAwF,eAAe,+LAA+L,ygBAAygB,WAAW,gSAAgS,E;;;;;;;;;;;;;;;;;;;;;;;ACAvjC;AAGY;AACA;IAOjD,iBAAiB,SAAjB,iBAAiB;IAQ5B,YAAoB,cAA8B,EAAU,cAA8B;QAAtE,mBAAc,GAAd,cAAc,CAAgB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAP1F,aAAQ,GAAc,EAAE,CAAC;QAEzB,cAAS,GAAG,QAAQ,CAAC;QACrB,eAAU,GAAG,CAAC,CAAC;QACf,aAAQ,GAAG,CAAC,CAAC;QACb,YAAO,GAAG,KAAK,CAAC;IAE8E,CAAC;IAE/F,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACnG,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC;YAChC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;YACtC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,EAAU;QACtB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,wBAAwB,EAAE,uBAAuB,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAChG,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;oBACnD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACrE,CAAC,CAAC;aACH;QACH,CAAC,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,KAAU;QACpB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC;QAC7B,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;CACF;;YA5CQ,wEAAc;YADd,wEAAc;;AAQV,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,qFAAwC;;KAEzC,CAAC;GACW,iBAAiB,CAqC7B;AArC6B;;;;;;;;;;;;;ACX9B;AAAe,2KAA4G,WAAW,WAAW,WAAW,6uBAA6uB,oCAAoC,inBAAinB,2BAA2B,gTAAgT,oBAAoB,gFAAgF,4CAA4C,iRAAiR,mCAAmC,u1BAAu1B,E;;;;;;;;;;;;ACApoG;AAAe,oWAAqS,eAAe,yBAAyB,YAAY,qJAAqJ,E;;;;;;;;;;;;ACA7f;AAAe,6GAA8C,mKAAmK,E;;;;;;;;;;;;ACAhO;AAAe,iGAAkC,E;;;;;;;;;;;;ACAjD;AAAe,4JAA6F,0pBAA0pB,E;;;;;;;;;;;;ACAtwB;AAAe,6GAA8C,+KAA+K,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnM;AACM;AACW;AAChB;AACI;AACO;AACF;AACU;AACD;AACR;AACR;AACK;IAgCpC,YAAY,SAAZ,YAAY;CAAI;AAAhB,YAAY;IA9BxB,8DAAQ,CAAC;QACR,YAAY,EAAE,EAAE;QAChB,OAAO,EAAE;YACP,4DAAY;YACZ,uEAAgB,CAAC,OAAO,EAAE;YAC1B,uDAAY,CAAC,OAAO,CAAC;gBACnB,aAAa,EAAE,qBAAqB;aACrC,CAAC;YACF,6DAAU,CAAC,OAAO,EAAE;YACpB,oEAAgB;YAChB,gEAAgB;YAChB,2EAAkB,CAAC,OAAO,EAAE;YAC5B,yEAAgB,CAAC,OAAO,EAAE;YAC1B,oEAAa,CAAC,OAAO,EAAE;YACvB,0DAAa,CAAC,OAAO,EAAE;YACvB,gEAAW,CAAC,OAAO,EAAE;SACtB;QACD,OAAO,EAAE;YACP,uEAAgB;YAChB,uDAAY;YACZ,6DAAU;YACV,oEAAgB;YAChB,gEAAgB;YAChB,2EAAkB;YAClB,yEAAgB;YAChB,oEAAa;YACb,0DAAa;YACb,gEAAW;SACZ;KACF,CAAC;GACW,YAAY,CAAI;AAAJ;;;;;;;;;;;;;AC3CzB;AAAe,+xBAAguB,OAAO,gEAAgE,E;;;;;;;;;;;;ACAtzB;AAAe,4GAA6C,kEAAkE,qgCAAqgC,gCAAgC,gCAAgC,8BAA8B,2BAA2B,E;;;;;;;;;;;;;;;;;;;;;ACAjtC;AAOG;AACa;AAChB;AACC;IAG/B,gBAAgB,SAAhB,gBAAgB;IAE3B,YAAoB,MAAc,EAAU,MAAqB;QAA7C,WAAM,GAAN,MAAM,CAAQ;QAAU,WAAM,GAAN,MAAM,CAAe;IAAG,CAAC;IAErE,SAAS,CAAC,OAA6B,EAAE,IAAiB;QACxD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC9B,iEAAU,CAAC,KAAK,CAAC,EAAE;YACjB,IAAI,KAAK,EAAE;gBACT,QAAQ,KAAK,CAAC,MAAM,EAAE;oBACpB,KAAK,GAAG;wBACN,IAAG,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE;4BACrB,MAAM,gBAAgB,GAAG,EAAE,CAAC;4BAC5B,KAAK,MAAM,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE;gCACpC,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;oCAC3B,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;iCAC/C;6BACF;4BACD,MAAM,gBAAgB,CAAC,IAAI,EAAE,CAAC;yBAC/B;6BAAM,IAAI,OAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,QAAQ,EAAE;4BAC3C,KAAK,CAAC,UAAU,GAAG,aAAa;4BAChC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;yBACnD;6BAAM;4BACL,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;yBAC9C;wBACD,MAAM;oBACR,KAAK,GAAG;wBACN,KAAK,CAAC,UAAU,GAAG,cAAc;wBACjC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;wBAClD,MAAM;oBACR,KAAK,GAAG;wBACN,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;wBACxC,MAAM;oBACR,KAAK,GAAG;wBACN,MAAM,gBAAgB,GAAqB,EAAC,KAAK,EAAE,EAAC,KAAK,EAAE,KAAK,CAAC,KAAK,EAAC,EAAC,CAAC;wBACzE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,eAAe,EAAE,gBAAgB,CAAC,CAAC;wBAC7D,MAAM;oBACR;wBACE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAAiC,CAAC,CAAC;wBACrD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;wBACnB,MAAM;iBACT;aACF;YACD,OAAO,uDAAU,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC,CACH;IACH,CAAC;CACF;;YAnD0B,sDAAM;YACxB,wDAAa;;AAIT,gBAAgB;IAD5B,gEAAU,EAAE;GACA,gBAAgB,CA8C5B;AA9C4B;;;;;;;;;;;;;ACb7B;AAAe,6NAA8J,eAAe,onBAAonB,KAAK,eAAe,2BAA2B,E;;;;;;;;;;;;;;;;;;;;ACApzB;AAEA;AAEN;AACyB;IAKjD,UAAU,SAAV,UAAU;IACrB,YAAoB,cAA8B,EAAU,MAAqB;QAA7D,mBAAc,GAAd,cAAc,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAe;IAAG,CAAC;IAErF,WAAW;QACT,OAAO,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAC1C,0DAAG,CAAC,IAAI,CAAC,EAAE;YACT,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,EAAE;gBAC9E,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC;gBAChD,OAAO,KAAK,CAAC;aACd;QACH,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;CACF;;YApBQ,wEAAc;YAHd,wDAAa;;AAQT,UAAU;IAHtB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,UAAU,CAetB;AAfsB;;;;;;;;;;;;;;;;;;;;ACV2B;AACP;AACgB;IAM9C,YAAY,SAAZ,YAAY;IAEvB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QADpC,YAAO,GAAG,wEAAW,CAAC,MAAM,CAAC;IACW,CAAC;IAEzC,iBAAiB;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,IAAI,CAAC,OAAO,GAAG,wBAAwB,CAAC,CAAC;IACjF,CAAC;IACD,eAAe,CAAC,QAAgB,EAAE,KAAe;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,mBAAmB,GAAG,QAAQ,GAAG,SAAS,GAAG,KAAK,EAAE,EAAE,CAAC,CAAC;IAC/F,CAAC;CACF;;YAlBQ,+DAAU;;AAQN,YAAY;IAHxB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,YAAY,CAUxB;AAVwB;;;;;;;;;;;;;ACRzB;AAAe,+UAAgR,05CAA05C,OAAO,qVAAqV,E;;;;;;;;;;;;;;;;;;;;;;;;ACAn+D;AACe;AACsB;AAExB;IAOlD,uBAAuB,SAAvB,uBAAuB;IAGlC,YAAoB,YAA0B,EAAU,YAA2B;QAA/D,iBAAY,GAAZ,YAAY,CAAc;QAAU,iBAAY,GAAZ,YAAY,CAAe;IAAI,CAAC;IAExF,QAAQ;QACN,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IACD,iBAAiB;QACf,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACtD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,IAAU;QACvB,MAAM,MAAM,GAAG;YACb,KAAK,EAAE,uBAAuB;YAC9B,YAAY,EAAE;gBACZ,IAAI;gBACJ,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;aAChC;SACF;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,oGAAmB,EAAE,MAAM,CAAC,CAAC;QACtE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YACpE,MAAM,aAAa,GAAG;gBACpB,KAAK,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,EAAO,EAAE,EAAE,CAAC,EAAE,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAO,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;aACtF,CAAC;YACF,IAAI,aAAa,EAAE;gBACjB,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;oBACnF,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC;gBACvC,CAAC,CAAC;aACH;QACH,CAAC,CAAC;IACJ,CAAC;IAEO,aAAa,CAAC,IAAS;QAC7B,MAAM,KAAK,GAAQ,EAAE,CAAC;QACtB,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;QAC7B,MAAM,cAAc,GAAU;YAC5B,EAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC;YAC/B,EAAC,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,EAAC;YACvC,EAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAC;SAClC,CAAC;QAEF,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC5B,IAAI,OAAO,GAAG,KAAK,CAAC;YACpB,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;gBAChC,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;oBAC1B,OAAO,GAAG,IAAI,CAAC;oBACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACjB,MAAM;iBACP;aACF;YACD,IAAI,CAAC,OAAO,EAAE;gBACZ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAClB;QACH,CAAC,CAAC;QACF,OAAO,KAAK,CAAC;IACf,CAAC;CAEF;;YArEQ,2EAAY;YAHA,kEAAc;;AAUtB,uBAAuB;IALnC,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,4FAA+C;;KAEhD,CAAC;GACW,uBAAuB,CA8DnC;AA9DmC;;;;;;;;;;;;;ACXpC;AAAe,2HAA4D,wBAAwB,mUAAmU,+PAA+P,kOAAkO,gLAAgL,gBAAgB,0iDAA0iD,gCAAgC,gCAAgC,8BAA8B,6BAA6B,E;;;;;;;;;;;;ACA5uF;AAAe,6EAAc,yBAAyB,KAAK,+CAA+C,2TAA2T,E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7V;AACf;AAGqC;AAG3B;AACE;AACF;AAE7B;IAOzB,qBAAqB,SAArB,qBAAqB;IAS9B,YAAmB,QAAyB,EAAU,KAAqB,EACjE,cAA8B,EAAU,cAA8B,EACtE,MAAc;QAFL,aAAQ,GAAR,QAAQ,CAAiB;QAAU,UAAK,GAAL,KAAK,CAAgB;QACjE,mBAAc,GAAd,cAAc,CAAgB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QACtE,WAAM,GAAN,MAAM,CAAQ;QALxB,aAAQ,GAAa,EAAE,CAAE;QAMrB,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;QACnF,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,gBAAgB,GAAG,GAAG,EAAE,CAAC,KAAK,CAAC;IAC/D,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC5B,CAAC,CAAC;QAEF,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACxC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAC9D,CAAC,CAAC;QAEF,IAAI,CAAC,cAAc,GAAG;YACpB;gBACE,KAAK,EAAE,OAAO;gBACd,MAAM,EAAE,OAAO;gBACf,YAAY,EAAE,GAAG;gBACjB,iBAAiB,EAAE,CAAC;gBACpB,cAAc,EAAE,uEAAmB,CAAC,KAAK;gBACzC,OAAO,EAAE,KAAK;aACf;SACF;QACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;IACxC,CAAC;IACD,SAAS;QACP,MAAM,SAAS,GAAG,EAAE,CAAC;QACrB,yFAAyF;QACzF,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YACrC,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;gBACtC,SAAS,CAAC,IAAI,CAAC;oBACb,KAAK,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG;oBACjB,MAAM,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG;oBAClB,GAAG,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG;iBAChB,CAAC,CAAC;aACJ;SACF;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC9E,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC3B,CAAC,CAAC;IACJ,CAAC;IACD,SAAS,CAAC,KAAa;QACnB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;IAC9C,CAAC;IACD,cAAc,CAAC,IAAkB;QAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAG,IAAI,CAAC,SAAS,CAAC,OAAO,KAAK,UAAU,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAC;YACnE,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SAC5E;aAAK;YACJ,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC;SACzC;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC;IAC1C,CAAC;CACJ;;YAlFQ,iFAAe;YAPf,8DAAc;YAMd,+EAAc;YAEd,+EAAc;YARE,sDAAM;;;yBAkB5B,uDAAS,SAAC,YAAY,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;;AAD5B,qBAAqB;IALjC,+DAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,0FAA6C;;KAE9C,CAAC;GACW,qBAAqB,CAwEjC;AAxEiC;;;;;;;;;;;;;;;;;;;;;AChB4B;AACX;AACR;AACR;IAMtB,SAAS,SAAT,SAAS;IACpB,YAAoB,eAA+B,EAAU,MAAqB;QAA9D,oBAAe,GAAf,eAAe,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAe;IAElF,CAAC;IACD,WAAW;QACT,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAC3C,0DAAG,CAAC,IAAI,CAAC,EAAE;YACT,IAAG,IAAI;gBAAE,OAAO,IAAI,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;YACzC,OAAO,KAAK,CAAC;QAEjB,CAAC,CAAC,CACH;IACH,CAAC;CACA;;YAvBQ,wEAAc;YAEd,wDAAa;;AAOT,SAAS;IAJrB,gEAAU,CAAC;QACV,UAAU,EAAC,MAAM;KAClB,CAAC;GAEW,SAAS,CAcrB;AAdqB;AAcrB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACzBgD;AACP;AAC8B;AAClC;AACD;AACqB;AAIoB;IAKlE,cAAc,SAAd,cAAc;IAOzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QANpC,YAAO,GAAG,wEAAW,CAAC,MAAM,CAAC;QAC7B,WAAM,GAAG,wEAAW,CAAC,MAAM,CAAC;QAEpB,wBAAmB,GAAG,IAAI,oDAAe,CAAY,EAAE,CAAC,CAAC;QACjE,mBAAc,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC;IAEjB,CAAC;IAEzC,mBAAmB,CAAC,IAAU,EAAC,aAAqB;QAClD,IAAI,CAAC,aAAa,GAAG,IAAI,uEAAoB,EAAE;aAC5C,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,eAAe,GAAG,aAAa,EAAE;YACtD,kBAAkB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK;SACrC,CAAC;aACD,sBAAsB,EAAE;aACxB,KAAK,EAAE;QAER,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;QAE9D,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,sBAAsB,EAAE,QAAQ,CAAC,EAAE;YACvD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC1C,CAAC,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,YAAY,EAAE,OAAO,CAAC,EAAE;YAC5C,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACrD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,GAAG,QAAQ,EAAE,OAAO,CAAC,CAAC;YACvD,CAAC,CAAC;QACJ,CAAC,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC,KAAY,EAAE,EAAE;YACrD,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,aAAa,CAAC,EAAE;gBAC7D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;oBACrD,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;wBACzB,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;4BACrB,OAAO,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;yBACxC;oBACH,CAAC,CAAC;oBACF,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;gBAC/C,CAAC,CAAC;aACH;QACH,CAAC,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,cAAc,EAAE,CAAC,KAAY,EAAE,EAAE;YACrD,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,KAAK,aAAa,CAAC,EAAE;gBAC7D,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;oBACrD,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;wBACzB,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;4BACrB,OAAO,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;yBACxC;oBACH,CAAC,CAAC;oBACF,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;gBAC/C,CAAC,CAAC;aACH;QACH,CAAC,CAAC;IACN,CAAC;IAED,iBAAiB;QACf,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;SAC3B;IACH,CAAC;IAED,WAAW,CAAC,UAAkB,EAAE,QAAgB,EAAE,SAAc;QAC9D,IAAI,MAAM,GAAG,+EAAoB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QACxD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QAC/C,OAAO,6EAAkB,CAAY,IAAI,CAAC,OAAO,GAAG,UAAU,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IACrF,CAAC;IAED,gBAAgB,CAAC,QAAgB;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,OAAO,GAAG,kBAAkB,GAAG,QAAQ,CAAC,CAAC;IAChF,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,QAAgB,EAAE,OAAe;QACjD,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,aAAa,EAAE,EAAC,iBAAiB,EAAE,QAAQ,EAAE,OAAO,EAAC,CAAC;aACpF,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,aAAa,CAAC,EAAU;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,WAAW,GAAG,EAAE,CAAC,CAAC;IAC3D,CAAC;CACF;;YA9FQ,+DAAU;;AAcN,cAAc;IAH1B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,cAAc,CAgF1B;AAhF0B;;;;;;;;;;;;;ACd3B;AAAe,6GAA8C,uKAAuK,E;;;;;;;;;;;;ACApO;AAAe,6GAA8C,uIAAuI,E;;;;;;;;;;;;;;;;;;;;;;ACAlJ;AAQiB;IAOtD,mBAAmB,SAAnB,mBAAmB;IAO9B,YAAoB,aAA6B;QAA7B,kBAAa,GAAb,aAAa,CAAgB;QAFjD,eAAU,GAAG,CAAC,EAAC,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAC,EAAE,EAAC,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAC,CAAC,CAAC;QAGtF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;IACvD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAClD,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAClE,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC;YAC/B,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;QACxC,CAAC,CAAC;IACJ,CAAC;IAED,YAAY;QACV,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;QACvD,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,WAAW,CAAC,KAAU;QACpB,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC;QACxC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAClD,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;CACF;;YAxCQ,+EAAc;;AAOV,mBAAmB;IAL/B,+DAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,wFAA2C;;KAE5C,CAAC;GACW,mBAAmB,CAiC/B;AAjC+B;;;;;;;;;;;;;ACfhC;AAAe,kGAAmC,wBAAwB,KAAK,aAAa,yBAAyB,+BAA+B,wBAAwB,KAAK,+CAA+C,2fAA2f,E;;;;;;;;;;;;ACA3tB;AAAe,2dAA4Z,wCAAwC,WAAW,gBAAgB,qMAAqM,aAAa,IAAI,gBAAgB,yHAAyH,YAAY,iIAAiI,6BAA6B,kIAAkI,sCAAsC,4YAA4Y,gBAAgB,y1CAAy1C,E;;;;;;;;;;;;;;;;;;;;;;;ACCl2F;AAEW;AACE;IAOlD,YAAY,SAAZ,YAAY;IAIvB,YAAoB,cAA8B,EAAU,QAAyB;QAAjE,mBAAc,GAAd,cAAc,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAiB;QAHrF,UAAK,GAAG,gBAAgB,CAAC;IAG+D,CAAC;IAEzF,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,cAAc;QACZ,MAAM,IAAI,GAAS,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAK,CAAC,CAAC;QACrE,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YACzC,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;SACzC;IACD,CAAC;CAEJ;;YA1BQ,wEAAc;YACd,0EAAe;;AAOX,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,gFAAmC;;KAEpC,CAAC;GACW,YAAY,CAkBxB;AAlBwB;;;;;;;;;;;;;ACXzB;AAAe,qNAAsJ,E;;;;;;;;;;;;ACArK;AAAe,gFAAiB,qBAAqB,mBAAmB,oBAAoB,KAAK,oBAAoB,wBAAwB,KAAK,sBAAsB,2BAA2B,+BAA+B,yBAAyB,KAAK,+CAA+C,+tBAA+tB,E;;;;;;;;;;;;ACA9gC;AAAe,6GAA8C,+JAA+J,E;;;;;;;;;;;;ACA5N;AAAe,sJAAuF,wCAAwC,WAAW,gBAAgB,4KAA4K,iBAAiB,+VAA+V,iBAAiB,mCAAmC,OAAO,0aAA0a,gBAAgB,IAAI,YAAY,yEAAyE,aAAa,yBAAyB,E;;;;;;;;;;;;ACAzzC;AAAe,gFAAiB,qBAAqB,mBAAmB,oBAAoB,KAAK,oBAAoB,wBAAwB,KAAK,sBAAsB,2BAA2B,+BAA+B,yBAAyB,KAAK,+CAA+C,2uBAA2uB,E;;;;;;;;;;;;ACA1hC;AAAe,6GAA8C,mKAAmK,E;;;;;;;;;;;;;;;;;;;ACArL;AAQa;AACP;IAGpC,kBAAkB,SAAlB,kBAAkB;IAE7B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEhD,SAAS,CAAC,OAA6B,EAAE,IAAiB;QACxD,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QAExB,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC9B,+DAAQ,CAAC,GAAG,EAAE;YACZ,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QAC1B,CAAC,CAAC,CACH;IACH,CAAC;CACF;;YAjBQ,kEAAW;;AAIP,kBAAkB;IAD9B,gEAAU,EAAE;GACA,kBAAkB,CAa9B;AAb8B;;;;;;;;;;;;;ACZ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8D;AACzB;AACmB;AAEjD,SAAS,kBAAkB,CAAI,GAAQ,EAAE,MAAW,EAAE,IAAgB;IAC3E,MAAM,eAAe,GAAuB,IAAI,kEAAe,EAAK,CAAC;IACrE,OAAO,IAAI,CAAC,GAAG,CAAI,GAAG,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC,CAAC,IAAI,CAC3D,0DAAG,CAAC,QAAQ,CAAC,EAAE;;QACX,eAAe,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAK,CAAE;QAC3C,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;YAC/C,eAAe,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,OAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,mCAAI,EAAE,CAAC,CAAC;SACnF;QACD,OAAO,eAAe,CAAC;IACzB,CAAC,CAAC,CACH,CAAC;AACJ,CAAC;AAEM,SAAS,oBAAoB,CAAC,UAAkB,EAAE,QAAgB;IACvE,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;IAE9B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC5D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;IAExD,OAAO,MAAM,CAAC;AAChB,CAAC;;;;;;;;;;;;;ACxBD;AAAe,wQAAyM,E;;;;;;;;;;;;;;;;;;;;;;;;ACA7I;AAChC;AAEgB;AAEnC;AACmB;AAEQ;AACA;AAG4B;IAIlE,cAAc,SAAd,cAAc;IAQzB,YAAoB,IAAiB,EAAU,cAA8B;QAAzD,SAAI,GAAJ,IAAI,CAAa;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAP7E,YAAO,GAAG,wEAAW,CAAC,MAAM,CAAC;QAC7B,YAAO,GAAa,EAAE,CAAC;QACvB,gBAAW,GAAG,IAAI,GAAG,EAAE,CAAC;QAMtB,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC9D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACtB,IAAI,CAAC,UAAU,GAAG,IAAI,6DAAU,CAAC,IAAI,CAAC,CAAC;QAC3C,CAAC,CAAC;IACF,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,aAAa,CAAC,MAAmB;QAC/B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;IAC3B,CAAC;IAED,eAAe;QACb,IAAI,CAAC,UAAU,GAAG,IAAI,6DAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5C,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAGD,UAAU,CAAC,UAAsB;QAC/B,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QACzE,IAAG,QAAQ,EAAC;YACV,OAAO,+CAAE,CAAC,QAAQ,CAAC,CAAC;SACrB;QACD,IAAI,MAAM,GAAG,+EAAoB,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;QAE9E,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC9D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC9D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACnD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,EAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAGrD,OAAO,6EAAkB,CAAW,IAAI,CAAC,OAAO,GAAG,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC;aAC7E,IAAI,CAAC,0DAAG,CAAC,QAAQ,CAAC,EAAE;YACnB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC;YACpE,OAAO,QAAQ,CAAC;QAClB,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,SAAS,CAAC,QAAgB;QACxB,MAAM,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;aAC5C,MAAM,CAAC,CAAC,GAAG,EAAC,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;aACjD,IAAI,CAAC,CAAC,MAAc,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC;QAExD,IAAG,MAAM,EAAC;YACR,OAAO,+CAAE,CAAC,MAAM,CAAC,CAAC;SACnB;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC;IACnE,CAAC;IAED,YAAY,CAAC,MAAc;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,EAAE,MAAM,CAAC,CAAC,IAAI,CACvD,0DAAG,CAAC,GAAG,EAAE;YACP,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC3C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;QAC/B,CAAC,CAAC,CACH;IACH,CAAC;IAED,YAAY,CAAC,OAAe;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,uBAAuB,GAAG,OAAO,EAAE,EAAE,CAAC,CAAC;IAC7E,CAAC;IAED,WAAW,CAAC,OAAe;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,qBAAqB,GAAG,OAAO,CAAC,CAAC;IAE1E,CAAC;IAED,OAAO,CAAC,QAAgB;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,QAAQ,EAAE,EAAE,CAAC,CAAC;IAChE,CAAC;IAED,QAAQ,CAAC,SAAiB,EAAE,UAAiB,EAAE,QAAe;QAC5D,IAAI,MAAM,GAAG,+EAAoB,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QACxD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC;QAC9C,OAAO,6EAAkB,CAAoB,IAAI,CAAC,OAAO,GAAG,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1F,CAAC;CAEA;;YAzGM,+DAAU;YASV,+DAAc;;AAOV,cAAc;IAH1B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,cAAc,CAyFxB;AAzFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBc;AACiB;AACe;AAEjB;AACT;AACgC;AAC5B;AACe;AACZ;AACY;AACgB;AACM;AAC/B;AACS;AAEV;AACyB;AACZ;AACM;AACS;AACF;AACjB;AACiB;AACnC;AAC0B;AACY;AACP;AACA;AACgB;AACd;AACZ;AACwB;AACG;AACd;AACS;IAgD7E,SAAS,SAAT,SAAS;CAAI;AAAb,SAAS;IA5CrB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,2DAAY;YACZ,+DAAY;YACZ,kEAAa;YACb,+EAAiB;YACjB,+FAAmB;YACnB,qGAAqB;YACrB,sEAAc;YACd,+EAAiB;YACjB,8FAAmB;YACnB,wFAAiB;YACjB,iGAAoB;YACpB,+FAAmB;YACnB,+FAAmB;YACnB,kGAAoB;YACpB,0FAAkB;YAClB,0FAAkB;YAClB,2GAAuB;YACvB,6FAAmB;YACnB,gFAAgB;YAChB,yGAAuB;YACvB,4GAAwB;YACxB,8FAAmB;YACnB,uGAAsB;SACvB;QACD,OAAO,EAAE;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,4FAAuB;YACvB,0DAAW;YACX,kEAAmB;YACnB,oEAAY;YACZ,6DAAgB;SAEjB;QACD,SAAS,EAAE;YACT,EAAC,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,iFAAgB,EAAE,KAAK,EAAE,IAAI,EAAC;YACrE,EAAC,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,6EAAc,EAAE,KAAK,EAAE,IAAI,EAAC;YACnE,EAAC,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,qFAAkB,EAAE,KAAK,EAAE,IAAI,EAAC;SACxE;QACD,SAAS,EAAE,CAAC,2DAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnFmC;AACV;AACT;AAI6B;AACA;AACR;IAO9C,oBAAoB,SAApB,oBAAoB;IAM/B,YAAoB,cAA8B,EAAU,aAA6B;QAArE,mBAAc,GAAd,cAAc,CAAgB;QAAU,kBAAa,GAAb,aAAa,CAAgB;QAHzF,wBAAmB,GAAG,KAAK,CAAC;QAC5B,YAAO,GAAG,wEAAW,CAAC,MAAM,CAAC;QAG3B,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;IACrF,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,YAAY,CAAC,CAAM;QACjB,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;IAC/B,CAAC;IAED,YAAY,CAAC,KAAY;QACvB,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YACvD,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC;YAC/B,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9C,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC;YACjC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;gBAC7B,IAAG,CAAC,CAAC,MAAM;oBAAE,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;gBAC9B,IAAG,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE;oBAAE,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;YACxC,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,OAAe;QACzB,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YACrD,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,CAAC;QACzE,CAAC,CAAC;IACJ,CAAC;IACD,kBAAkB;QAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,4DAAY,CAAC;YAC/B,GAAG,EAAE,IAAI,CAAC,OAAO,GAAG,iBAAiB;YACrC,SAAS,EAAE,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK;YACtC,OAAO,EAAE,IAAI;YACb,eAAe,EAAE,CAAC,OAAO,CAAC;YAC1B,iBAAiB,EAAE,IAAI;YACvB,UAAU,EAAE,KAAK;YACjB,WAAW,EAAC,EAAE,GAAE,IAAI,GAAE,IAAI;SAC3B,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,iBAAiB,GAAG,CAAC,IAAI,EAAE,EAAE;YACzC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC/B,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,aAAa,GAAG,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE;YAChE,IAAG,QAAQ,EAAE;gBACX,MAAM,KAAK,GAAU,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBAC1C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC/B,IAAG,KAAK,CAAC,MAAM,EAAC;oBACd,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC;oBAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC;oBACjC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC/C;aACF;QACH,CAAC;IACH,CAAC;CAGF;;YAvEQ,+EAAc;YACd,+EAAc;;;qBASpB,mDAAK;;AADK,oBAAoB;IALhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,yFAA4C;;KAE7C,CAAC;GACW,oBAAoB,CA8DhC;AA9DgC;;;;;;;;;;;;;;;;;;;ACfU;AAImB;IAKjD,sBAAsB,SAAtB,sBAAsB;IAE/B,YAAoB,aAA6B;QAA7B,kBAAa,GAAb,aAAa,CAAgB;IAEjD,CAAC;IAED,OAAO,CAAC,KAA6B;QACjC,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAE,CAAC,CAAC;IACzE,CAAC;CAEJ;;YAfQ,wEAAc;;AAKV,sBAAsB;IAHlC,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,sBAAsB,CAUlC;AAVkC;;;;;;;;;;;;;ACTnC;AAAe,6GAA8C,uKAAuK,E;;;;;;;;;;;;ACApO;AAAe,6GAA8C,mKAAmK,E;;;;;;;;;;;;;;;;;;;;;;ACAlK;AACG;IAOpD,kBAAkB,SAAlB,kBAAkB;IAI7B,YAA2B,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;QAHtC,UAAK,GAAW,EAAE,CAAC;QACnB,SAAI,GAAG,MAAM,CAAC;QAGrB,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI;IACpC,CAAC;IACF,UAAU,CAAC,GAAQ;IAEnB,CAAC;IACD,gBAAgB,CAAC,EAAO;IAExB,CAAC;IACD,iBAAiB,CAAC,EAAO;IAEzB,CAAC;IACD,gBAAgB,CAAE,UAAmB;IAErC,CAAC;IAED,QAAQ;IACR,CAAC;CACF;;YA7B8B,wDAAS,uBAWzB,kDAAI;;;oBAHhB,mDAAK;mBACL,mDAAK;;AAFK,kBAAkB;IAL9B,+DAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,uFAA0C;;KAE3C,CAAC;GACW,kBAAkB,CAsB9B;AAtB8B;;;;;;;;;;;;;;;;;;;;;;;ACRmB;AAGY;IAOjD,cAAc,SAAd,cAAc;IAOzB,YAAoB,aAA6B;QAA7B,kBAAa,GAAb,aAAa,CAAgB;QALjD,cAAS,GAAG,OAAO,CAAC;QACpB,eAAU,GAAG,CAAC,CAAC;QACf,aAAQ,GAAG,CAAC,CAAC;IAGwC,CAAC;IAEtD,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC/F,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC;YAC/B,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;QACxC,CAAC,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,KAAU;QACpB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC;QAC7B,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;CAEF;;YAhCQ,wEAAc;;AAOV,cAAc;IAL1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,kFAAqC;;KAEtC,CAAC;GACW,cAAc,CAyB1B;AAzB0B;;;;;;;;;;;;;ACV3B;AAAe,6GAA8C,mKAAmK,E;;;;;;;;;;;;ACAhO;AAAe,wIAAyE,OAAO,wDAAwD,SAAS,8HAA8H,WAAW,wFAAwF,eAAe,oBAAoB,E;;;;;;;;;;;;;;;;;;;;;;;;ACAlX;AACY;AAGxB;AACK;IAM9B,YAAY,SAAZ,YAAY;IAGrB,YAAmB,cAA8B,EAAU,MAAc,EAAU,MAAoB;QAApF,mBAAc,GAAd,cAAc,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,WAAM,GAAN,MAAM,CAAc;QAFvG,UAAK,GAAQ,EAAE,CAAC;IAE0F,CAAC;IAE3G,QAAQ;IAER,CAAC;IACD,KAAK;QACH,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACzD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACxC,CAAC,CAAC;IACJ,CAAC;IAEH,MAAM;QACJ,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;CACF;;YA5BQ,wEAAc;YAGf,sDAAM;YACL,wDAAa;;AAMT,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,SAAS;QACnB,gFAAmC;;KAEpC,CAAC;GACW,YAAY,CAkBxB;AAlBwB;;;;;;;;;;;;;ACXzB;AAAe,0vCAA2rC,sCAAsC,WAAW,eAAe,mFAAmF,2CAA2C,m+BAAm+B,E;;;;;;;;;;;;;;;;;;;;;;;;ACAlzE;AACd;AAEwB;AACE;IAOxD,mBAAmB,SAAnB,mBAAmB;IAG9B,YAAoB,aAA6B,EAAU,MAAqB,EACvE,QAAyB;QADd,kBAAa,GAAb,aAAa,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAe;QACvE,aAAQ,GAAR,QAAQ,CAAiB;IAAI,CAAC;IAEvC,QAAQ;IAER,CAAC;IAED,OAAO,CAAC,MAAc;QACpB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YACzD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,iBAAiB,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;QAC1D,CAAC,CAAC;IACJ,CAAC;CACF;;YAvBQ,+EAAc;YAFd,wDAAa;YAGb,iFAAe;;;qBAQrB,mDAAK;;AADK,mBAAmB;IAL/B,+DAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,wFAA2C;;KAE5C,CAAC;GACW,mBAAmB,CAe/B;AAf+B;;;;;;;;;;;;;;;;;;;;;;;;ACXW;AACF;AACgC;AAC9B;AACJ;AACD;AACqB;IAM9C,eAAe,SAAf,eAAe;IAM1B,YAAoB,MAAqB,EAAU,MAAc;QAA7C,WAAM,GAAN,MAAM,CAAe;QAAU,WAAM,GAAN,MAAM,CAAQ;QALjE,WAAM,GAAG,wEAAW,CAAC,MAAM,CAAC;QAEpB,sBAAiB,GAAG,IAAI,oDAAe,CAAW,EAAE,CAAC,CAAC;QAC9D,iBAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;IAEgB,CAAC;IAEtE,mBAAmB,CAAE,IAAU;QAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,uEAAoB,EAAE;aAC5C,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,UAAU,EAAE;YACjC,kBAAkB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK;SACrC,CAAC;aACD,sBAAsB,EAAE;aACxB,KAAK,EAAE;QAEV,IAAI,CAAC,aAAa;aACf,KAAK,EAAE;aACP,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;QAEtC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,cAAc,EAAE,QAAQ,CAAC,EAAE;YAC/C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;gBACpD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,GAAG,SAAS,EAAE,QAAQ,CAAC,CAAC;YACvD,CAAC,CAAC;QACJ,CAAC,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,eAAe,EAAE,QAAQ,CAAC,EAAE;YAChD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;gBACpD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;YACzE,CAAC,CAAC;QACJ,CAAC,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,gBAAgB,EAAE,CAAC,SAAmB,EAAE,EAAE;YAC9D,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzC,CAAC,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,oBAAoB,EAAE,CAAC,EAAC,QAAQ,EAAE,OAAO,EAAC,EAAE,EAAE;YAClE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,6BAA6B,CAAC;iBACtD,KAAK;iBACL,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC;iBACb,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC;QACnF,CAAC,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/D,CAAC;CACF;;YAxDQ,wDAAa;YAFb,sDAAM;;AAWF,eAAe;IAH3B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,eAAe,CA+C3B;AA/C2B;;;;;;;;;;;;;ACZ5B;AAAe,uLAAwH,MAAM,0FAA0F,OAAO,8GAA8G,OAAO,0GAA0G,OAAO,iBAAiB,wDAAwD,iHAAiH,OAAO,gBAAgB,wDAAwD,mJAAmJ,E;;;;;;;;;;;;ACEh3B;AAAA;AAAO,MAAM,UAAU;IAQnB,YAAY,IAAU;QANtB,WAAM,GAAG,EAAE,CAAC;QACZ,WAAM,GAAG,EAAE,CAAC;QACZ,eAAU,GAAG,CAAC,CAAC;QACf,aAAQ,GAAG,CAAC,CAAC;QACb,YAAO,GAAG,YAAY,CAAC;QAGnB,IAAI,CAAC,MAAM,GAAG,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC;IACvE,CAAC;CACJ;;;;;;;;;;;;;ACbD;AAAe,6GAA8C,2KAA2K,E;;;;;;;;;;;;ACAxO;AAAe,6GAA8C,2KAA2K,E;;;;;;;;;;;;ACAxO;AAAe,iFAAkB,mCAAmC,mCAAmC,6CAA6C,qBAAqB,KAAK,mBAAmB,mCAAmC,mCAAmC,6CAA6C,SAAS,2BAA2B,yBAAyB,2BAA2B,KAAK,uBAAuB,2BAA2B,qBAAqB,gBAAgB,iBAAiB,0BAA0B,2BAA2B,mBAAmB,KAAK,+CAA+C,mBAAmB,kBAAkB,KAAK,kBAAkB,yCAAyC,KAAK,6BAA6B,YAAY,YAAY,cAAc,cAAc,KAAK,oBAAoB,iDAAiD,+BAA+B,SAAS,+CAA+C,u8DAAu8D,E;;;;;;;;;;;;;;;;;;;;;ACAt2F;IAOrC,mBAAmB,SAAnB,mBAAmB;IAE9B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;;AAPY,mBAAmB;IAL/B,+DAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,wFAA2C;;KAE5C,CAAC;GACW,mBAAmB,CAO/B;AAP+B;;;;;;;;;;;;;ACPhC;AAAe,oRAAqN,OAAO,iKAAiK,OAAO,2BAA2B,E;;;;;;;;;;;;ACA9a;AAAe,88BAA+4B,sDAAsD,oDAAoD,sDAAsD,4DAA4D,yHAAyH,2IAA2I,mBAAmB,OAAO,wBAAwB,iBAAiB,+MAA+M,kDAAkD,qCAAqC,2BAA2B,mCAAmC,uCAAuC,yNAAyN,+CAA+C,qCAAqC,wBAAwB,mCAAmC,oCAAoC,wEAAwE,+BAA+B,mkBAAmkB,gCAAgC,gCAAgC,8BAA8B,6BAA6B,E;;;;;;;;;;;;ACA7/F;AAAe,uKAAwG,wCAAwC,WAAW,gBAAgB,wZAAwZ,aAAa,IAAI,gBAAgB,yHAAyH,YAAY,iIAAiI,6BAA6B,kIAAkI,uCAAuC,8fAA8f,gBAAgB,sGAAsG,qBAAqB,iEAAiE,mBAAmB,mKAAmK,kBAAkB,4OAA4O,qBAAqB,uRAAuR,E;;;;;;;;;;;;;;;;;;;;;;;;;ACA95E;AAEhC;AACL;AAG6B;AACA;IAOtD,mBAAmB,SAAnB,mBAAmB;IAW9B,YAAoB,cAA8B,EAAU,aAA6B,EAC/E,MAAqB;QADX,mBAAc,GAAd,cAAc,CAAgB;QAAU,kBAAa,GAAb,aAAa,CAAgB;QAC/E,WAAM,GAAN,MAAM,CAAe;QAC3B,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;IACvF,CAAC;IATgD,kBAAkB,CAAC,MAAW;QAC7E,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;YACvB,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;SAC3B;IACH,CAAC;IAOD,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAClE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC,CAAC;IACJ,CAAC;IAED,YAAY;QACV,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YAC1D,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;YACpD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACnC,CAAC,CAAC;IACJ,CAAC;CACF;;YAxCQ,+EAAc;YACd,+EAAc;YALd,wDAAa;;;uBAanB,uDAAS,SAAC,UAAU;iCAIpB,0DAAY,SAAC,qBAAqB,EAAE,CAAC,QAAQ,CAAC;;AALpC,mBAAmB;IAL/B,+DAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,wFAA2C;;KAE5C,CAAC;GACW,mBAAmB,CAgC/B;AAhC+B;;;;;;;;;;;;;;;;;;;ACdW;AAImB;IAKjD,0BAA0B,SAA1B,0BAA0B;IAErC,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAG,CAAC;IAEtD,aAAa,CAAC,SAA8B;QAC1C,IAAI,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE;YAC5B,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC;SACtC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;CAEF;;YAhBQ,wEAAc;;AAKV,0BAA0B;IAHtC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,0BAA0B,CAWtC;AAXsC;;;;;;;;;;;;;;;;;;;;;;;ACTW;AACD;IAOpC,sBAAsB,SAAtB,sBAAsB;IAOjC,YAAmB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAE9C,QAAQ;IACR,CAAC;IAED,OAAO;QACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;CAEF;;YA7BQ,8DAAU;;AAON,sBAAsB;IALlC,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,2FAA8C;;KAE/C,CAAC;GACW,sBAAsB,CAsBlC;AAtBkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRM;AACc;AACD;AAC4B;AACM;AAC/B;AACS;AACjB;AACgC;AACN;AACS;AACF;AACG;AACN;AACC;AAC7B;AAEnD,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAa,EAAC;IACpC;QACE,IAAI,EAAE,EAAE;QACR,qBAAqB,EAAE,QAAQ;QAC/B,WAAW,EAAE,CAAC,4DAAS,CAAC;QACxB,QAAQ,EAAE;YACR,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,8FAAmB,EAAC;YACjD,EAAC,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,oGAAqB,EAAE,OAAO,EAAE,EAAC,MAAM,EAAE,2FAAsB,EAAC,EAAC;YACxG,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,+FAAmB,EAAE,aAAa,EAAE,CAAC,iGAA0B,CAAC,EAAC;YAClG,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAC;YAC1C,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAC;YAChD,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,6FAAmB,EAAE,WAAW,EAAE,CAAC,+DAAU,CAAC,EAAC;SAC3E;KACF;IACD,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,6FAAmB,EAAC;IAChD,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,wFAAiB,EAAC;IACjD,EAAC,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,iGAAoB,EAAC;IACvD,EAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,wFAAiB,EAAC,SAAS,EAAC,MAAM,EAAC;CAC5D,CAAC;IAQW,gBAAgB,SAAhB,gBAAgB;CAAI;AAApB,gBAAgB;IAJ5B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,gBAAgB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;AC5Cc;AACsB;AAC/B;AACyD;IAK9E,cAAc,SAAd,cAAc;IAGzB,YAAoB,YAA4B;QAA5B,iBAAY,GAAZ,YAAY,CAAgB;IAAI,CAAC;IAErD,OAAO,CAAC,KAAK,GAAG,cAAc,EAC5B,OAAO,GAAG,mCAAmC,EAC7C,SAAS,GAAG,IAAI,EAChB,aAAa,GAAG,QAAQ;QACtB,MAAM,MAAM,GAAG;YACb,YAAY,EAAE;gBACZ,KAAK;gBACL,OAAO;gBACP,SAAS;gBACT,aAAa;aACd;SACF;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,sGAAsB,EAAE,MAAM,CAAC,CAAC;QAEzE,OAAO,IAAI,+CAAU,CAAU,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACnD,CAAC;IAEO,SAAS;QACf,OAAO,CAAC,QAAc,EAAE,EAAE;YACxB,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,EAAE;gBAC1D,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBAC9C,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACtB,CAAC,CAAC,CAAC;YAEH,OAAO;gBACL,WAAW;oBACT,WAAW,CAAC,WAAW,EAAE,CAAC;gBAC5B,CAAC;aACF;QACH,CAAC;IACH,CAAC;CACJ;;YA3CoB,kEAAc;;AAOtB,cAAc;IAH1B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,cAAc,CAoC1B;AApC0B;;;;;;;;;;;;;;;;;;;;;;;ACR4C;AACtB;IAQpC,mBAAmB,SAAnB,mBAAmB;IAK9B,YAAmB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAJhC,wBAAmB,GAAG,IAAI,0DAAY,EAAE,CAAC;IAIL,CAAC;IAE9C,QAAQ;IACR,CAAC;IAED,WAAW;QACT,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1C,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;CACF;;YAtBQ,8DAAU;;;kCAShB,mDAAK;;AADK,mBAAmB;IAL/B,+DAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,wFAA2C;;KAE5C,CAAC;GACW,mBAAmB,CAc/B;AAd+B;;;;;;;;;;;;;ACThC;AAAA;AAAA;AAA2E;AAE9B;AAG7C,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACNpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC;;;;;;;;;;;;ACZA;AAAe,6GAA8C,2IAA2I,E","file":"main-es2019.js","sourcesContent":["export default \".card {\\r\\n    border: none;\\r\\n}\\r\\n\\r\\n.chat {\\r\\n    list-style: none;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.chat li {\\r\\n    margin-bottom: 10px;\\r\\n    padding-bottom: 10px;\\r\\n    border-bottom: 1px dotted #B3A9A9;\\r\\n}\\r\\n\\r\\n.rounded-circle {\\r\\n    max-height: 50px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVtYmVycy9tZW1iZXItbWVzc2FnZXMvbWVtYmVyLW1lc3NhZ2VzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLFNBQVM7SUFDVCxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxtQkFBbUI7SUFDbkIsb0JBQW9CO0lBQ3BCLGlDQUFpQztBQUNyQzs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL21lbWJlcnMvbWVtYmVyLW1lc3NhZ2VzL21lbWJlci1tZXNzYWdlcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQge1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG59XHJcblxyXG4uY2hhdCB7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxufVxyXG5cclxuLmNoYXQgbGkge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZCAjQjNBOUE5O1xyXG59XHJcblxyXG4ucm91bmRlZC1jaXJjbGUge1xyXG4gICAgbWF4LWhlaWdodDogNTBweDtcclxufSJdfQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\";","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-test-errors',\n  templateUrl: './test-errors.component.html',\n  styleUrls: ['./test-errors.component.css']\n})\nexport class TestErrorsComponent implements OnInit {\n  baseUrl = environment.apiUrl;\n  validationErrors: string[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  get404Error() {\n    this.http.get(this.baseUrl + 'buggy/not-found').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get400Error() {\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get500Error() {\n    this.http.get(this.baseUrl + 'buggy/server-error').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get401Error() {\n    this.http.get(this.baseUrl + 'buggy/auth').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get400ValidationError() {\n    this.http.post(this.baseUrl + 'account/register', {}).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n      this.validationErrors = error;\n    })\n  }\n\n}","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\n\n@Component({\n  selector: 'app-date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.css']\n})\nexport class DateInputComponent implements ControlValueAccessor {\n  @Input() label: string = '';\n  @Input() maxDate: Date = new Date() ;\n  bsConfig: Partial<BsDatepickerConfig> ;\n\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this;\n    this.bsConfig = {\n      containerClass: 'theme-red',\n      dateInputFormat: 'DD MMMM YYYY'\n    }\n   }\n  writeValue(obj: any): void {\n    \n  }\n  registerOnChange(fn: any): void {\n    \n  }\n  registerOnTouched(fn: any): void {\n    \n  }\n  \n  ngOnInit(): void {\n  }\n\n \n}\n","/* (ignored) */","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AccountService } from '../_services/account.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { ValueConverter } from '@angular/compiler/src/render3/view/template';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n    @Output() cancelRegister = new EventEmitter();\n    registerForm!: FormGroup;\n    maxDate: Date = new Date();\n    validationErrors: string[]= [];\n\n    constructor(private accountService: AccountService, private toastr: ToastrService, \n      private fb: FormBuilder, private router: Router) { }\n\n    ngOnInit(): void {\n      this.intitializeForm();\n      this.maxDate = new Date();\n      this.maxDate.setFullYear(this.maxDate.getFullYear() -18);\n    }\n\n    intitializeForm(){\n      this.registerForm = this.fb.group({\n        gender: ['male'],\n        username: ['', Validators.required],\n        knownAs: ['', Validators.required],\n        dateOfBirth: ['', Validators.required],\n        city: ['', Validators.required],\n        country: ['', Validators.required],\n        password: ['',[Validators.required,\n        Validators.minLength(4), Validators.maxLength(8)]],\n        confirmPassword:[ '', [Validators.required, this.matchValues('password')]]\n      })\n    }\n      \n    matchValues(matchTo: any): ValidatorFn {\n      return (control: AbstractControl) => {\n        let con = control?.parent?.controls as any;\n        if(con)\n          return control?.value === con[matchTo].value ? null : {isMatching: true};\n        else return null;\n      }\n    }\n\n    register() {\n      this.accountService.register(this.registerForm.value).subscribe(\n        response =>{\n        this.router.navigateByUrl('\\members');\n      }, \n      error =>{\n        this.validationErrors = error;\n      })\n    }\n      \n\n    cancel() {\n      this.cancelRegister.emit(false);\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19mb3Jtcy90ZXh0LWlucHV0L3RleHQtaW5wdXQuY29tcG9uZW50LmNzcyJ9 */\";","/* (ignored) */","export default \"<h2>Admin Panel</h2>\\n<div class=\\\"tab-panel\\\">\\n    <tabset class=\\\"member-tabset\\\">\\n        <tab heading=\\\"User management\\\" *appHasRole='[\\\"Admin\\\"]'>\\n            <div class=\\\"container\\\">\\n                <app-user-management></app-user-management>\\n            </div>\\n        </tab>\\n        <tab heading=\\\"Photo management\\\" *appHasRole='[\\\"Admin\\\",\\\"Moderator\\\"]'>\\n            <div class=\\\"container\\\">\\n                <app-photo-management></app-photo-management>\\n            </div>\\n        </tab>\\n    </tabset>\\n</div>\";","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Message } from 'src/app/_models/message';\nimport { MessageService } from 'src/app/_services/message.service';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n  @ViewChild('messageForm') messageForm!: NgForm;\n  @Input() messages!: Message[];\n  @Input() username!: string;\n  messageContent!: string;\n\n\n  constructor(public messageService: MessageService) { }\n\n  ngOnInit(): void {\n\n  }\n\n  sendMessage() {\n    this.messageService.sendMessage(this.username, this.messageContent).then(() => {\n      this.messageForm.reset();\n    })  \n  }\n}","/* (ignored) */","/* (ignored) */","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.css']\n})\nexport class PhotoManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent {\n\n}\n","/* (ignored) */","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { User } from '../_models/user';\nimport { ReplaySubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { PresenceService } from './presence.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n  baseUrl = environment.apiUrl;\n  private currentUserSource = new ReplaySubject<User>(1);\n  currentUser$ = this.currentUserSource.asObservable();\n\n  constructor(private http: HttpClient, private presence: PresenceService) { }\n\n  login(model: any) {\n    return this.http.post<User>(this.baseUrl + 'account/login', model).pipe(\n      map((response: User) => {\n        const user = response;\n        if (user) {\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);\n        }\n      })\n    )\n  }\n\n  register(model: any) {\n    return this.http.post<User>(this.baseUrl + 'account/register', model).pipe(\n      map((user: User) => {\n        if (user) {\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);\n        }\n      })\n    )\n  }\n\n  setCurrentUser(user: User) {\n    user.roles = [];\n    const roles = this.getDecodedToken(user.token).role;\n    Array.isArray(roles) ? user.roles = roles : user.roles.push(roles);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.currentUserSource.next(user);\n  }\n\n\n  logout() {\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null!);\n    this.presence.stopHubConnection();\n  }\n\n  getDecodedToken(token: string) {\n    return JSON.parse(atob(token.split('.')[1]));\n  }\n}\n\n","/* (ignored) */","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vycm9ycy9ub3QtZm91bmQvbm90LWZvdW5kLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.css']\n})\nexport class ServerErrorComponent implements OnInit {\n  error: any;\n\n  constructor(private router: Router) {\n    const navigation = this.router.getCurrentNavigation(); \n    this.error = navigation?.extras?.state?.['error'];\n  }\n\n  ngOnInit(): void {\n  }\n\n}","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { AccountService } from '../_services/account.service';\nimport { take } from 'rxjs/operators';\nimport { User } from '../_models/user';\n\n@Directive({\n  selector: '[appHasRole]'\n})\nexport class HasRoleDirective {\n  @Input() appHasRole!: string[];\n  user!: User;\n  \n  constructor(private viewContainerRef: ViewContainerRef, private templateRef: TemplateRef<any>,\n    private accountService: AccountService) {\n      this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n        this.user = user;\n      })\n     }\n\n    ngOnInit(): void{\n      //clear view if no roles\n      if(!this.user?.roles || this.user == null){\n        this.viewContainerRef.clear();\n        return ;\n      }\n\n      if(this.user?.roles.some(r => this.appHasRole.includes(r))){\n        this.viewContainerRef.createEmbeddedView(this.templateRef);\n      } else {\n        this.viewContainerRef.clear();\n      }\n    }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusyService {\n  busyRequestCount = 0;\n\n  constructor(private spinnerService: NgxSpinnerService) { }\n\n  busy() {\n    this.busyRequestCount++;\n    this.spinnerService.show(undefined, {\n      type: 'line-scale-praty',\n      bdColor: 'rgba(255,255,255,0)',\n      color:'#333333'\n    });\n  }\n   idle() {\n    this.busyRequestCount--;\n    if(this.busyRequestCount <=0){\n      this.busyRequestCount= 0;\n      this.spinnerService.hide();\n    }\n   }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  registerMode = false;\n \n\n  constructor() { }\n\n  ngOnInit():void {\n  }\n\n  registerToggle() {\n    this.registerMode = !this.registerMode;\n  }\n    \n  \n\n  cancelRegisterModel(event: boolean){\n    this.registerMode = event;\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\";","export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    result!: T ;\r\n    pagination!: Pagination;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'https://localhost:5001/api/',\r\n  hubUrl: 'https://localhost:5001/hubs/'  \r\n};\r\n  \r\n  /*\r\n   * For easier debugging in development mode, you can import the following file\r\n   * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n   *\r\n   * This import should be commented out in production mode because it will have a negative impact\r\n   * on performance if an error is thrown.\r\n   */\r\n  // import 'zone.js/dist/zone-error';  // Included with Angular CLI.","export default \"<div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n        <div *ngIf=\\\"(messageService.messageThread$ | async)?.length === 0\\\">\\n            No messages yet... say hi by using the message box below\\n        </div>\\n\\n        <ul #scrollMe\\n            style=\\\"overflow-y: scroll; height: 500px;\\\"\\n            [scrollTop]=\\\"scrollMe.scrollHeight\\\"\\n            *ngIf=\\\"(messageService.messageThread$ | async).length > 0\\\" \\n            class=\\\"chat\\\">\\n            <li *ngFor=\\\"let message of (messageService.messageThread$ | async)\\\">\\n                <div>\\n                    <span class=\\\"chat-img float-right\\\">\\n                        <img class=\\\"rounded-circle\\\" src=\\\"{{message.senderPhotoUrl || './assets/user.png'}}\\\" \\n                            alt=\\\"{{message.senderUsername}}\\\">\\n                    </span>\\n                    <div class=\\\"chat-body\\\">\\n                        <div class=\\\"header\\\">\\n                            <small class=\\\"text-muted\\\">\\n                                <span class=\\\"fa fa-clock-o\\\">{{message.messageSent | timeago}}</span>\\n                                <span class=\\\"text-danger\\\" *ngIf=\\\"!message.dateRead \\n                                    && message.senderUsername !== username\\\">\\n                                    (unread)\\n                                </span>\\n                                <span class=\\\"text-success\\\" *ngIf=\\\"message.dateRead \\n                                    && message.senderUsername !== username\\\">\\n                                    (read {{message.dateRead | timeago}})\\n                                </span>\\n                            </small>\\n                        </div>\\n                        <p>{{message.content}}</p>\\n                    </div>\\n                </div>\\n            </li>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"card-footer\\\">\\n        <form #messageForm=\\\"ngForm\\\" (submit)=\\\"sendMessage()\\\" autocomplete=\\\"off\\\">\\n            <div class=\\\"input-group\\\">\\n                <input\\n                    name=\\\"messageContent\\\"\\n                    required\\n                    [(ngModel)]=\\\"messageContent\\\" \\n                    type=\\\"text\\\" \\n                    class=\\\"form-control input-sm\\\" \\n                    placeholder=\\\"Send a private message\\\">\\n                <div class=\\\"input-group-append\\\">\\n                    <button [disabled]=\\\"!messageForm.valid\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Send</button>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\";","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\nimport { User } from '../_models/user';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private accountService: AccountService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let currentUser!: User;\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => currentUser = user);\n    if (currentUser) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","export default \"<div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title pull-left\\\">Edit roles for {{user.username}}</h4>\\n    <button type=\\\"button\\\" class=\\\"btn-close close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"bsModalRef.hide()\\\">\\n      <span aria-hidden=\\\"true\\\" class=\\\"visually-hidden\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form #rolesForm=\\\"ngForm\\\" id=\\\"rolesForm\\\">\\n        <div class=\\\"form-check\\\" *ngFor=\\\"let role of roles\\\">\\n            <input type=\\\"checkbox\\\"\\n                class=\\\"form-check-input\\\"\\n                [checked]=\\\"role.checked\\\"\\n                value=\\\"role.name\\\"\\n                (change)=\\\"role.checked = !role.checked\\\"\\n                [disabled]=\\\"role.name === 'Admin' && user.username === 'admin'\\\"\\n            >\\n            <label>{{role.name}}</label>\\n        </div>\\n    </form>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"bsModalRef.hide()\\\">Cancel</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateRoles()\\\">Submit</button>\\n  </div>\";","import { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { Pagination } from '../_models/pagination';\nimport { ConfirmService } from '../_services/confirm.service';\nimport { MessageService } from '../_services/message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[] = [];\n  pagination!: Pagination;\n  container = 'Unread';\n  pageNumber = 1;\n  pageSize = 5;\n  loading = false;\n\n  constructor(private messageService: MessageService, private confirmService: ConfirmService) { }\n\n  ngOnInit(): void {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    this.loading = true;\n    this.messageService.getMessages(this.pageNumber, this.pageSize, this.container).subscribe(response =>{\n      this.messages = response.result;\n      this.pagination = response.pagination;  \n      this.loading = false;\n    })\n  }\n\n  deleteMessage(id: number) {\n    this.confirmService.confirm('Confirm delete message', 'This cannot be undone').subscribe(result => {\n      if (result) {\n        this.messageService.deleteMessage(id).subscribe(() => {\n          this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\n        })\n      }  \n    })\n  }\n\n  pageChanged(event: any) {\n    this.pageNumber = event.page;\n    this.loadMessages();\n  }\n}","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col-2\\\" *ngFor=\\\"let photo of member.photos\\\">\\n        <img src=\\\"{{photo.url}}\\\" alt=\\\"{{photo.url}}\\\" class=\\\"img-thumbnail p-1\\\">\\n        <div class=\\\"text-center\\\">\\n            <button \\n                [disabled]=\\\"photo.isMain\\\"\\n                (click)=\\\"setMainPhoto(photo)\\\"\\n                [ngClass]='photo.isMain ? \\\"btn-success active\\\" : \\\"btn-outline-success\\\"'\\n                class=\\\"btn btn-sm\\\"\\n            >Main</button>\\n            <button\\n                [disabled]=\\\"photo.isMain\\\" \\n                (click)=\\\"deletePhoto(photo.id)\\\"\\n                class=\\\"btn btn-sm btn-danger\\\"\\n            ><i class=\\\"fa fa-trash\\\"></i></button>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row mt-3\\\">\\n \\n    <div class=\\\"col-md-3\\\">\\n  \\n        <h3>Add photos</h3>\\n\\n        <div ng2FileDrop\\n             [ngClass]=\\\"{'nv-file-over': hasBaseDropzoneOver}\\\"\\n             (fileOver)=\\\"fileOverBase($event)\\\"\\n             [uploader]=\\\"uploader\\\"\\n             class=\\\"card bg-faded p-3 text-center mb-3 my-drop-zone\\\">\\n             <i class=\\\"fa fa-upload fa-3x\\\"></i>\\n            Drop photos here\\n        </div>\\n\\n        Multiple\\n        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple  /><br/>\\n\\n        Single\\n        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n    </div>\\n\\n    <div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\" *ngIf=\\\"uploader?.queue?.length\\\">\\n\\n        <h3>Upload queue</h3>\\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\\n\\n        <table class=\\\"table\\\">\\n            <thead>\\n            <tr>\\n                <th width=\\\"50%\\\">Name</th>\\n                <th>Size</th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n            <tr *ngFor=\\\"let item of uploader.queue\\\">\\n                <td><strong>{{ item?.file?.name }}</strong></td>\\n                <td *ngIf=\\\"uploader.options.isHTML5\\\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\n            </tr>\\n            </tbody>\\n        </table>\\n\\n        <div>\\n            <div>\\n                Queue progress:\\n                <div class=\\\"progress\\\" style=\\\"\\\">\\n                    <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' }\\\"></div>\\n                </div>\\n            </div>\\n            <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\"\\n                    (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n                <span class=\\\"fa fa-upload\\\"></span> Upload all\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s\\\"\\n                    (click)=\\\"uploader.cancelAll()\\\" [disabled]=\\\"!uploader.isUploading\\\">\\n                <span class=\\\"fa fa-ban\\\"></span> Cancel all\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\"\\n                    (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\n                <span class=\\\"fa fa-trash\\\"></span> Remove all\\n            </button>\\n        </div>\\n\\n    </div>\\n\\n</div>\";","export default \"<div class=\\\"row\\\">\\n    <table class=\\\"table\\\">\\n        <tr>\\n            <th style=\\\"width: 30%\\\">Username</th>\\n            <th style=\\\"width: 40%\\\">Active roles</th>\\n            <th style=\\\"width: 30%\\\"></th>\\n        </tr>\\n        <tr *ngFor=\\\"let user of users\\\">\\n            <td>{{user.username}}</td>\\n            <td>{{user.roles}}</td>\\n            <td><button (click)=\\\"openRolesModal(user)\\\" class=\\\"btn btn-info\\\">Edit Roles</button></td>\\n        </tr>\\n    </table>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vycm9ycy90ZXN0LWVycm9ycy90ZXN0LWVycm9ycy5jb21wb25lbnQuY3NzIn0= */\";","export default \"<p>photo-management works!</p>\\n\";","export default \"<div class=\\\"container mt-5\\\">\\n    <div *ngIf=\\\"!registerMode\\\" style=\\\"text-align: center;\\\">\\n    <h1>Find your match</h1>\\n    <p class=\\\"lead\\\">Come on in to view your matches... all you need to do is sign up!</p>\\n        <div class=\\\"text-center\\\">\\n            <button (click)=\\\"registerToggle()\\\" class=\\\"btn btn-primary btn-lg mr-2\\\">Register</button>\\n            <button class=\\\"btn btn-info btn-lg \\\">Learn more</button>\\n        </div>\\n    </div>\\n\\n    <div *ngIf=\\\"registerMode\\\" class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-4\\\">\\n                <app-register  (cancelRegister)=\\\"cancelRegisterModel($event)\\\"></app-register>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3Bob3RvLW1hbmFnZW1lbnQvcGhvdG8tbWFuYWdlbWVudC5jb21wb25lbnQuY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ToastrModule } from 'ngx-toastr';\nimport {TabsModule} from 'ngx-bootstrap/tabs';\nimport {NgxGalleryModule} from '@kolkov/ngx-gallery';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { BsDatepickerModule} from 'ngx-bootstrap/datepicker';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ButtonsModule} from 'ngx-bootstrap/buttons'\nimport { TimeagoModule } from 'ngx-timeago';\nimport { ModalModule } from 'ngx-bootstrap/modal'\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BsDropdownModule.forRoot(),\n    ToastrModule.forRoot({\n      positionClass: 'toastr-bottom-right'\n    }),\n    TabsModule.forRoot(),\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    ButtonsModule.forRoot(),\n    TimeagoModule.forRoot(),\n    ModalModule.forRoot()\n  ],\n  exports: [\n    BsDropdownModule,\n    ToastrModule,\n    TabsModule,\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule,\n    PaginationModule,\n    ButtonsModule,\n    TimeagoModule,\n    ModalModule\n  ],\n})\nexport class SharedModule { }\n\n","export default \"<ng-container >\\n    <button (click)=\\\"get500Error()\\\" class=\\\"btn btn-outline-primary mr-3\\\">Test 500 Error</button>\\n    <button (click)=\\\"get400Error()\\\" class=\\\"btn btn-outline-primary mr-3\\\">Test 400 Error</button>\\n    <button (click)=\\\"get401Error()\\\" class=\\\"btn btn-outline-primary mr-3\\\">Test 401 Error</button>\\n    <button (click)=\\\"get404Error()\\\" class=\\\"btn btn-outline-primary mr-3\\\">Test 404 Error</button>\\n    <button (click)=\\\"get400ValidationError()\\\" class=\\\"btn btn-outline-primary mr-3\\\">Test 400 Validation Error</button>\\n    \\n    <div class=\\\"row mt-5\\\" *ngIf=\\\"validationErrors.length > 0\\\">\\n        <ul class=\\\"text-danger\\\">\\n            <li *ngFor=\\\"let error of validationErrors\\\">\\n                {{error}}\\n            </li>\\n        </ul>\\n    </div>\\n</ng-container>\";","export default \"<div class=\\\"text-center mt-3\\\">\\n    <h2>{{predicate === 'liked' ? 'Members I like' : 'Members who like me'}}</h2>\\n</div>\\n\\n<div class=\\\"container mt-3\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"btn-group\\\" name=\\\"predicate\\\">\\n            <button class=\\\"btn btn-primary\\\" btnRadio=\\\"liked\\\" \\n                [(ngModel)]=\\\"predicate\\\" (click)=\\\"loadLikes()\\\">Members I like</button>\\n            <button class=\\\"btn btn-primary\\\" btnRadio=\\\"likedBy\\\" \\n                [(ngModel)]=\\\"predicate\\\" (click)=\\\"loadLikes()\\\">Members who like me</button>\\n        </div>\\n    </div>    \\n\\n    <div class=\\\"row mt-3\\\">\\n        <div class=\\\"col-2\\\" *ngFor=\\\"let member of members\\\">\\n            <app-member-card [member]=\\\"member\\\"></app-member-card>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"pagination\\\">\\n    <pagination \\n        [boundaryLinks]=\\\"true\\\" \\n        [totalItems]='pagination.totalItems'\\n        [itemsPerPage]='pagination.itemsPerPage'\\n        [(ngModel)]=\\\"pagination.currentPage\\\"\\n        (pageChanged)=\\\"pageChanged($event)\\\"\\n        previousText=\\\"&lsaquo;\\\" \\n        nextText=\\\"&rsaquo;\\\" \\n        firstText=\\\"&laquo;\\\"\\n        lastText=\\\"&raquo;\\\">\\n</pagination>\\n</div>\";","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router, private toastr: ToastrService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError(error => {\n        if (error) {\n          switch (error.status) {\n            case 400:\n              if(error.error.errors) {\n                const modalStateErrors = []; \n                for (const key in error.error.errors) {\n                  if (error.error.errors[key]) {\n                    modalStateErrors.push(error.error.errors[key])\n                  }\n                }\n                throw modalStateErrors.flat();\n              } else if (typeof(error.error) === 'object') {\n                error.statusText = 'Bad Request'\n                this.toastr.error(error.statusText, error.status);       \n              } else {\n                this.toastr.error(error.error, error.status);\n              }\n              break;\n            case 401: \n              error.statusText = 'Unauthorized'\n              this.toastr.error(error.statusText, error.status);\n              break;\n            case 404:\n              this.router.navigateByUrl('/not-found');\n              break;\n            case 500:\n              const navigationExtras: NavigationExtras = {state: {error: error.error}}; \n              this.router.navigateByUrl('/server-error', navigationExtras);\n              break;\n            default:\n              this.toastr.error('Something unexpected went wrong');\n              console.log(error);\n              break;\n          }  \n        }\n        return throwError(error);\n      })\n    )\n  }\n}","export default \"<h4>Internal server errror - refreshing the page will make the error disappear!</h4>\\n<ng-container *ngIf=\\\"error\\\">\\n    <h5 class=\\\"text-danger\\\">Error: {{error.message}}</h5>\\n    <p class=\\\"font-weight-bold\\\">Note: If you are seeing this then Angular is probably not to blame</p>\\n    <p>what to do next?</p>\\n    <ol>\\n        <li>Open the chrome dev tools</li>\\n        <li>Inspect the network tab</li>\\n        <li>Check the failing request</li>\\n        <li>Examine the request URL - make sure it is correct</li>\\n        <li>Reproduce the error in Postman - if we see the same respone, then the issue is not with Angular</li>\\n    </ol>\\n    <p>Following is the strack trace - this is where your investigation should start!</p>\\n    <code class=\\\"mt-5\\\" style=\\\"background-color: whitesmoke;\\\">{{error.details}}</code>\\n</ng-container>\\n\";","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private accountService: AccountService, private toastr: ToastrService) {}\n\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map(user => {\n        if (user && (user.roles.includes('Admin') || user.roles.includes('Moderator'))) {\n          return true;\n        } else {\n          this.toastr.error('You cannot enter this area');\n          return false; \n        }\n      })\n    );\n  }\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  baseUrl = environment.apiUrl;\n  constructor(private http: HttpClient) { }\n\n  getUsersWithRoles() {\n    return this.http.get<Partial<User[]>>(this.baseUrl + 'admin/users-with-roles');\n  }\n  updateUserRoles(username: string, roles: string[]) {\n    return this.http.post(this.baseUrl + 'admin/edit-roles/' + username + '?roles=' + roles, {});\n  }\n}\n","export default \"<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"registerForm.valid && register()\\\" autocomplete=\\\"off\\\">\\n    <h2 class=\\\"text-center text-primary\\\">Sign up</h2>\\n    <hr>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" style=\\\"margin-right: 10px;\\\">I am a:</label>\\n        <label class=\\\"radio-inline\\\">\\n            <input type=\\\"radio\\\" value=\\\"made\\\" formControlName='gender'>Male\\n        </label>\\n        <label class=\\\"radio-inline\\\">\\n            <input type=\\\"radio\\\" value=\\\"female\\\" formControlName='gender' class=\\\"ml-3\\\">Female\\n        </label>\\n    </div>\\n    <app-text-input [formControl]='registerForm.controls[\\\"username\\\"]' [label] ='\\\"Username\\\"'></app-text-input>\\n    \\n    <app-text-input [formControl]='registerForm.controls[\\\"knownAs\\\"]' [label] ='\\\"Known As\\\"'></app-text-input>\\n    \\n    <app-date-input [formControl]='registerForm.controls[\\\"dateOfBirth\\\"]' \\n    [label] ='\\\"Date Of Birth\\\"' [maxDate]='maxDate'></app-date-input>\\n\\n    <app-text-input [formControl]='registerForm.controls[\\\"city\\\"]' [label] ='\\\"City\\\"'></app-text-input>\\n\\n    <app-text-input [formControl]='registerForm.controls[\\\"country\\\"]' [label] ='\\\"Country\\\"'></app-text-input>\\n\\n    <app-text-input [formControl]='registerForm.controls[\\\"password\\\"]' [label] ='\\\"Password\\\"' \\n    [type]='\\\"password\\\"'></app-text-input>\\n    \\n    <app-text-input [formControl]='registerForm.controls[\\\"confirmPassword\\\"]' \\n    [label] ='\\\"Comfirm Password\\\"' \\n    [type]='\\\"password\\\"'></app-text-input>\\n\\n    <div class=\\\"row\\\" *ngIf=\\\"validationErrors.length > 0\\\">\\n        <ul class=\\\"text-danger\\\">\\n            <li *ngFor=\\\"let error of validationErrors\\\">\\n                {{error}}\\n            </li>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"form-group text-center\\\">\\n        <button [disabled]='!registerForm.valid'  class=\\\"btn btn-success mr-1\\\" type=\\\"submit\\\">Register</button>\\n        <button class=\\\"btn btn-default mr-1\\\" (click)=\\\"cancel()\\\" type=\\\"button\\\">Cancel</button>\\n    </div>\\n  \\n</form>\\n\\n\\n\";","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { RolesModalComponent } from 'src/app/modals/roles-modal/roles-modal.component';\nimport { User } from 'src/app/_models/user';\nimport { AdminService } from 'src/app/_services/admin.service';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.css']\n})\nexport class UserManagementComponent implements OnInit {\n  users!: Partial<User[]>;\n  bsModalRef!: BsModalRef;\n  constructor(private adminService: AdminService, private modalService:BsModalService) { }\n\n  ngOnInit(): void {\n    this.getUsersWithRoles();\n  }\n  getUsersWithRoles(){\n    this.adminService.getUsersWithRoles().subscribe(users =>{\n      this.users = users;\n    })\n  }\n\n  openRolesModal(user: User) {\n    const config = {\n      class: 'modal-dialog-centered',\n      initialState: {\n        user,\n        roles: this.getRolesArray(user)\n      }\n    }  \n    this.bsModalRef = this.modalService.show(RolesModalComponent, config);\n    this.bsModalRef.content.updateSelectedRoles.subscribe((values: any) => {\n      const rolesToUpdate = {\n        roles: [...values.filter((el: any) => el.checked === true).map((el: any) => el.name)]\n      };\n      if (rolesToUpdate) {\n        this.adminService.updateUserRoles(user.username, rolesToUpdate.roles).subscribe(() => {\n          user.roles = [...rolesToUpdate.roles]  \n        })\n      }\n    })\n  }\n\n  private getRolesArray(user: any) {\n    const roles: any = [];\n    const userRoles = user.roles;\n    const availableRoles: any[] = [\n      {name: 'Admin', value: 'Admin'},\n      {name: 'Moderator', value: 'Moderator'},\n      {name: 'Member', value: 'Member'}\n    ];\n\n    availableRoles.forEach(role => {\n      let isMatch = false;\n      for (const userRole of userRoles) {\n        if (role.name === userRole) {\n          isMatch = true;\n          role.checked = true;\n          roles.push(role);\n          break;\n        }\n      }\n      if (!isMatch) {\n        role.checked = false;\n        roles.push(role);\n      }\n    })  \n    return roles;\n  }\n\n}\n","export default \"<div class=\\\"text-center mt-3\\\">\\n    <h2>Your matches - {{pagination?.totalItems}} found</h2>    \\n</div>\\n\\n<div class=\\\"container mt-3\\\">\\n    <form #form=\\\"ngForm\\\" class=\\\"form-inline mb-3\\\" (ngSubmit)=\\\"loadMembers()\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\">\\n            <label >Age from:</label>\\n            <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px;\\\" name=\\\"minAge\\\" \\n                [(ngModel)]=\\\"userParams.minAge\\\">\\n        </div>   \\n\\n        <div class=\\\"form-group px-2\\\">\\n            <label >Age to:</label>\\n            <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px;\\\" name=\\\"maxAge\\\" \\n                [(ngModel)]=\\\"userParams.maxAge\\\">\\n        </div>  \\n\\n        <div class=\\\"form-group px-2\\\">\\n            <label>Show: </label>\\n            <select name=\\\"gender\\\" style=\\\"width: 130px;\\\" [(ngModel)]=\\\"userParams.gender\\\" class=\\\"form-control ml-1\\\">\\n                <option *ngFor=\\\"let gender of genderList\\\" [value]=\\\"gender.value\\\">\\n                    {{gender.display}}\\n                </option>    \\n            </select>\\n        </div>\\n\\n        <button class=\\\"btn btn-primary ml-1\\\" type=\\\"submit\\\">Apply Filters</button>\\n        <button (click)=\\\"resetFilters()\\\" class=\\\"btn btn-info ml-1\\\" type=\\\"submit\\\">Reset Filters</button>\\n        <div class=\\\"col\\\">\\n            <div class=\\\"btn-group float-right\\\">\\n                <button\\n                    type=\\\"button\\\" \\n                    class=\\\"btn btn-primary\\\" \\n                    name=\\\"orderBy\\\"\\n                    (click)=\\\"loadMembers()\\\" \\n                    btnRadio=\\\"lastActive\\\"\\n                    [(ngModel)]=\\\"userParams.orderBy\\\">Last Active</button>\\n    \\n                <button\\n                    type=\\\"button\\\" \\n                    class=\\\"btn btn-primary\\\" \\n                    name=\\\"orderBy\\\"\\n                    (click)=\\\"loadMembers()\\\" \\n                    btnRadio=\\\"created\\\"\\n                    [(ngModel)]=\\\"userParams.orderBy\\\">Newest Members</button>\\n            </div>\\n        </div>\\n        \\n\\n    </form>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div *ngFor=\\\"let member of members\\\" class=\\\"col-2\\\">\\n        <app-member-card [member]=\\\"member\\\"></app-member-card>\\n    </div>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"pagination\\\">\\n    <pagination \\n        [boundaryLinks]=\\\"true\\\" \\n        [totalItems]='pagination.totalItems'\\n        [itemsPerPage]='pagination.itemsPerPage'\\n        [(ngModel)]=\\\"pagination.currentPage\\\"\\n        (pageChanged)=\\\"pageChanged($event)\\\"\\n        previousText=\\\"&lsaquo;\\\" \\n        nextText=\\\"&rsaquo;\\\" \\n        firstText=\\\"&laquo;\\\"\\n        lastText=\\\"&raquo;\\\">\\n</pagination>\\n</div>\\n\";","export default \".img-circle {\\r\\n    max-height: 50px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVzc2FnZXMvbWVzc2FnZXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL21lc3NhZ2VzL21lc3NhZ2VzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW1nLWNpcmNsZSB7XHJcbiAgICBtYXgtaGVpZ2h0OiA1MHB4O1xyXG59Il19 */\";","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Member } from 'src/app/_models/member';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { NgxGalleryAnimation, NgxGalleryImage, NgxGalleryOptions } from '@kolkov/ngx-gallery';\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\nimport { Message } from 'src/app/_models/message';\nimport { MessageService } from 'src/app/_services/message.service';\nimport { PresenceService } from 'src/app/_services/presence.service';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { User } from 'src/app/_models/user';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit, OnDestroy {\n  @ViewChild('memberTabs', {static: true}) memberTabs!: TabsetComponent;\n    member!: Member;\n    galleryOptions!: NgxGalleryOptions[];\n    galleryImages!: NgxGalleryImage[];\n    activeTab!: TabDirective;\n    messages: Message[] =[] ;\n    user!: User;\n\n    constructor(public presence: PresenceService, private route: ActivatedRoute, \n      private messageService: MessageService, private accountService: AccountService,\n      private router: Router) {\n        this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\n        this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n       }\n \n    ngOnInit() {\n      this.route.data.subscribe(data => {\n        this.member = data.member;\n      })\n\n      this.route.queryParams.subscribe(params => {\n        params.tab ? this.selectTab(params.tab) : this.selectTab(0);\n      })\n\n      this.galleryOptions = [\n        {\n          width: '500px',\n          height: '500px',\n          imagePercent: 100,\n          thumbnailsColumns: 4,\n          imageAnimation: NgxGalleryAnimation.Slide,\n          preview: false\n        }\n      ]\n      this.galleryImages = this.getImages();\n    }\n    getImages(): NgxGalleryImage[] {\n      const imageUrls = [];\n      // Kiểm tra xem this.member đã được xác định trước khi cố gắng truy cập thuộc tính photos\n      if (this.member && this.member.photos) {\n        for (const photo of this.member.photos) {\n          imageUrls.push({\n            small: photo?.url,\n            medium: photo?.url,\n            big: photo?.url\n          });\n        }\n      }\n      return imageUrls;\n    }\n    \n    loadMessages() {\n      this.messageService.getMessageThread(this.member.username).subscribe(messages => {\n        this.messages = messages;\n      })  \n    }\n    selectTab(tabId: number){\n        this.memberTabs.tabs[tabId].active = true;\n    }\n    onTabActivated(data: TabDirective){\n      this.activeTab = data;\n      if(this.activeTab.heading === 'Messages' && this.messages.length === 0){\n          this.messageService.createHubConnection(this.user, this.member.username);\n      }else {\n        this.messageService.stopHubConnection();\n      }\n    }\n    \n    ngOnDestroy(): void {\n      this.messageService.stopHubConnection();\n    }\n}\n","import { CanActivate, ActivatedRouteSnapshot,RouterStateSnapshot,UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\nimport { Inject, Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn:'root'\n})\n\nexport class AuthGuard implements CanActivate {\n  constructor(private accounntService: AccountService, private toastr: ToastrService){\n\n  }\n  canActivate(): Observable<boolean> {\n    return this.accounntService.currentUser$.pipe(\n      map(user =>{\n        if(user) return true;\n        this.toastr.error('You shall not pass!');\n        return false;\n      \n    })\n  )\n}\n};\n        \n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Group } from '../_models/group';\nimport { Message } from '../_models/message';\nimport { User } from '../_models/user';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelpers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  baseUrl = environment.apiUrl;\n  hubUrl = environment.hubUrl;\n  private hubConnection!: HubConnection;\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\n  messageThread$ = this.messageThreadSource.asObservable();\n\n  constructor(private http: HttpClient) { }\n\n  createHubConnection(user: User,otherUsername: string) {\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(this.hubUrl + 'message?user=' + otherUsername, {\n        accessTokenFactory: () => user.token  \n      })\n      .withAutomaticReconnect()\n      .build()\n\n      this.hubConnection.start().catch(error => console.log(error));\n\n      this.hubConnection.on('ReceiveMessageThread', messages => {\n        this.messageThreadSource.next(messages);  \n      })\n\n      this.hubConnection.on('NewMessage', message => {\n        this.messageThread$.pipe(take(1)).subscribe(messages => {\n          this.messageThreadSource.next([...messages, message])\n        })  \n      })\n\n      this.hubConnection.on('UpdatedGroup', (group: Group) => {\n        if (group.connections.some(x => x.username === otherUsername)) {\n          this.messageThread$.pipe(take(1)).subscribe(messages => {\n            messages.forEach(message => {\n              if (!message.dateRead) {\n                message.dateRead = new Date(Date.now())\n              }  \n            })\n            this.messageThreadSource.next([...messages]);\n          })\n        }\n      })\n\n      this.hubConnection.on('UpdatedGroup', (group: Group) => {\n        if (group.connections.some(x => x.username === otherUsername)) {\n          this.messageThread$.pipe(take(1)).subscribe(messages => {\n            messages.forEach(message => {\n              if (!message.dateRead) {\n                message.dateRead = new Date(Date.now())\n              }  \n            })\n            this.messageThreadSource.next([...messages]);\n          })\n        }\n      })\n  }\n\n  stopHubConnection() {\n    if (this.hubConnection) {\n      this.hubConnection.stop();  \n    }\n  }\n\n  getMessages(pageNumber: number, pageSize: number, container: any) {\n    let params = getPaginationHeaders(pageNumber, pageSize);\n    params = params.append('Container', container);\n    return getPaginatedResult<Message[]>(this.baseUrl + 'messages', params, this.http);\n  }\n\n  getMessageThread(username: string) {\n    return this.http.get<Message[]>(this.baseUrl + 'messages/thread/' + username);\n  }\n\n  async sendMessage(username: string, content: string) {\n    return this.hubConnection.invoke('SendMessage', {recipientUsername: username, content})\n      .catch(error => console.log(error));\n  }\n\n  deleteMessage(id: number) {\n    return this.http.delete(this.baseUrl + 'messages/' + id);\n  } \n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vycm9ycy9zZXJ2ZXItZXJyb3Ivc2VydmVyLWVycm9yLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Pagination } from 'src/app/_models/pagination';\nimport { User } from 'src/app/_models/user';\nimport { UserParams } from 'src/app/_models/userParams';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  members!: Member[];\n  pagination!: Pagination;\n  userParams: UserParams;\n  user!: User;\n  genderList = [{value: 'male', display: 'Males'}, {value: 'female', display: 'Females'}];\n\n  constructor(private memberService: MembersService) {\n    this.userParams = this.memberService.getUserParams();\n  }\n\n  ngOnInit(): void {\n    this.loadMembers();  \n  }\n\n  loadMembers() {\n    this.memberService.setUserParams(this.userParams);\n    this.memberService.getMembers(this.userParams).subscribe(response => {\n      this.members = response.result;\n      this.pagination = response.pagination; \n    })\n  }\n\n  resetFilters() {\n    this.userParams = this.memberService.resetUserParams();\n    this.loadMembers();\n  }\n\n  pageChanged(event: any) {\n    this.userParams.pageNumber = event.page;\n    this.memberService.setUserParams(this.userParams);\n    this.loadMembers();\n  }\n}\n","export default \".dropdown-toggle, .dropdown-item {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\nimg {\\r\\n    max-height: 50px;\\r\\n    border: 2px solid #fff;\\r\\n    display: inline;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2L25hdi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixzQkFBc0I7SUFDdEIsZUFBZTtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL25hdi9uYXYuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kcm9wZG93bi10b2dnbGUsIC5kcm9wZG93bi1pdGVtIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuaW1nIHtcclxuICAgIG1heC1oZWlnaHQ6IDUwcHg7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCAjZmZmO1xyXG4gICAgZGlzcGxheTogaW5saW5lO1xyXG59Il19 */\";","export default \"<div class=\\\"row\\\" *ngIf=\\\"member\\\">\\n    <div class=\\\"col-4\\\">\\n        <h1>Your profile</h1>\\n    </div>\\n    <div class=\\\"col-8\\\">\\n        <div class=\\\"alert alert-info\\\" *ngIf=\\\"editForm.dirty\\\">\\n            <strong>Information: </strong>You have made changes. Any unsaved changes will be lost\\n        </div>\\n    </div>\\n    <div class=\\\"col-4\\\">\\n        <div class=\\\"card\\\">\\n            <img src=\\\"{{member.photoUrl || './assets/user.png'}}\\\" alt=\\\"{{member.knownAs}}\\\" \\n                class=\\\"card-img-top img-thumbnail\\\">  \\n            <div class=\\\"card-body\\\">\\n                <div>\\n                    <strong>Location:</strong>\\n                    <p>{{member.city}}, {{member.country}}</p>\\n                </div>\\n                <div>\\n                    <strong>Age:</strong>\\n                    <p>{{member.age}}</p>\\n                </div>\\n                <div>\\n                    <strong>Last Active:</strong>\\n                    <p>{{member.lastActive | timeago}}</p>\\n                </div>\\n                <div>\\n                    <strong>Member since:</strong>\\n                    <p>{{member.created | date: 'dd MMM yyyy'}}</p>\\n                </div>\\n            </div>  \\n            <div class=\\\"card-footer\\\">\\n                <button [disabled]=\\\"!editForm.dirty\\\" form=\\\"editForm\\\" type=\\\"submit\\\" class=\\\"btn btn-success btn-block\\\">Save Changes</button>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"col-8\\\">\\n        <tabset class=\\\"member-tabset\\\"> \\n            <tab heading=\\\"About {{member.knownAs}}\\\">\\n                <form #editForm=\\\"ngForm\\\" id=\\\"editForm\\\" (ngSubmit)=\\\"updateMember()\\\">\\n                    <h4>Desciption</h4>\\n                    <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"member.introduction\\\" name=\\\"introduction\\\" rows=\\\"6\\\"></textarea>\\n                    <h4 class=\\\"mt-2\\\">Looking for</h4>\\n                    <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"member.lookingFor\\\" name=\\\"lookingFor\\\" rows=\\\"6\\\"></textarea>\\n                    <h4 class=\\\"mt-2\\\">Interests</h4>\\n                    <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"member.interests\\\" name=\\\"interests\\\" rows=\\\"6\\\"></textarea>\\n                    <h4 class=\\\"mt-2\\\">Location Details: </h4>\\n                    <div class=\\\"form-inline\\\">\\n                        <label for=\\\"city\\\">City: </label>\\n                        <input [(ngModel)]=\\\"member.city\\\" type=\\\"text\\\" name=\\\"city\\\" class=\\\"form-control mx-2\\\">\\n                        <label for=\\\"city\\\">Country: </label>\\n                        <input [(ngModel)]=\\\"member.country\\\" type=\\\"text\\\" name=\\\"country\\\" class=\\\"form-control mx-2\\\">\\n                    </div>\\n                </form>\\n            </tab>\\n            <tab heading=\\\"Edit Photos\\\">\\n                <app-photo-editor [member]=\\\"member\\\"></app-photo-editor>\\n            </tab>\\n        </tabset>\\n    </div>\\n</div>\";","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from './_models/user';\nimport { AccountService } from './_services/account.service';\nimport { PresenceService } from './_services/presence.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'The Dating app';\n  users: any;\n\n  constructor(private accountService: AccountService, private presence: PresenceService) {}\n  \n  ngOnInit() {\n    this.setCurrentUser();\n  }\n\n  setCurrentUser() {\n    const user: User = JSON.parse(localStorage.getItem('user') || null!); \n    if (user) {\n      this.accountService.setCurrentUser(user);\n      this.presence.createHubConnection(user);\n    }\n    }\n\n}\n","export default \"<div class=\\\"container\\\">\\n    <h1>Not found</h1>\\n    <button class=\\\"btn btn-info btn-lg\\\" routerLink=\\\"/\\\">Return to home page</button>\\n</div>\\n\";","export default \".img-thumbnail {\\r\\n    margin: 25px;\\r\\n    width: 85%;\\r\\n    height: 85%;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer {\\r\\n    padding: 10px 15px;\\r\\n    background-color: #fff;\\r\\n    border-top: none;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVtYmVycy9tZW1iZXItZWRpdC9tZW1iZXItZWRpdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLFVBQVU7SUFDVixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9tZW1iZXJzL21lbWJlci1lZGl0L21lbWJlci1lZGl0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW1nLXRodW1ibmFpbCB7XHJcbiAgICBtYXJnaW46IDI1cHg7XHJcbiAgICB3aWR0aDogODUlO1xyXG4gICAgaGVpZ2h0OiA4NSU7XHJcbn1cclxuXHJcbi5jYXJkLWJvZHkge1xyXG4gICAgcGFkZGluZzogMCAyNXB4O1xyXG59XHJcblxyXG4uY2FyZC1mb290ZXIge1xyXG4gICAgcGFkZGluZzogMTBweCAxNXB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIGJvcmRlci10b3A6IG5vbmU7XHJcbn0iXX0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19mb3Jtcy9kYXRlLWlucHV0L2RhdGUtaW5wdXQuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"card mb-4\\\">\\n    <div class=\\\"card-img-wrapper\\\">\\n        <img src=\\\"{{member.photoUrl || './assets/user.png'}}\\\" alt=\\\"{{member.knownAs}}\\\" class=\\\"card-img-top\\\">\\n        <ul class=\\\"list-inline member-icons animate text-center\\\">\\n            <li class=\\\"list-inline-item\\\"><button routerLink=\\\"/members/{{member.username}}\\\" class=\\\"btn btn-primary\\\">\\n                <i class=\\\"fa fa-user\\\"></i></button></li>\\n            <li class=\\\"list-inline-item\\\"><button (click)=\\\"addLike(member)\\\" class=\\\"btn btn-primary\\\">\\n                <i class=\\\"fa fa-heart\\\"></i></button></li>\\n            <li class=\\\"list-inline-item\\\"><button \\n                routerLink='/members/{{member.username}}'\\n                [queryParams]='{tab: 3}'\\n                 class=\\\"btn btn-primary\\\">\\n                <i class=\\\"fa fa-envelope\\\"></i></button></li>\\n        </ul>\\n    </div>\\n    <div class=\\\"card-body p-1\\\">\\n        <h6 class=\\\"card-title text-center mb-1\\\">\\n            <span [class.is-online]=\\\"(presence.onlineUsers$ | async).includes(member.username)\\\">\\n                <i class=\\\"fa fa-user mr-2\\\"> </i>\\n            </span>\\n           \\n            {{member.knownAs}}, {{member.age}}\\n        </h6>\\n        <p class=\\\"card-text text-muted text-center\\\">{{member.city}}</p>\\n    </div>\\n</div>\";","export default \".img-thumbnail {\\r\\n    margin: 25px;\\r\\n    width: 85%;\\r\\n    height: 85%;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer {\\r\\n    padding: 10px 15px;\\r\\n    background-color: #fff;\\r\\n    border-top: none;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVtYmVycy9tZW1iZXItZGV0YWlsL21lbWJlci1kZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixVQUFVO0lBQ1YsV0FBVztBQUNmOztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixzQkFBc0I7SUFDdEIsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvbWVtYmVycy9tZW1iZXItZGV0YWlsL21lbWJlci1kZXRhaWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbWctdGh1bWJuYWlsIHtcclxuICAgIG1hcmdpbjogMjVweDtcclxuICAgIHdpZHRoOiA4NSU7XHJcbiAgICBoZWlnaHQ6IDg1JTtcclxufVxyXG5cclxuLmNhcmQtYm9keSB7XHJcbiAgICBwYWRkaW5nOiAwIDI1cHg7XHJcbn1cclxuXHJcbi5jYXJkLWZvb3RlciB7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDE1cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgYm9yZGVyLXRvcDogbm9uZTtcclxufSJdfQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbWJlcnMvbWVtYmVyLWxpc3QvbWVtYmVyLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\";","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BusyService } from '../_services/busy.service';\nimport { delay, finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n\n  constructor(private busyService: BusyService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    this.busyService.busy();\n\n    return next.handle(request).pipe(\n      finalize(() => {\n        this.busyService.idle();\n      })\n    )\n  }\n}\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { PaginatedResult } from \"../_models/pagination\";\r\n\r\nexport function getPaginatedResult<T>(url: any, params: any, http: HttpClient) {\r\n  const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\r\n  return http.get<T>(url, { observe: 'response', params }).pipe(\r\n    map(response => {\r\n        paginatedResult.result = response.body! ;\r\n      if (response.headers.get('Pagination') !== null) {\r\n        paginatedResult.pagination = JSON.parse(response.headers.get('Pagination') ?? '');\r\n      }\r\n      return paginatedResult;\r\n    })\r\n  );\r\n}\r\n\r\nexport function getPaginationHeaders(pageNumber: number, pageSize: number) {\r\n  let params = new HttpParams();\r\n\r\n  params = params.append('pageNumber', pageNumber.toString());\r\n  params = params.append('pageSize', pageSize.toString());\r\n\r\n  return params;\r\n}","export default \"<ngx-spinner>\\r\\n    <h3>Loading...</h3>\\r\\n</ngx-spinner>\\r\\n\\r\\n<app-nav></app-nav>\\r\\n\\r\\n<div class=\\\"container\\\" style=\\\"margin-top: 100px\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\\r\\n\";","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Member } from '../_models/member';\nimport {of} from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { PaginatedResult } from '../_models/pagination';\nimport { UserParams } from '../_models/userParams';\nimport { AccountService } from './account.service';\nimport { User } from '../_models/user';\nimport { Params } from '@angular/router';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelpers';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MembersService {\n  baseUrl = environment.apiUrl;\n  members: Member[] = [];\n  memberCache = new Map();\n  user!: User;\n  userParams!: UserParams;\n\n\n  constructor(private http : HttpClient, private accountService: AccountService) { \n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      this.user = this.user;\n      this.userParams = new UserParams(user);\n  })\n  }\n\n  getUserParams () {\n    return this.userParams;\n  }\n\n  setUserParams(params : UserParams){\n    this.userParams = params;\n  }\n\n  resetUserParams() {\n    this.userParams = new UserParams(this.user);\n    return this.userParams;\n  }\n\n\n  getMembers(userParams: UserParams) {\n    var response = this.memberCache.get(Object.values(userParams).join('-'));\n    if(response){\n      return of(response);\n    }\n    let params = getPaginationHeaders(userParams.pageNumber, userParams.pageSize);\n\n    params = params.append('minAge',userParams.minAge.toString());\n    params = params.append('maxAge',userParams.maxAge.toString());\n    params = params.append('gender',userParams.gender);\n    params = params.append('orderBy',userParams.orderBy);\n    \n\n    return getPaginatedResult<Member[]>(this.baseUrl + 'users', params, this.http)\n    .pipe(map(response =>{\n      this.memberCache.set(Object.values(userParams).join('-'), response);\n      return response;\n    }))\n   \n  }\n\n  getMember(username: string) {\n    const member = [...this.memberCache.values()]\n    .reduce((arr,elem) => arr.concat(elem.result), [])\n    .find((member: Member) => member.username === username);\n\n    if(member){\n      return of(member);\n    }\n    return this.http.get<Member>(this.baseUrl + 'users/' + username);\n  }\n\n  updateMember(member: Member) {\n    return this.http.put(this.baseUrl + 'users', member).pipe(\n      map(() => {\n        const index = this.members.indexOf(member);\n        this.members[index] = member;\n      })\n    )\n  }\n\n  setMainPhoto(photoId: Number){\n    return this.http.put(this.baseUrl + 'users/set-main-photo/' + photoId, {});\n  }\n\n  deletePhoto(photoId: number){\n    return this.http.delete(this.baseUrl + 'users/delete-photo/' + photoId);\n\n  }\n\n  addLike(username: string){\n    return this.http.post(this.baseUrl + 'likes/' + username, {});\n  }\n\n  getLikes(predicate: string, pageNumber:number, pageSize:number) {\n    let params = getPaginationHeaders(pageNumber, pageSize); \n    params = params.append('predicate', predicate)\n    return getPaginatedResult<Partial<Member[]>>(this.baseUrl + 'likes', params, this.http);\n  }\n  \n  }\n  \n  \n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { ToastrModule } from 'ngx-toastr';\nimport { SharedModule } from './_modules/shared.module';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { HasRoleDirective } from './_directives/has-role.directive';\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n    MemberListComponent,\n    MemberDetailComponent,\n    ListsComponent,\n    MessagesComponent,\n    TestErrorsComponent,\n    NotFoundComponent,\n    ServerErrorComponent,\n    MemberCardComponent,\n    MemberEditComponent,\n    PhotoEditorComponent,\n    TextInputComponent,\n    DateInputComponent,\n    MemberMessagesComponent,\n    AdminPanelComponent,\n    HasRoleDirective,\n    UserManagementComponent,\n    PhotoManagementComponent,\n    RolesModalComponent,\n    ConfirmDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    NgxSpinnerModule\n  \n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true},\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Photo } from 'src/app/_models/photo';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() member!:Member;\n  uploader !: FileUploader;\n  hasBaseDropZoneOver = false;\n  baseUrl = environment.apiUrl;\n  user !: User;\n  constructor(private accountService: AccountService, private memberService: MembersService) { \n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\n  }\n\n  ngOnInit(): void {\n    this.initializeUploader();\n  }\n\n  fileOverBase(e: any){\n    this.hasBaseDropZoneOver = e;\n  }\n\n  setMainPhoto(photo: Photo) {\n    this.memberService.setMainPhoto(photo.id).subscribe(() =>{\n      this.user.photoUrl = photo.url;\n      this.accountService.setCurrentUser(this.user);\n      this.member.photoUrl = photo.url;\n      this.member.photos.forEach(p =>{\n        if(p.isMain) p.isMain = false;\n        if(p.id === photo.id) p.isMain = true;\n      })\n    })\n  }\n\n  deletePhoto(photoId: number) {\n    this.memberService.deletePhoto(photoId).subscribe(() => {\n      this.member.photos = this. member.photos.filter(x => x.id !== photoId);\n    })\n  }\n  initializeUploader(){\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/add-photo',\n      authToken: 'Bearer ' + this.user.token,\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize:10 *1024 *1024\n    });\n    this.uploader.onAfterAddingFile = (file) =>{\n      file.withCredentials = false;\n    }\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if(response) {\n        const photo: Photo = JSON.parse(response);\n        this.member.photos.push(photo);\n        if(photo.isMain){\n          this.user.photoUrl = photo.url;\n          this.member.photoUrl = photo.url;\n          this.accountService.setCurrentUser(this.user);\n        }\n      }\n    }\n  }\n\n\n}\n\n","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Member } from \"../_models/member\";\r\nimport { MembersService } from \"../_services/members.service\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MemberDetailedResolver implements Resolve<Member> {\r\n\r\n    constructor(private memberService: MembersService) {\r\n\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Member> {\r\n        return this.memberService.getMember(route.paramMap.get('username')!);\r\n    }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbWJlcnMvcGhvdG8tZWRpdG9yL3Bob3RvLWVkaXRvci5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGFscy9yb2xlcy1tb2RhbC9yb2xlcy1tb2RhbC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit,Input, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.css']\n})\nexport class TextInputComponent implements ControlValueAccessor {\n  @Input() label: string = '';\n  @Input() type = 'text'; \n\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this\n   }\n  writeValue(obj: any): void {\n    \n  }\n  registerOnChange(fn: any): void {\n    \n  }\n  registerOnTouched(fn: any): void {\n    \n  }\n  setDisabledState?(isDisabled: boolean): void {\n    \n  }\n\n  ngOnInit(): void {\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Member } from '../_models/member';\nimport { Pagination } from '../_models/pagination';\nimport { MembersService } from '../_services/members.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  members!: Partial<Member[]>;\n  predicate = 'liked';\n  pageNumber = 1;\n  pageSize = 5;\n  pagination!: Pagination;\n\n  constructor(private memberService: MembersService) { }\n\n  ngOnInit(): void {\n    this.loadLikes();\n  }\n\n  loadLikes() {\n    this.memberService.getLikes(this.predicate, this.pageNumber, this.pageSize).subscribe(response => {\n      this.members = response.result;\n      this.pagination = response.pagination;  \n    })\n  }\n\n  pageChanged(event: any) {\n    this.pageNumber = event.page;\n    this.loadLikes();\n  }\n\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLXBhbmVsL2FkbWluLXBhbmVsLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"<div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title pull-left\\\">{{title}}</h4>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <p>{{message}}</p>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"confirm()\\\">{{btnOkText}}</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"decline()\\\">{{btnCancelText}}</button>\\n  </div>\";","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from '../_services/account.service';\nimport { User } from '../_models/user';\nimport { Observable } from 'rxjs';\nimport {Router} from '@angular/router'\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit{\n    model : any ={};\n\n    constructor(public accountService: AccountService, private router: Router, private toastr:ToastrService) {}\n\n    ngOnInit(): void{\n        \n    }\n    login() {\n      this.accountService.login(this.model).subscribe(response =>{\n        this.router.navigateByUrl('\\members');\n      })\n    }\n      \n  logout() {\n    this.accountService.logout();\n    this.router.navigateByUrl('/');\n  }   \n}\n","export default \"<nav class=\\\"navbar navbar-expand-md navbar-dark fixed-top bg-primary\\\">\\n  <div class='container'>\\n    <a class=\\\"navbar-brand\\\" routerLink='/' routerLinkActive=\\\"active\\\">Dating App</a>\\n      \\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <ng-container *ngIf=\\\"accountService.currentUser$ | async\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink='/members' routerLinkActive=\\\"active\\\">Matches</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink='/lists' routerLinkActive=\\\"active\\\">Lists</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink='/messages' routerLinkActive=\\\"active\\\">Messages</a>\\n        </li>\\n        <li *appHasRole='[\\\"Admin\\\", \\\"Moderator\\\"]' class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink='/admin' routerLinkActive=\\\"active\\\">Admin</a>\\n        </li>\\n      </ng-container>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink='/errors' routerLinkActive=\\\"active\\\">Errors</a>\\n      </li>\\n        \\n      </ul>\\n      <div class=\\\"dropdown\\\" *ngIf=\\\"accountService.currentUser$ | async as user\\\"  dropdown>\\n        <img src=\\\"{{user.photoUrl || './assets/user.png'}}\\\" alt=\\\"{{user.username}}\\\">\\n        <a class=\\\"dropdown-toggle text-light ml-2\\\" dropdownToggle>Welcome {{user.knownAs || user.username | titlecase}}</a>\\n        <div class=\\\"dropdown-menu mt-3\\\" *dropdownMenu>\\n          <a class=\\\"dropdown-item\\\"routerLink=\\\"/member/edit\\\" routerLinkActive=\\\"active\\\">Edit Profile</a>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">Logout</a>\\n        </div>\\n      </div>\\n      <form *ngIf=\\\"(accountService.currentUser$ | async) === null\\\" #loginForm=\\\"ngForm\\\" class=\\\"d-flex\\\" (ngSubmit)=\\\"login()\\\" \\n      autocomplete=\\\"off\\\">\\n        <input \\n        name=\\\"username\\\"\\n        [(ngModel)] = \\\"model.username\\\"\\n        class=\\\"form-control mr-sm-2\\\" \\n        type=\\\"text\\\" \\n        placeholder=\\\"Username\\\">\\n        <input \\n        name=\\\"password\\\"\\n        [(ngModel)] = \\\"model.password\\\"\\n        class=\\\"form-control mr-sm-2\\\" \\n        type=\\\"password\\\" \\n        placeholder=\\\"Password\\\">\\n        <button class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\">Login</button>\\n      </form>\\n    </div>\\n</nav>\\n  \\n    \\n\";","import { Component, Input, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Member } from 'src/app/_models/member';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { PresenceService } from 'src/app/_services/presence.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() member!: Member\n\n  constructor(private memberService: MembersService, private toastr: ToastrService,\n    public presence: PresenceService) { }\n  \n  ngOnInit(): void {\n    \n  }\n\n  addLike(member: Member) {\n    this.memberService.addLike(member.username).subscribe(() =>{\n      this.toastr.success('You have liked ' + member.knownAs);\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PresenceService {\n  hubUrl = environment.hubUrl;\n  private hubConnection!: HubConnection;\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\n  onlineUsers$ = this.onlineUsersSource.asObservable();\n\n  constructor(private toastr: ToastrService, private router: Router) { }\n\n  createHubConnection (user: User) {\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(this.hubUrl + 'presence', {\n        accessTokenFactory: () => user.token\n      })\n      .withAutomaticReconnect()\n      .build()\n\n    this.hubConnection\n      .start()\n      .catch(error => console.log(error));\n\n    this.hubConnection.on('UserIsOnline', username => {\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\n        this.onlineUsersSource.next([...usernames, username])\n      })\n    })\n\n    this.hubConnection.on('UserIsOffline', username => {\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\n        this.onlineUsersSource.next([...usernames.filter(x => x !== username)])\n      })\n    })\n\n    this.hubConnection.on('GetOnlineUsers', (usernames: string[]) => {\n      this.onlineUsersSource.next(usernames);\n    })\n\n    this.hubConnection.on('NewMessageReceived', ({username, knownAs}) => {\n      this.toastr.info(knownAs + ' has sent you a new message')\n        .onTap\n        .pipe(take(1))\n        .subscribe(() => this.router.navigateByUrl('/members/' + username + '?tab=3'));\n    })\n  }\n\n  stopHubConnection() {\n    this.hubConnection.stop().catch(error => console.log(error));\n  }\n}","export default \"<div class=\\\"form-group\\\">\\n    <input \\n    [class.is-invalid]=\\\"ngControl.touched && ngControl.invalid\\\"\\n    type={{type}}\\n    class=\\\"form-control\\\"\\n    [formControl]=\\\"ngControl.control\\\" \\n    placeholder={{label}}>\\n\\n    <div *ngIf=\\\"ngControl.control?.errors?.required\\\" \\n    class=\\\"invalid-feedback\\\">Please enter a {{label}}</div>\\n\\n    <div *ngIf=\\\"ngControl.control?.errors?.minlength\\\"\\n    class=\\\"invalid-feedback\\\">\\n    {{label}} must be least {{ngControl.control?.errors?.minlength['requiredLength']}}\\n    </div>\\n\\n    <div *ngIf=\\\"ngControl.control?.errors?.maxlength\\\" \\n    class=\\\"invalid-feedback\\\">\\n    {{label}} must be most {{ngControl.control?.errors?.maxlength['requiredLength']}}\\n    </div>\\n\\n    <div *ngIf=\\\"ngControl.control?.errors?.isMatching\\\" \\n    class=\\\"invalid-feedback\\\">Passwords do not match</div>\\n\\n\\n</div>\";","import { User } from \"./user\";\r\n\r\nexport class UserParams {\r\n    gender: string;\r\n    minAge = 18;\r\n    maxAge = 99;\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    orderBy = 'lastActive';\r\n\r\n    constructor(user: User) {\r\n        this.gender = user && user.gender === 'female' ? 'male' : 'female';\r\n    }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGFscy9jb25maXJtLWRpYWxvZy9jb25maXJtLWRpYWxvZy5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3VzZXItbWFuYWdlbWVudC91c2VyLW1hbmFnZW1lbnQuY29tcG9uZW50LmNzcyJ9 */\";","export default \".card:hover img {\\r\\n    transform: scale(1.2, 1.2);\\r\\n    transition-duration: 500ms;\\r\\n    transition-timing-function: ease-out;\\r\\n    opacity: 0.7;\\r\\n}\\r\\n\\r\\n.card img {\\r\\n    transform: scale(1.0, 1.0);\\r\\n    transition-duration: 500ms;\\r\\n    transition-timing-function: ease-out;    \\r\\n}\\r\\n\\r\\n.card-img-wrapper {\\r\\n    overflow: hidden;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.member-icons {\\r\\n    position: absolute;\\r\\n    bottom: -30%;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    opacity: 0;\\r\\n}\\r\\n\\r\\n.card-img-wrapper:hover .member-icons {\\r\\n    opacity: 1;\\r\\n    bottom: 0;\\r\\n}\\r\\n\\r\\n.animate {\\r\\n    transition: all 0.3s ease-in-out;\\r\\n}\\r\\n\\r\\n@keyframes fa-blink {\\r\\n    0% {opacity: 1;}\\r\\n    100% {opacity: 0.4;}\\r\\n}\\r\\n\\r\\n.is-online {\\r\\n    animation: fa-blink 1.5s linear infinite;\\r\\n    color: rgb(1, 180, 42);    \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVtYmVycy9tZW1iZXItY2FyZC9tZW1iZXItY2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksMEJBQTBCO0lBQzFCLDBCQUEwQjtJQUMxQixvQ0FBb0M7SUFDcEMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLDBCQUEwQjtJQUMxQiwwQkFBMEI7SUFDMUIsb0NBQW9DO0FBQ3hDOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osT0FBTztJQUNQLFFBQVE7SUFDUixpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLFVBQVU7QUFDZDs7QUFFQTtJQUNJLFVBQVU7SUFDVixTQUFTO0FBQ2I7O0FBRUE7SUFDSSxnQ0FBZ0M7QUFDcEM7O0FBRUE7SUFDSSxJQUFJLFVBQVUsQ0FBQztJQUNmLE1BQU0sWUFBWSxDQUFDO0FBQ3ZCOztBQUVBO0lBQ0ksd0NBQXdDO0lBQ3hDLHNCQUFzQjtBQUMxQiIsImZpbGUiOiJzcmMvYXBwL21lbWJlcnMvbWVtYmVyLWNhcmQvbWVtYmVyLWNhcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkOmhvdmVyIGltZyB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMiwgMS4yKTtcclxuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDUwMG1zO1xyXG4gICAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2Utb3V0O1xyXG4gICAgb3BhY2l0eTogMC43O1xyXG59XHJcblxyXG4uY2FyZCBpbWcge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjAsIDEuMCk7XHJcbiAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiA1MDBtcztcclxuICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLW91dDsgICAgXHJcbn1cclxuXHJcbi5jYXJkLWltZy13cmFwcGVyIHtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5tZW1iZXItaWNvbnMge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYm90dG9tOiAtMzAlO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBvcGFjaXR5OiAwO1xyXG59XHJcblxyXG4uY2FyZC1pbWctd3JhcHBlcjpob3ZlciAubWVtYmVyLWljb25zIHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgICBib3R0b206IDA7XHJcbn1cclxuXHJcbi5hbmltYXRlIHtcclxuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0O1xyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGZhLWJsaW5rIHtcclxuICAgIDAlIHtvcGFjaXR5OiAxO31cclxuICAgIDEwMCUge29wYWNpdHk6IDAuNDt9XHJcbn1cclxuXHJcbi5pcy1vbmxpbmUge1xyXG4gICAgYW5pbWF0aW9uOiBmYS1ibGluayAxLjVzIGxpbmVhciBpbmZpbml0ZTtcclxuICAgIGNvbG9yOiByZ2IoMSwgMTgwLCA0Mik7ICAgIFxyXG59Il19 */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"<div class=\\\"form-group\\\">\\n    <input \\n    type=\\\"text\\\"\\n    [class.is-invalid]='ngControl.touched && ngControl.invalid'\\n    class=\\\"form-control\\\"\\n    [formControl]='ngControl.control'\\n    placeholder=\\\"{{label}}\\\"\\n    bsDatepicker\\n    [bsConfig]='bsConfig'\\n    [maxDate]='maxDate'\\n>\\n    <div *ngIf=\\\"ngControl.control?.errors?.required\\\" class=\\\"invalid-feedback\\\">{{label}} is required</div>\\n</div>\";","export default \"<div class=\\\"row mb-4\\\">\\n    <div class=\\\"btn-group\\\" name='container'>\\n        <button class=\\\"btn btn-primary\\\" btnRadio='Unread' [(ngModel)]=\\\"container\\\" \\n            (click)=\\\"loadMessages()\\\">\\n            <i class=\\\"fa fa-envelope\\\"></i> Unread\\n        </button>\\n        <button class=\\\"btn btn-primary\\\" btnRadio='Inbox' [(ngModel)]=\\\"container\\\" \\n            (click)=\\\"loadMessages()\\\">\\n            <i class=\\\"fa fa-envelope-open\\\"></i> Inbox\\n        </button>\\n        <button class=\\\"btn btn-primary\\\" btnRadio='Outbox' [(ngModel)]=\\\"container\\\" \\n            (click)=\\\"loadMessages()\\\">\\n            <i class=\\\"fa fa-paper-plane\\\"></i> Outbox\\n        </button>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"messages?.length === 0\\\">\\n    <h3>No messages</h3>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"messages?.length > 0\\\">\\n    <table class=\\\"table table-hover\\\" style=\\\"cursor: pointer;\\\">\\n        <tr>\\n            <th style=\\\"width: 40%;\\\">Message</th>\\n            <th style=\\\"width: 20%;\\\">From / To</th>\\n            <th style=\\\"width: 20%;\\\">Sent / Received</th>\\n            <th style=\\\"width: 20%;\\\"></th>\\n        </tr>\\n        <tr [hidden]=\\\"loading\\\" *ngFor=\\\"let message of messages\\\" \\n            routerLink='{{container === \\\"Outbox\\\" \\n            ? \\\"/members/\\\" + message.recipientUsername \\n            : \\\"/members/\\\" + message.senderUsername}}' [queryParams]=\\\"{tab: 3}\\\" >\\n            <td>{{message.content}}</td>\\n            <td>\\n                <div *ngIf=\\\"containter === 'Outbox'\\\">\\n                    <img \\n                        class=\\\"img-circle rounded-circle mr-2\\\"\\n                        src=\\\"{{message.recipientPhotoUrl || './assets/user.png'}}\\\" \\n                        alt=\\\"{{message.recipientUsername}}\\\">\\n                    <strong>{{message.recipientUsername | titlecase}}</strong>\\n                </div>\\n                <div *ngIf=\\\"containter !== 'Outbox'\\\">\\n                    <img \\n                        class=\\\"img-circle rounded-circle mr-2\\\"\\n                        src=\\\"{{message.senderPhotoUrl || './assets/user.png'}}\\\" \\n                        alt=\\\"{{message.senderUsername}}\\\">\\n                    <strong>{{message.senderUsername | titlecase}}</strong>\\n                </div>\\n            </td>\\n            <td>{{message.messageSent | timeago}}</td>\\n            <td>\\n                <button (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"deleteMessage(message.id)\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n            </td>\\n        </tr>\\n    </table>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"pagination && !loading\\\">\\n    <pagination \\n        [boundaryLinks]=\\\"true\\\" \\n        [totalItems]='pagination.totalItems'\\n        [itemsPerPage]='pagination.itemsPerPage'\\n        [(ngModel)]=\\\"pagination.currentPage\\\"\\n        (pageChanged)=\\\"pageChanged($event)\\\"\\n        previousText=\\\"&lsaquo;\\\" \\n        nextText=\\\"&rsaquo;\\\" \\n        firstText=\\\"&laquo;\\\"\\n        lastText=\\\"&raquo;\\\">\\n</pagination>\\n</div>\\n\";","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col-4\\\">\\n        <div class=\\\"card\\\">\\n            <img src=\\\"{{member.photoUrl || './assets/user.png'}}\\\" alt=\\\"{{member.knownAs}}\\\" \\n                class=\\\"card-img-top img-thumbnail\\\">  \\n            <div class=\\\"card-body\\\">\\n                <div class=\\\"mb-2\\\" *ngIf=\\\"(presence.onlineUsers$ | async).includes(member.username)\\\">\\n                    <i class=\\\"fa fa-user-circle text-success\\\"></i> Online now\\n                </div>\\n                <div>\\n                    <strong>Location:</strong>\\n                    <p>{{member.city}}, {{member.country}}</p>\\n                </div>\\n                <div>\\n                    <strong>Age:</strong>\\n                    <p>{{member.age}}</p>\\n                </div>\\n                <div>\\n                    <strong>Last Active:</strong>\\n                    <p>{{member.lastActive | timeago}}</p>\\n                </div>\\n                <div>\\n                    <strong>Member since:</strong>\\n                    <p>{{member.created | date: 'dd mmmm yyyy'}}</p>\\n                </div>\\n            </div>  \\n            <div class=\\\"card-footer\\\">\\n                <div class=\\\"btn-group d-flex\\\">\\n                    <button class=\\\"btn btn-primary\\\">Like</button>\\n                    <button (click)=\\\"selectTab(3)\\\" class=\\\"btn btn-success\\\">Message</button>\\n                </div>    \\n            </div>\\n        </div>\\n    </div>\\n    \\n\\n    <div class=\\\"col-8\\\">\\n        <tabset class=\\\"member-tabset\\\" #memberTabs> \\n            <tab heading=\\\"About {{member.knownAs}}\\\" (selectTab)=\\\"onTabActivated($event)\\\">\\n                <h4>Desciption</h4>\\n                <p>{{member.introduction}}</p>\\n                <h4>Looking for</h4>\\n                <p>{{member.lookingFor}}</p>\\n            </tab>\\n            <tab heading=\\\"Interests\\\" (selectTab)=\\\"onTabActivated($event)\\\">\\n                <h4>Interests</h4>\\n                <p>{{member.interests}}</p>\\n            </tab>\\n            <tab heading=\\\"Photos\\\" (selectTab)=\\\"onTabActivated($event)\\\">\\n                <ngx-gallery [options]=\\\"galleryOptions\\\" [images]=\\\"galleryImages\\\" \\n                style=\\\"display: inline-block; margin-bottom: 20px;\\\"></ngx-gallery>\\n            </tab>\\n            <tab heading=\\\"Messages\\\" (selectTab)=\\\"onTabActivated($event)\\\">\\n                <app-member-messages  [username]=\\\"member.username\\\"></app-member-messages>\\n            </tab>\\n        </tabset>\\n    </div>\\n</div>\\n        \";","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm') \n  editForm!: NgForm;\n  member!: Member;\n  user!: User;\n  @HostListener('window:beforeunload', ['$event']) unloadNotification($event: any) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true; \n    }  \n  }\n\n  constructor(private accountService: AccountService, private memberService: MembersService, \n    private toastr: ToastrService) {\n      this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\n  }\n\n  ngOnInit(): void {\n    this.loadMember();\n  }\n\n  loadMember() {\n    this.memberService.getMember(this.user.username).subscribe(member => {\n      this.member = member;\n    })   \n  }\n\n  updateMember() {\n    this.memberService.updateMember(this.member).subscribe(() => {\n      this.toastr.success('Profile updated successfully');\n      this.editForm.reset(this.member);\n    })\n  }\n}  ","import { Injectable } from '@angular/core';\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\nimport { ConfirmService } from '../_services/confirm.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\n\n  constructor(private confirmService: ConfirmService) {}\n\n  canDeactivate(component: MemberEditComponent): Observable<boolean> | boolean {\n    if (component.editForm.dirty) {\n      return this.confirmService.confirm();\n    }\n    return true;\n  }\n  \n}","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n  title!: string;\n  message!: string;\n  btnOkText!: string;\n  btnCancelText!: string;\n  result!: boolean;\n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  confirm() {\n    this.result = true;\n    this.bsModalRef.hide();\n  }\n\n  decline() {\n    this.result = false;\n    this.bsModalRef.hide();\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\nimport { MemberDetailedResolver } from './_resolvers/member-detailed.resolver';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { AdminGuard } from './_guards/admin.guard';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    canActivate: [AuthGuard],\n    children: [\n      {path: 'members', component: MemberListComponent},\n      {path: 'members/:username', component: MemberDetailComponent, resolve: {member: MemberDetailedResolver}},\n      {path: 'member/edit', component: MemberEditComponent, canDeactivate: [PreventUnsavedChangesGuard]}, \n      {path: 'lists', component: ListsComponent},\n      {path: 'messages', component: MessagesComponent},\n      {path: 'admin', component: AdminPanelComponent, canActivate: [AdminGuard]},\n    ]\n  },\n  {path: 'errors', component: TestErrorsComponent},\n  {path: 'not-found', component: NotFoundComponent},\n  {path: 'server-error', component: ServerErrorComponent},\n  {path: '**', component: NotFoundComponent,pathMatch:'full'}\n];\n  \n  \n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { ConfirmDialogComponent } from '../modals/confirm-dialog/confirm-dialog.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmService {\n  bsModelRef!: BsModalRef;\n\n  constructor(private modalService: BsModalService) { }\n\n  confirm(title = 'Confirmation', \n    message = 'Are you sure you want to do this?',\n    btnOkText = 'Ok',\n    btnCancelText = 'Cancel'): Observable<boolean> {\n      const config = {\n        initialState: {\n          title,\n          message,\n          btnOkText,\n          btnCancelText  \n        }\n      } \n      this.bsModelRef = this.modalService.show(ConfirmDialogComponent, config);\n      \n      return new Observable<boolean>(this.getResult());\n    }\n\n    private getResult() {\n      return (observer : any) => {\n        const subcription = this.bsModelRef.onHidden.subscribe(() => {\n          observer.next(this.bsModelRef.content.result);\n          observer.complete();\n        });\n\n        return {\n          unsubscribe() {\n            subcription.unsubscribe();  \n          }\n        }\n      }\n    }\n}","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { User } from 'src/app/_models/user';\n\n@Component({\n  selector: 'app-roles-modal',\n  templateUrl: './roles-modal.component.html',\n  styleUrls: ['./roles-modal.component.css']\n})\nexport class RolesModalComponent implements OnInit {\n  @Input() updateSelectedRoles = new EventEmitter();\n  user!: User;\n  roles!: any[];\n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  updateRoles() {\n    this.updateSelectedRoles.emit(this.roles);\n    this.bsModalRef.hide();\n  }\n}","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3RzL2xpc3RzLmNvbXBvbmVudC5jc3MifQ== */\";"],"sourceRoot":"webpack:///"}