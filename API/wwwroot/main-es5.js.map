{"version":3,"sources":["webpack:///src/app/members/member-messages/member-messages.component.css","webpack:///src/app/register/register.component.css","webpack:///src/app/errors/test-errors/test-errors.component.ts","webpack:///src/app/_forms/date-input/date-input.component.ts","webpack:///tough-cookie (ignored)","webpack:///src/app/register/register.component.ts","webpack:///src/app/_forms/text-input/text-input.component.css","webpack:///node-fetch (ignored)","webpack:///src/app/admin/admin-panel/admin-panel.component.html","webpack:///src/app/members/member-messages/member-messages.component.ts","webpack:///fetch-cookie (ignored)","webpack:///abort-controller (ignored)","webpack:///src/app/admin/photo-management/photo-management.component.ts","webpack:///src/app/errors/not-found/not-found.component.ts","webpack:///ws (ignored)","webpack:///src/app/_services/account.service.ts","webpack:///eventsource (ignored)","webpack:///src/app/errors/not-found/not-found.component.css","webpack:///src/app/errors/server-error/server-error.component.ts","webpack:///src/app/_directives/has-role.directive.ts","webpack:///src/app/_services/busy.service.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/app.component.css","webpack:///src/app/_models/pagination.ts","webpack:///src/environments/environment.ts","webpack:///src/app/members/member-messages/member-messages.component.html","webpack:///src/app/_interceptors/jwt.interceptor.ts","webpack:///src/app/modals/roles-modal/roles-modal.component.html","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/members/photo-editor/photo-editor.component.html","webpack:///src/app/admin/user-management/user-management.component.html","webpack:///src/app/errors/test-errors/test-errors.component.css","webpack:///src/app/admin/photo-management/photo-management.component.html","webpack:///src/app/home/home.component.html","webpack:///src/app/admin/photo-management/photo-management.component.css","webpack:///src/app/_modules/shared.module.ts","webpack:///src/app/errors/test-errors/test-errors.component.html","webpack:///src/app/lists/lists.component.html","webpack:///src/app/_interceptors/error.interceptor.ts","webpack:///src/app/errors/server-error/server-error.component.html","webpack:///src/app/_guards/admin.guard.ts","webpack:///src/app/_services/admin.service.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/admin/user-management/user-management.component.ts","webpack:///src/app/members/member-list/member-list.component.html","webpack:///src/app/messages/messages.component.css","webpack:///src/app/members/member-detail/member-detail.component.ts","webpack:///src/app/_guards/auth.guard.ts","webpack:///src/app/_services/message.service.ts","webpack:///src/app/errors/server-error/server-error.component.css","webpack:///src/app/home/home.component.css","webpack:///src/app/members/member-list/member-list.component.ts","webpack:///src/app/nav/nav.component.css","webpack:///src/app/members/member-edit/member-edit.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/errors/not-found/not-found.component.html","webpack:///src/app/members/member-edit/member-edit.component.css","webpack:///src/app/_forms/date-input/date-input.component.css","webpack:///src/app/members/member-card/member-card.component.html","webpack:///src/app/members/member-detail/member-detail.component.css","webpack:///src/app/members/member-list/member-list.component.css","webpack:///src/app/_interceptors/loading.interceptor.ts","webpack:///src/app/_services/paginationHelpers.ts","webpack:///src/app/app.component.html","webpack:///src/app/_services/members.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/members/photo-editor/photo-editor.component.ts","webpack:///src/app/_resolvers/member-detailed.resolver.ts","webpack:///src/app/members/photo-editor/photo-editor.component.css","webpack:///src/app/modals/roles-modal/roles-modal.component.css","webpack:///src/app/_forms/text-input/text-input.component.ts","webpack:///src/app/lists/lists.component.ts","webpack:///src/app/admin/admin-panel/admin-panel.component.css","webpack:///src/app/modals/confirm-dialog/confirm-dialog.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/members/member-card/member-card.component.ts","webpack:///src/app/_services/presence.service.ts","webpack:///src/app/_forms/text-input/text-input.component.html","webpack:///src/app/_models/userParams.ts","webpack:///src/app/modals/confirm-dialog/confirm-dialog.component.css","webpack:///src/app/admin/user-management/user-management.component.css","webpack:///src/app/members/member-card/member-card.component.css","webpack:///src/app/admin/admin-panel/admin-panel.component.ts","webpack:///src/app/_forms/date-input/date-input.component.html","webpack:///src/app/messages/messages.component.html","webpack:///src/app/members/member-detail/member-detail.component.html","webpack:///src/app/members/member-edit/member-edit.component.ts","webpack:///src/app/_guards/prevent-unsaved-changes.guard.ts","webpack:///src/app/modals/confirm-dialog/confirm-dialog.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/_services/confirm.service.ts","webpack:///src/app/modals/roles-modal/roles-modal.component.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/lists/lists.component.css"],"names":["TestErrorsComponent","http","baseUrl","apiUrl","validationErrors","get","subscribe","response","console","log","error","post","selector","template","DateInputComponent","ngControl","label","maxDate","Date","valueAccessor","bsConfig","containerClass","dateInputFormat","obj","fn","RegisterComponent","accountService","toastr","fb","router","cancelRegister","intitializeForm","setFullYear","getFullYear","registerForm","group","gender","username","required","knownAs","dateOfBirth","city","country","password","minLength","maxLength","confirmPassword","matchValues","matchTo","control","con","parent","controls","value","isMatching","register","navigateByUrl","emit","MemberMessagesComponent","messageService","sendMessage","messageContent","then","messageForm","reset","changeDetection","OnPush","PhotoManagementComponent","NotFoundComponent","AccountService","presence","currentUserSource","currentUser$","asObservable","model","pipe","user","setCurrentUser","createHubConnection","roles","getDecodedToken","token","role","Array","isArray","push","localStorage","setItem","JSON","stringify","next","removeItem","stopHubConnection","parse","atob","split","providedIn","ServerErrorComponent","navigation","getCurrentNavigation","extras","state","HasRoleDirective","viewContainerRef","templateRef","clear","some","r","appHasRole","includes","createEmbeddedView","BusyService","spinnerService","busyRequestCount","show","undefined","type","bdColor","color","hide","HomeComponent","registerMode","event","PaginatedResult","environment","production","hubUrl","JwtInterceptor","request","currentUser","clone","setHeaders","Authorization","handle","MessagesComponent","confirmService","messages","container","pageNumber","pageSize","loading","loadMessages","getMessages","result","pagination","id","confirm","deleteMessage","splice","findIndex","m","page","SharedModule","declarations","imports","forRoot","positionClass","exports","ErrorInterceptor","status","errors","modalStateErrors","key","flat","statusText","navigationExtras","AdminGuard","AdminService","UserManagementComponent","adminService","modalService","getUsersWithRoles","users","config","initialState","getRolesArray","bsModalRef","content","updateSelectedRoles","values","rolesToUpdate","filter","el","checked","map","name","updateUserRoles","userRoles","availableRoles","forEach","isMatch","userRole","MemberDetailComponent","route","routeReuseStrategy","shouldReuseRoute","data","member","queryParams","params","tab","selectTab","galleryOptions","width","height","imagePercent","thumbnailsColumns","imageAnimation","Slide","preview","galleryImages","getImages","imageUrls","photos","photo","small","url","medium","big","getMessageThread","tabId","memberTabs","tabs","active","activeTab","heading","length","AuthGuard","accounntService","MessageService","messageThreadSource","messageThread$","otherUsername","hubConnection","withUrl","accessTokenFactory","withAutomaticReconnect","build","start","on","message","connections","x","dateRead","now","stop","append","invoke","recipientUsername","MemberListComponent","memberService","genderList","display","userParams","getUserParams","loadMembers","setUserParams","getMembers","members","resetUserParams","AppComponent","title","getItem","LoadingInterceptor","busyService","busy","idle","getPaginatedResult","paginatedResult","observe","body","headers","getPaginationHeaders","toString","MembersService","memberCache","Map","Object","join","minAge","maxAge","orderBy","set","reduce","arr","elem","concat","find","put","index","indexOf","photoId","predicate","AppModule","providers","provide","useClass","multi","bootstrap","PhotoEditorComponent","hasBaseDropZoneOver","initializeUploader","e","setMainPhoto","photoUrl","p","isMain","deletePhoto","uploader","authToken","isHTML5","allowedFileType","removeAfterUpload","autoUpload","maxFileSize","onAfterAddingFile","file","withCredentials","onSuccessItem","item","MemberDetailedResolver","getMember","paramMap","TextInputComponent","isDisabled","ListsComponent","loadLikes","getLikes","NavComponent","login","logout","MemberCardComponent","addLike","success","PresenceService","onlineUsersSource","onlineUsers$","usernames","info","onTap","UserParams","AdminPanelComponent","MemberEditComponent","$event","editForm","dirty","returnValue","loadMember","updateMember","PreventUnsavedChangesGuard","component","ConfirmDialogComponent","routes","path","runGuardsAndResolvers","canActivate","children","resolve","canDeactivate","pathMatch","AppRoutingModule","ConfirmService","btnOkText","btnCancelText","bsModelRef","getResult","observer","subcription","onHidden","complete","unsubscribe","RolesModalComponent","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["export default \".card {\\r\\n    border: none;\\r\\n}\\r\\n\\r\\n.chat {\\r\\n    list-style: none;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.chat li {\\r\\n    margin-bottom: 10px;\\r\\n    padding-bottom: 10px;\\r\\n    border-bottom: 1px dotted #B3A9A9;\\r\\n}\\r\\n\\r\\n.rounded-circle {\\r\\n    max-height: 50px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVtYmVycy9tZW1iZXItbWVzc2FnZXMvbWVtYmVyLW1lc3NhZ2VzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLFNBQVM7SUFDVCxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxtQkFBbUI7SUFDbkIsb0JBQW9CO0lBQ3BCLGlDQUFpQztBQUNyQzs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL21lbWJlcnMvbWVtYmVyLW1lc3NhZ2VzL21lbWJlci1tZXNzYWdlcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQge1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG59XHJcblxyXG4uY2hhdCB7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxufVxyXG5cclxuLmNoYXQgbGkge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IGRvdHRlZCAjQjNBOUE5O1xyXG59XHJcblxyXG4ucm91bmRlZC1jaXJjbGUge1xyXG4gICAgbWF4LWhlaWdodDogNTBweDtcclxufSJdfQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\";","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-test-errors',\n  templateUrl: './test-errors.component.html',\n  styleUrls: ['./test-errors.component.css']\n})\nexport class TestErrorsComponent implements OnInit {\n  baseUrl = environment.apiUrl;\n  validationErrors: string[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  get404Error() {\n    this.http.get(this.baseUrl + 'buggy/not-found').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get400Error() {\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get500Error() {\n    this.http.get(this.baseUrl + 'buggy/server-error').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get401Error() {\n    this.http.get(this.baseUrl + 'buggy/auth').subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    })\n  }\n\n  get400ValidationError() {\n    this.http.post(this.baseUrl + 'account/register', {}).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n      this.validationErrors = error;\n    })\n  }\n\n}","import { Component, Input, OnInit, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\n\n@Component({\n  selector: 'app-date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.css']\n})\nexport class DateInputComponent implements ControlValueAccessor {\n  @Input() label: string = '';\n  @Input() maxDate: Date = new Date() ;\n  bsConfig: Partial<BsDatepickerConfig> ;\n\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this;\n    this.bsConfig = {\n      containerClass: 'theme-red',\n      dateInputFormat: 'DD MMMM YYYY'\n    }\n   }\n  writeValue(obj: any): void {\n    \n  }\n  registerOnChange(fn: any): void {\n    \n  }\n  registerOnTouched(fn: any): void {\n    \n  }\n  \n  ngOnInit(): void {\n  }\n\n \n}\n","/* (ignored) */","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AccountService } from '../_services/account.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { ValueConverter } from '@angular/compiler/src/render3/view/template';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n    @Output() cancelRegister = new EventEmitter();\n    registerForm!: FormGroup;\n    maxDate: Date = new Date();\n    validationErrors: string[]= [];\n\n    constructor(private accountService: AccountService, private toastr: ToastrService, \n      private fb: FormBuilder, private router: Router) { }\n\n    ngOnInit(): void {\n      this.intitializeForm();\n      this.maxDate = new Date();\n      this.maxDate.setFullYear(this.maxDate.getFullYear() -18);\n    }\n\n    intitializeForm(){\n      this.registerForm = this.fb.group({\n        gender: ['male'],\n        username: ['', Validators.required],\n        knownAs: ['', Validators.required],\n        dateOfBirth: ['', Validators.required],\n        city: ['', Validators.required],\n        country: ['', Validators.required],\n        password: ['',[Validators.required,\n        Validators.minLength(4), Validators.maxLength(8)]],\n        confirmPassword:[ '', [Validators.required, this.matchValues('password')]]\n      })\n    }\n      \n    matchValues(matchTo: any): ValidatorFn {\n      return (control: AbstractControl) => {\n        let con = control?.parent?.controls as any;\n        if(con)\n          return control?.value === con[matchTo].value ? null : {isMatching: true};\n        else return null;\n      }\n    }\n\n    register() {\n      this.accountService.register(this.registerForm.value).subscribe(\n        response =>{\n        this.router.navigateByUrl('\\members');\n      }, \n      error =>{\n        this.validationErrors = error;\n      })\n    }\n      \n\n    cancel() {\n      this.cancelRegister.emit(false);\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19mb3Jtcy90ZXh0LWlucHV0L3RleHQtaW5wdXQuY29tcG9uZW50LmNzcyJ9 */\";","/* (ignored) */","export default \"<h2>Admin Panel</h2>\\n<div class=\\\"tab-panel\\\">\\n    <tabset class=\\\"member-tabset\\\">\\n        <tab heading=\\\"User management\\\" *appHasRole='[\\\"Admin\\\"]'>\\n            <div class=\\\"container\\\">\\n                <app-user-management></app-user-management>\\n            </div>\\n        </tab>\\n        <tab heading=\\\"Photo management\\\" *appHasRole='[\\\"Admin\\\",\\\"Moderator\\\"]'>\\n            <div class=\\\"container\\\">\\n                <app-photo-management></app-photo-management>\\n            </div>\\n        </tab>\\n    </tabset>\\n</div>\";","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Message } from 'src/app/_models/message';\nimport { MessageService } from 'src/app/_services/message.service';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n  @ViewChild('messageForm') messageForm!: NgForm;\n  @Input() messages!: Message[];\n  @Input() username!: string;\n  messageContent!: string;\n\n\n  constructor(public messageService: MessageService) { }\n\n  ngOnInit(): void {\n\n  }\n\n  sendMessage() {\n    this.messageService.sendMessage(this.username, this.messageContent).then(() => {\n      this.messageForm.reset();\n    })  \n  }\n}","/* (ignored) */","/* (ignored) */","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.css']\n})\nexport class PhotoManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent {\n\n}\n","/* (ignored) */","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { User } from '../_models/user';\nimport { ReplaySubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { PresenceService } from './presence.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n  baseUrl = environment.apiUrl;\n  private currentUserSource = new ReplaySubject<User>(1);\n  currentUser$ = this.currentUserSource.asObservable();\n\n  constructor(private http: HttpClient, private presence: PresenceService) { }\n\n  login(model: any) {\n    return this.http.post<User>(this.baseUrl + 'account/login', model).pipe(\n      map((response: User) => {\n        const user = response;\n        if (user) {\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);\n        }\n      })\n    )\n  }\n\n  register(model: any) {\n    return this.http.post<User>(this.baseUrl + 'account/register', model).pipe(\n      map((user: User) => {\n        if (user) {\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);\n        }\n      })\n    )\n  }\n\n  setCurrentUser(user: User) {\n    user.roles = [];\n    const roles = this.getDecodedToken(user.token).role;\n    Array.isArray(roles) ? user.roles = roles : user.roles.push(roles);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.currentUserSource.next(user);\n  }\n\n\n  logout() {\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null!);\n    this.presence.stopHubConnection();\n  }\n\n  getDecodedToken(token: string) {\n    return JSON.parse(atob(token.split('.')[1]));\n  }\n}\n\n","/* (ignored) */","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vycm9ycy9ub3QtZm91bmQvbm90LWZvdW5kLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.css']\n})\nexport class ServerErrorComponent implements OnInit {\n  error: any;\n\n  constructor(private router: Router) {\n    const navigation = this.router.getCurrentNavigation(); \n    this.error = navigation?.extras?.state?.['error'];\n  }\n\n  ngOnInit(): void {\n  }\n\n}","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { AccountService } from '../_services/account.service';\nimport { take } from 'rxjs/operators';\nimport { User } from '../_models/user';\n\n@Directive({\n  selector: '[appHasRole]'\n})\nexport class HasRoleDirective {\n  @Input() appHasRole!: string[];\n  user!: User;\n  \n  constructor(private viewContainerRef: ViewContainerRef, private templateRef: TemplateRef<any>,\n    private accountService: AccountService) {\n      this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n        this.user = user;\n      })\n     }\n\n    ngOnInit(): void{\n      //clear view if no roles\n      if(!this.user?.roles || this.user == null){\n        this.viewContainerRef.clear();\n        return ;\n      }\n\n      if(this.user?.roles.some(r => this.appHasRole.includes(r))){\n        this.viewContainerRef.createEmbeddedView(this.templateRef);\n      } else {\n        this.viewContainerRef.clear();\n      }\n    }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusyService {\n  busyRequestCount = 0;\n\n  constructor(private spinnerService: NgxSpinnerService) { }\n\n  busy() {\n    this.busyRequestCount++;\n    this.spinnerService.show(undefined, {\n      type: 'line-scale-praty',\n      bdColor: 'rgba(255,255,255,0)',\n      color:'#333333'\n    });\n  }\n   idle() {\n    this.busyRequestCount--;\n    if(this.busyRequestCount <=0){\n      this.busyRequestCount= 0;\n      this.spinnerService.hide();\n    }\n   }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  registerMode = false;\n \n\n  constructor() { }\n\n  ngOnInit():void {\n  }\n\n  registerToggle() {\n    this.registerMode = !this.registerMode;\n  }\n    \n  \n\n  cancelRegisterModel(event: boolean){\n    this.registerMode = event;\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\";","export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    result!: T ;\r\n    pagination!: Pagination;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'https://localhost:5001/api/',\r\n  hubUrl: 'https://localhost:5001/hubs/'  \r\n};\r\n  \r\n  /*\r\n   * For easier debugging in development mode, you can import the following file\r\n   * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n   *\r\n   * This import should be commented out in production mode because it will have a negative impact\r\n   * on performance if an error is thrown.\r\n   */\r\n  // import 'zone.js/dist/zone-error';  // Included with Angular CLI.","export default \"<div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n        <div *ngIf=\\\"(messageService.messageThread$ | async)?.length === 0\\\">\\n            No messages yet... say hi by using the message box below\\n        </div>\\n\\n        <ul #scrollMe\\n            style=\\\"overflow-y: scroll; height: 500px;\\\"\\n            [scrollTop]=\\\"scrollMe.scrollHeight\\\"\\n            *ngIf=\\\"(messageService.messageThread$ | async).length > 0\\\" \\n            class=\\\"chat\\\">\\n            <li *ngFor=\\\"let message of (messageService.messageThread$ | async)\\\">\\n                <div>\\n                    <span class=\\\"chat-img float-right\\\">\\n                        <img class=\\\"rounded-circle\\\" src=\\\"{{message.senderPhotoUrl || './assets/user.png'}}\\\" \\n                            alt=\\\"{{message.senderUsername}}\\\">\\n                    </span>\\n                    <div class=\\\"chat-body\\\">\\n                        <div class=\\\"header\\\">\\n                            <small class=\\\"text-muted\\\">\\n                                <span class=\\\"fa fa-clock-o\\\">{{message.messageSent | timeago}}</span>\\n                                <span class=\\\"text-danger\\\" *ngIf=\\\"!message.dateRead \\n                                    && message.senderUsername !== username\\\">\\n                                    (unread)\\n                                </span>\\n                                <span class=\\\"text-success\\\" *ngIf=\\\"message.dateRead \\n                                    && message.senderUsername !== username\\\">\\n                                    (read {{message.dateRead | timeago}})\\n                                </span>\\n                            </small>\\n                        </div>\\n                        <p>{{message.content}}</p>\\n                    </div>\\n                </div>\\n            </li>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"card-footer\\\">\\n        <form #messageForm=\\\"ngForm\\\" (submit)=\\\"sendMessage()\\\" autocomplete=\\\"off\\\">\\n            <div class=\\\"input-group\\\">\\n                <input\\n                    name=\\\"messageContent\\\"\\n                    required\\n                    [(ngModel)]=\\\"messageContent\\\" \\n                    type=\\\"text\\\" \\n                    class=\\\"form-control input-sm\\\" \\n                    placeholder=\\\"Send a private message\\\">\\n                <div class=\\\"input-group-append\\\">\\n                    <button [disabled]=\\\"!messageForm.valid\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Send</button>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\";","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\nimport { User } from '../_models/user';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private accountService: AccountService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let currentUser!: User;\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => currentUser = user);\n    if (currentUser) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","export default \"<div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title pull-left\\\">Edit roles for {{user.username}}</h4>\\n    <button type=\\\"button\\\" class=\\\"btn-close close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"bsModalRef.hide()\\\">\\n      <span aria-hidden=\\\"true\\\" class=\\\"visually-hidden\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form #rolesForm=\\\"ngForm\\\" id=\\\"rolesForm\\\">\\n        <div class=\\\"form-check\\\" *ngFor=\\\"let role of roles\\\">\\n            <input type=\\\"checkbox\\\"\\n                class=\\\"form-check-input\\\"\\n                [checked]=\\\"role.checked\\\"\\n                value=\\\"role.name\\\"\\n                (change)=\\\"role.checked = !role.checked\\\"\\n                [disabled]=\\\"role.name === 'Admin' && user.username === 'admin'\\\"\\n            >\\n            <label>{{role.name}}</label>\\n        </div>\\n    </form>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"bsModalRef.hide()\\\">Cancel</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateRoles()\\\">Submit</button>\\n  </div>\";","import { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { Pagination } from '../_models/pagination';\nimport { ConfirmService } from '../_services/confirm.service';\nimport { MessageService } from '../_services/message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[] = [];\n  pagination!: Pagination;\n  container = 'Unread';\n  pageNumber = 1;\n  pageSize = 5;\n  loading = false;\n\n  constructor(private messageService: MessageService, private confirmService: ConfirmService) { }\n\n  ngOnInit(): void {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    this.loading = true;\n    this.messageService.getMessages(this.pageNumber, this.pageSize, this.container).subscribe(response =>{\n      this.messages = response.result;\n      this.pagination = response.pagination;  \n      this.loading = false;\n    })\n  }\n\n  deleteMessage(id: number) {\n    this.confirmService.confirm('Confirm delete message', 'This cannot be undone').subscribe(result => {\n      if (result) {\n        this.messageService.deleteMessage(id).subscribe(() => {\n          this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\n        })\n      }  \n    })\n  }\n\n  pageChanged(event: any) {\n    this.pageNumber = event.page;\n    this.loadMessages();\n  }\n}","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col-2\\\" *ngFor=\\\"let photo of member.photos\\\">\\n        <img src=\\\"{{photo.url}}\\\" alt=\\\"{{photo.url}}\\\" class=\\\"img-thumbnail p-1\\\">\\n        <div class=\\\"text-center\\\">\\n            <button \\n                [disabled]=\\\"photo.isMain\\\"\\n                (click)=\\\"setMainPhoto(photo)\\\"\\n                [ngClass]='photo.isMain ? \\\"btn-success active\\\" : \\\"btn-outline-success\\\"'\\n                class=\\\"btn btn-sm\\\"\\n            >Main</button>\\n            <button\\n                [disabled]=\\\"photo.isMain\\\" \\n                (click)=\\\"deletePhoto(photo.id)\\\"\\n                class=\\\"btn btn-sm btn-danger\\\"\\n            ><i class=\\\"fa fa-trash\\\"></i></button>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row mt-3\\\">\\n \\n    <div class=\\\"col-md-3\\\">\\n  \\n        <h3>Add photos</h3>\\n\\n        <div ng2FileDrop\\n             [ngClass]=\\\"{'nv-file-over': hasBaseDropzoneOver}\\\"\\n             (fileOver)=\\\"fileOverBase($event)\\\"\\n             [uploader]=\\\"uploader\\\"\\n             class=\\\"card bg-faded p-3 text-center mb-3 my-drop-zone\\\">\\n             <i class=\\\"fa fa-upload fa-3x\\\"></i>\\n            Drop photos here\\n        </div>\\n\\n        Multiple\\n        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple  /><br/>\\n\\n        Single\\n        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n    </div>\\n\\n    <div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\" *ngIf=\\\"uploader?.queue?.length\\\">\\n\\n        <h3>Upload queue</h3>\\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\\n\\n        <table class=\\\"table\\\">\\n            <thead>\\n            <tr>\\n                <th width=\\\"50%\\\">Name</th>\\n                <th>Size</th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n            <tr *ngFor=\\\"let item of uploader.queue\\\">\\n                <td><strong>{{ item?.file?.name }}</strong></td>\\n                <td *ngIf=\\\"uploader.options.isHTML5\\\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\n            </tr>\\n            </tbody>\\n        </table>\\n\\n        <div>\\n            <div>\\n                Queue progress:\\n                <div class=\\\"progress\\\" style=\\\"\\\">\\n                    <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' }\\\"></div>\\n                </div>\\n            </div>\\n            <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\"\\n                    (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n                <span class=\\\"fa fa-upload\\\"></span> Upload all\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s\\\"\\n                    (click)=\\\"uploader.cancelAll()\\\" [disabled]=\\\"!uploader.isUploading\\\">\\n                <span class=\\\"fa fa-ban\\\"></span> Cancel all\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\"\\n                    (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\n                <span class=\\\"fa fa-trash\\\"></span> Remove all\\n            </button>\\n        </div>\\n\\n    </div>\\n\\n</div>\";","export default \"<div class=\\\"row\\\">\\n    <table class=\\\"table\\\">\\n        <tr>\\n            <th style=\\\"width: 30%\\\">Username</th>\\n            <th style=\\\"width: 40%\\\">Active roles</th>\\n            <th style=\\\"width: 30%\\\"></th>\\n        </tr>\\n        <tr *ngFor=\\\"let user of users\\\">\\n            <td>{{user.username}}</td>\\n            <td>{{user.roles}}</td>\\n            <td><button (click)=\\\"openRolesModal(user)\\\" class=\\\"btn btn-info\\\">Edit Roles</button></td>\\n        </tr>\\n    </table>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vycm9ycy90ZXN0LWVycm9ycy90ZXN0LWVycm9ycy5jb21wb25lbnQuY3NzIn0= */\";","export default \"<p>photo-management works!</p>\\n\";","export default \"<div class=\\\"container mt-5\\\">\\n    <div *ngIf=\\\"!registerMode\\\" style=\\\"text-align: center;\\\">\\n    <h1>Find your match</h1>\\n    <p class=\\\"lead\\\">Come on in to view your matches... all you need to do is sign up!</p>\\n        <div class=\\\"text-center\\\">\\n            <button (click)=\\\"registerToggle()\\\" class=\\\"btn btn-primary btn-lg mr-2\\\">Register</button>\\n            <button class=\\\"btn btn-info btn-lg \\\">Learn more</button>\\n        </div>\\n    </div>\\n\\n    <div *ngIf=\\\"registerMode\\\" class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-4\\\">\\n                <app-register  (cancelRegister)=\\\"cancelRegisterModel($event)\\\"></app-register>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3Bob3RvLW1hbmFnZW1lbnQvcGhvdG8tbWFuYWdlbWVudC5jb21wb25lbnQuY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ToastrModule } from 'ngx-toastr';\nimport {TabsModule} from 'ngx-bootstrap/tabs';\nimport {NgxGalleryModule} from '@kolkov/ngx-gallery';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { BsDatepickerModule} from 'ngx-bootstrap/datepicker';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ButtonsModule} from 'ngx-bootstrap/buttons'\nimport { TimeagoModule } from 'ngx-timeago';\nimport { ModalModule } from 'ngx-bootstrap/modal'\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BsDropdownModule.forRoot(),\n    ToastrModule.forRoot({\n      positionClass: 'toastr-bottom-right'\n    }),\n    TabsModule.forRoot(),\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    ButtonsModule.forRoot(),\n    TimeagoModule.forRoot(),\n    ModalModule.forRoot()\n  ],\n  exports: [\n    BsDropdownModule,\n    ToastrModule,\n    TabsModule,\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule,\n    PaginationModule,\n    ButtonsModule,\n    TimeagoModule,\n    ModalModule\n  ],\n})\nexport class SharedModule { }\n\n","export default \"<ng-container >\\n    <button (click)=\\\"get500Error()\\\" class=\\\"btn btn-outline-primary mr-3\\\">Test 500 Error</button>\\n    <button (click)=\\\"get400Error()\\\" class=\\\"btn btn-outline-primary mr-3\\\">Test 400 Error</button>\\n    <button (click)=\\\"get401Error()\\\" class=\\\"btn btn-outline-primary mr-3\\\">Test 401 Error</button>\\n    <button (click)=\\\"get404Error()\\\" class=\\\"btn btn-outline-primary mr-3\\\">Test 404 Error</button>\\n    <button (click)=\\\"get400ValidationError()\\\" class=\\\"btn btn-outline-primary mr-3\\\">Test 400 Validation Error</button>\\n    \\n    <div class=\\\"row mt-5\\\" *ngIf=\\\"validationErrors.length > 0\\\">\\n        <ul class=\\\"text-danger\\\">\\n            <li *ngFor=\\\"let error of validationErrors\\\">\\n                {{error}}\\n            </li>\\n        </ul>\\n    </div>\\n</ng-container>\";","export default \"<div class=\\\"text-center mt-3\\\">\\n    <h2>{{predicate === 'liked' ? 'Members I like' : 'Members who like me'}}</h2>\\n</div>\\n\\n<div class=\\\"container mt-3\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"btn-group\\\" name=\\\"predicate\\\">\\n            <button class=\\\"btn btn-primary\\\" btnRadio=\\\"liked\\\" \\n                [(ngModel)]=\\\"predicate\\\" (click)=\\\"loadLikes()\\\">Members I like</button>\\n            <button class=\\\"btn btn-primary\\\" btnRadio=\\\"likedBy\\\" \\n                [(ngModel)]=\\\"predicate\\\" (click)=\\\"loadLikes()\\\">Members who like me</button>\\n        </div>\\n    </div>    \\n\\n    <div class=\\\"row mt-3\\\">\\n        <div class=\\\"col-2\\\" *ngFor=\\\"let member of members\\\">\\n            <app-member-card [member]=\\\"member\\\"></app-member-card>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"pagination\\\">\\n    <pagination \\n        [boundaryLinks]=\\\"true\\\" \\n        [totalItems]='pagination.totalItems'\\n        [itemsPerPage]='pagination.itemsPerPage'\\n        [(ngModel)]=\\\"pagination.currentPage\\\"\\n        (pageChanged)=\\\"pageChanged($event)\\\"\\n        previousText=\\\"&lsaquo;\\\" \\n        nextText=\\\"&rsaquo;\\\" \\n        firstText=\\\"&laquo;\\\"\\n        lastText=\\\"&raquo;\\\">\\n</pagination>\\n</div>\";","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router, private toastr: ToastrService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError(error => {\n        if (error) {\n          switch (error.status) {\n            case 400:\n              if(error.error.errors) {\n                const modalStateErrors = []; \n                for (const key in error.error.errors) {\n                  if (error.error.errors[key]) {\n                    modalStateErrors.push(error.error.errors[key])\n                  }\n                }\n                throw modalStateErrors.flat();\n              } else if (typeof(error.error) === 'object') {\n                error.statusText = 'Bad Request'\n                this.toastr.error(error.statusText, error.status);       \n              } else {\n                this.toastr.error(error.error, error.status);\n              }\n              break;\n            case 401: \n              error.statusText = 'Unauthorized'\n              this.toastr.error(error.statusText, error.status);\n              break;\n            case 404:\n              this.router.navigateByUrl('/not-found');\n              break;\n            case 500:\n              const navigationExtras: NavigationExtras = {state: {error: error.error}}; \n              this.router.navigateByUrl('/server-error', navigationExtras);\n              break;\n            default:\n              this.toastr.error('Something unexpected went wrong');\n              console.log(error);\n              break;\n          }  \n        }\n        return throwError(error);\n      })\n    )\n  }\n}","export default \"<h4>Internal server errror - refreshing the page will make the error disappear!</h4>\\n<ng-container *ngIf=\\\"error\\\">\\n    <h5 class=\\\"text-danger\\\">Error: {{error.message}}</h5>\\n    <p class=\\\"font-weight-bold\\\">Note: If you are seeing this then Angular is probably not to blame</p>\\n    <p>what to do next?</p>\\n    <ol>\\n        <li>Open the chrome dev tools</li>\\n        <li>Inspect the network tab</li>\\n        <li>Check the failing request</li>\\n        <li>Examine the request URL - make sure it is correct</li>\\n        <li>Reproduce the error in Postman - if we see the same respone, then the issue is not with Angular</li>\\n    </ol>\\n    <p>Following is the strack trace - this is where your investigation should start!</p>\\n    <code class=\\\"mt-5\\\" style=\\\"background-color: whitesmoke;\\\">{{error.details}}</code>\\n</ng-container>\\n\";","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private accountService: AccountService, private toastr: ToastrService) {}\n\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map(user => {\n        if (user && (user.roles.includes('Admin') || user.roles.includes('Moderator'))) {\n          return true;\n        } else {\n          this.toastr.error('You cannot enter this area');\n          return false; \n        }\n      })\n    );\n  }\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  baseUrl = environment.apiUrl;\n  constructor(private http: HttpClient) { }\n\n  getUsersWithRoles() {\n    return this.http.get<Partial<User[]>>(this.baseUrl + 'admin/users-with-roles');\n  }\n  updateUserRoles(username: string, roles: string[]) {\n    return this.http.post(this.baseUrl + 'admin/edit-roles/' + username + '?roles=' + roles, {});\n  }\n}\n","export default \"<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"registerForm.valid && register()\\\" autocomplete=\\\"off\\\">\\n    <h2 class=\\\"text-center text-primary\\\">Sign up</h2>\\n    <hr>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" style=\\\"margin-right: 10px;\\\">I am a:</label>\\n        <label class=\\\"radio-inline\\\">\\n            <input type=\\\"radio\\\" value=\\\"made\\\" formControlName='gender'>Male\\n        </label>\\n        <label class=\\\"radio-inline\\\">\\n            <input type=\\\"radio\\\" value=\\\"female\\\" formControlName='gender' class=\\\"ml-3\\\">Female\\n        </label>\\n    </div>\\n    <app-text-input [formControl]='registerForm.controls[\\\"username\\\"]' [label] ='\\\"Username\\\"'></app-text-input>\\n    \\n    <app-text-input [formControl]='registerForm.controls[\\\"knownAs\\\"]' [label] ='\\\"Known As\\\"'></app-text-input>\\n    \\n    <app-date-input [formControl]='registerForm.controls[\\\"dateOfBirth\\\"]' \\n    [label] ='\\\"Date Of Birth\\\"' [maxDate]='maxDate'></app-date-input>\\n\\n    <app-text-input [formControl]='registerForm.controls[\\\"city\\\"]' [label] ='\\\"City\\\"'></app-text-input>\\n\\n    <app-text-input [formControl]='registerForm.controls[\\\"country\\\"]' [label] ='\\\"Country\\\"'></app-text-input>\\n\\n    <app-text-input [formControl]='registerForm.controls[\\\"password\\\"]' [label] ='\\\"Password\\\"' \\n    [type]='\\\"password\\\"'></app-text-input>\\n    \\n    <app-text-input [formControl]='registerForm.controls[\\\"confirmPassword\\\"]' \\n    [label] ='\\\"Comfirm Password\\\"' \\n    [type]='\\\"password\\\"'></app-text-input>\\n\\n    <div class=\\\"row\\\" *ngIf=\\\"validationErrors.length > 0\\\">\\n        <ul class=\\\"text-danger\\\">\\n            <li *ngFor=\\\"let error of validationErrors\\\">\\n                {{error}}\\n            </li>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"form-group text-center\\\">\\n        <button [disabled]='!registerForm.valid'  class=\\\"btn btn-success mr-1\\\" type=\\\"submit\\\">Register</button>\\n        <button class=\\\"btn btn-default mr-1\\\" (click)=\\\"cancel()\\\" type=\\\"button\\\">Cancel</button>\\n    </div>\\n  \\n</form>\\n\\n\\n\";","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { RolesModalComponent } from 'src/app/modals/roles-modal/roles-modal.component';\nimport { User } from 'src/app/_models/user';\nimport { AdminService } from 'src/app/_services/admin.service';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.css']\n})\nexport class UserManagementComponent implements OnInit {\n  users!: Partial<User[]>;\n  bsModalRef!: BsModalRef;\n  constructor(private adminService: AdminService, private modalService:BsModalService) { }\n\n  ngOnInit(): void {\n    this.getUsersWithRoles();\n  }\n  getUsersWithRoles(){\n    this.adminService.getUsersWithRoles().subscribe(users =>{\n      this.users = users;\n    })\n  }\n\n  openRolesModal(user: User) {\n    const config = {\n      class: 'modal-dialog-centered',\n      initialState: {\n        user,\n        roles: this.getRolesArray(user)\n      }\n    }  \n    this.bsModalRef = this.modalService.show(RolesModalComponent, config);\n    this.bsModalRef.content.updateSelectedRoles.subscribe((values: any) => {\n      const rolesToUpdate = {\n        roles: [...values.filter((el: any) => el.checked === true).map((el: any) => el.name)]\n      };\n      if (rolesToUpdate) {\n        this.adminService.updateUserRoles(user.username, rolesToUpdate.roles).subscribe(() => {\n          user.roles = [...rolesToUpdate.roles]  \n        })\n      }\n    })\n  }\n\n  private getRolesArray(user: any) {\n    const roles: any = [];\n    const userRoles = user.roles;\n    const availableRoles: any[] = [\n      {name: 'Admin', value: 'Admin'},\n      {name: 'Moderator', value: 'Moderator'},\n      {name: 'Member', value: 'Member'}\n    ];\n\n    availableRoles.forEach(role => {\n      let isMatch = false;\n      for (const userRole of userRoles) {\n        if (role.name === userRole) {\n          isMatch = true;\n          role.checked = true;\n          roles.push(role);\n          break;\n        }\n      }\n      if (!isMatch) {\n        role.checked = false;\n        roles.push(role);\n      }\n    })  \n    return roles;\n  }\n\n}\n","export default \"<div class=\\\"text-center mt-3\\\">\\n    <h2>Your matches - {{pagination?.totalItems}} found</h2>    \\n</div>\\n\\n<div class=\\\"container mt-3\\\">\\n    <form #form=\\\"ngForm\\\" class=\\\"form-inline mb-3\\\" (ngSubmit)=\\\"loadMembers()\\\" autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\">\\n            <label >Age from:</label>\\n            <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px;\\\" name=\\\"minAge\\\" \\n                [(ngModel)]=\\\"userParams.minAge\\\">\\n        </div>   \\n\\n        <div class=\\\"form-group px-2\\\">\\n            <label >Age to:</label>\\n            <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px;\\\" name=\\\"maxAge\\\" \\n                [(ngModel)]=\\\"userParams.maxAge\\\">\\n        </div>  \\n\\n        <div class=\\\"form-group px-2\\\">\\n            <label>Show: </label>\\n            <select name=\\\"gender\\\" style=\\\"width: 130px;\\\" [(ngModel)]=\\\"userParams.gender\\\" class=\\\"form-control ml-1\\\">\\n                <option *ngFor=\\\"let gender of genderList\\\" [value]=\\\"gender.value\\\">\\n                    {{gender.display}}\\n                </option>    \\n            </select>\\n        </div>\\n\\n        <button class=\\\"btn btn-primary ml-1\\\" type=\\\"submit\\\">Apply Filters</button>\\n        <button (click)=\\\"resetFilters()\\\" class=\\\"btn btn-info ml-1\\\" type=\\\"submit\\\">Reset Filters</button>\\n        <div class=\\\"col\\\">\\n            <div class=\\\"btn-group float-right\\\">\\n                <button\\n                    type=\\\"button\\\" \\n                    class=\\\"btn btn-primary\\\" \\n                    name=\\\"orderBy\\\"\\n                    (click)=\\\"loadMembers()\\\" \\n                    btnRadio=\\\"lastActive\\\"\\n                    [(ngModel)]=\\\"userParams.orderBy\\\">Last Active</button>\\n    \\n                <button\\n                    type=\\\"button\\\" \\n                    class=\\\"btn btn-primary\\\" \\n                    name=\\\"orderBy\\\"\\n                    (click)=\\\"loadMembers()\\\" \\n                    btnRadio=\\\"created\\\"\\n                    [(ngModel)]=\\\"userParams.orderBy\\\">Newest Members</button>\\n            </div>\\n        </div>\\n        \\n\\n    </form>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div *ngFor=\\\"let member of members\\\" class=\\\"col-2\\\">\\n        <app-member-card [member]=\\\"member\\\"></app-member-card>\\n    </div>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"pagination\\\">\\n    <pagination \\n        [boundaryLinks]=\\\"true\\\" \\n        [totalItems]='pagination.totalItems'\\n        [itemsPerPage]='pagination.itemsPerPage'\\n        [(ngModel)]=\\\"pagination.currentPage\\\"\\n        (pageChanged)=\\\"pageChanged($event)\\\"\\n        previousText=\\\"&lsaquo;\\\" \\n        nextText=\\\"&rsaquo;\\\" \\n        firstText=\\\"&laquo;\\\"\\n        lastText=\\\"&raquo;\\\">\\n</pagination>\\n</div>\\n\";","export default \".img-circle {\\r\\n    max-height: 50px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVzc2FnZXMvbWVzc2FnZXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL21lc3NhZ2VzL21lc3NhZ2VzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW1nLWNpcmNsZSB7XHJcbiAgICBtYXgtaGVpZ2h0OiA1MHB4O1xyXG59Il19 */\";","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Member } from 'src/app/_models/member';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { NgxGalleryAnimation, NgxGalleryImage, NgxGalleryOptions } from '@kolkov/ngx-gallery';\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\nimport { Message } from 'src/app/_models/message';\nimport { MessageService } from 'src/app/_services/message.service';\nimport { PresenceService } from 'src/app/_services/presence.service';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { User } from 'src/app/_models/user';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit, OnDestroy {\n  @ViewChild('memberTabs', {static: true}) memberTabs!: TabsetComponent;\n    member!: Member;\n    galleryOptions!: NgxGalleryOptions[];\n    galleryImages!: NgxGalleryImage[];\n    activeTab!: TabDirective;\n    messages: Message[] =[] ;\n    user!: User;\n\n    constructor(public presence: PresenceService, private route: ActivatedRoute, \n      private messageService: MessageService, private accountService: AccountService,\n      private router: Router) {\n        this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\n        this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n       }\n \n    ngOnInit() {\n      this.route.data.subscribe(data => {\n        this.member = data.member;\n      })\n\n      this.route.queryParams.subscribe(params => {\n        params.tab ? this.selectTab(params.tab) : this.selectTab(0);\n      })\n\n      this.galleryOptions = [\n        {\n          width: '500px',\n          height: '500px',\n          imagePercent: 100,\n          thumbnailsColumns: 4,\n          imageAnimation: NgxGalleryAnimation.Slide,\n          preview: false\n        }\n      ]\n      this.galleryImages = this.getImages();\n    }\n    getImages(): NgxGalleryImage[] {\n      const imageUrls = [];\n      // Kiểm tra xem this.member đã được xác định trước khi cố gắng truy cập thuộc tính photos\n      if (this.member && this.member.photos) {\n        for (const photo of this.member.photos) {\n          imageUrls.push({\n            small: photo?.url,\n            medium: photo?.url,\n            big: photo?.url\n          });\n        }\n      }\n      return imageUrls;\n    }\n    \n    loadMessages() {\n      this.messageService.getMessageThread(this.member.username).subscribe(messages => {\n        this.messages = messages;\n      })  \n    }\n    selectTab(tabId: number){\n        this.memberTabs.tabs[tabId].active = true;\n    }\n    onTabActivated(data: TabDirective){\n      this.activeTab = data;\n      if(this.activeTab.heading === 'Messages' && this.messages.length === 0){\n          this.messageService.createHubConnection(this.user, this.member.username);\n      }else {\n        this.messageService.stopHubConnection();\n      }\n    }\n    \n    ngOnDestroy(): void {\n      this.messageService.stopHubConnection();\n    }\n}\n","import { CanActivate, ActivatedRouteSnapshot,RouterStateSnapshot,UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\nimport { Inject, Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn:'root'\n})\n\nexport class AuthGuard implements CanActivate {\n  constructor(private accounntService: AccountService, private toastr: ToastrService){\n\n  }\n  canActivate(): Observable<boolean> {\n    return this.accounntService.currentUser$.pipe(\n      map(user =>{\n        if(user) return true;\n        this.toastr.error('You shall not pass!');\n        return false;\n      \n    })\n  )\n}\n};\n        \n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Group } from '../_models/group';\nimport { Message } from '../_models/message';\nimport { User } from '../_models/user';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelpers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  baseUrl = environment.apiUrl;\n  hubUrl = environment.hubUrl;\n  private hubConnection!: HubConnection;\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\n  messageThread$ = this.messageThreadSource.asObservable();\n\n  constructor(private http: HttpClient) { }\n\n  createHubConnection(user: User,otherUsername: string) {\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(this.hubUrl + 'message?user=' + otherUsername, {\n        accessTokenFactory: () => user.token  \n      })\n      .withAutomaticReconnect()\n      .build()\n\n      this.hubConnection.start().catch(error => console.log(error));\n\n      this.hubConnection.on('ReceiveMessageThread', messages => {\n        this.messageThreadSource.next(messages);  \n      })\n\n      this.hubConnection.on('NewMessage', message => {\n        this.messageThread$.pipe(take(1)).subscribe(messages => {\n          this.messageThreadSource.next([...messages, message])\n        })  \n      })\n\n      this.hubConnection.on('UpdatedGroup', (group: Group) => {\n        if (group.connections.some(x => x.username === otherUsername)) {\n          this.messageThread$.pipe(take(1)).subscribe(messages => {\n            messages.forEach(message => {\n              if (!message.dateRead) {\n                message.dateRead = new Date(Date.now())\n              }  \n            })\n            this.messageThreadSource.next([...messages]);\n          })\n        }\n      })\n\n      this.hubConnection.on('UpdatedGroup', (group: Group) => {\n        if (group.connections.some(x => x.username === otherUsername)) {\n          this.messageThread$.pipe(take(1)).subscribe(messages => {\n            messages.forEach(message => {\n              if (!message.dateRead) {\n                message.dateRead = new Date(Date.now())\n              }  \n            })\n            this.messageThreadSource.next([...messages]);\n          })\n        }\n      })\n  }\n\n  stopHubConnection() {\n    if (this.hubConnection) {\n      this.hubConnection.stop();  \n    }\n  }\n\n  getMessages(pageNumber: number, pageSize: number, container: any) {\n    let params = getPaginationHeaders(pageNumber, pageSize);\n    params = params.append('Container', container);\n    return getPaginatedResult<Message[]>(this.baseUrl + 'messages', params, this.http);\n  }\n\n  getMessageThread(username: string) {\n    return this.http.get<Message[]>(this.baseUrl + 'messages/thread/' + username);\n  }\n\n  async sendMessage(username: string, content: string) {\n    return this.hubConnection.invoke('SendMessage', {recipientUsername: username, content})\n      .catch(error => console.log(error));\n  }\n\n  deleteMessage(id: number) {\n    return this.http.delete(this.baseUrl + 'messages/' + id);\n  } \n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vycm9ycy9zZXJ2ZXItZXJyb3Ivc2VydmVyLWVycm9yLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Pagination } from 'src/app/_models/pagination';\nimport { User } from 'src/app/_models/user';\nimport { UserParams } from 'src/app/_models/userParams';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  members!: Member[];\n  pagination!: Pagination;\n  userParams: UserParams;\n  user!: User;\n  genderList = [{value: 'male', display: 'Males'}, {value: 'female', display: 'Females'}];\n\n  constructor(private memberService: MembersService) {\n    this.userParams = this.memberService.getUserParams();\n  }\n\n  ngOnInit(): void {\n    this.loadMembers();  \n  }\n\n  loadMembers() {\n    this.memberService.setUserParams(this.userParams);\n    this.memberService.getMembers(this.userParams).subscribe(response => {\n      this.members = response.result;\n      this.pagination = response.pagination; \n    })\n  }\n\n  resetFilters() {\n    this.userParams = this.memberService.resetUserParams();\n    this.loadMembers();\n  }\n\n  pageChanged(event: any) {\n    this.userParams.pageNumber = event.page;\n    this.memberService.setUserParams(this.userParams);\n    this.loadMembers();\n  }\n}\n","export default \".dropdown-toggle, .dropdown-item {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\nimg {\\r\\n    max-height: 50px;\\r\\n    border: 2px solid #fff;\\r\\n    display: inline;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2L25hdi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixzQkFBc0I7SUFDdEIsZUFBZTtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL25hdi9uYXYuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kcm9wZG93bi10b2dnbGUsIC5kcm9wZG93bi1pdGVtIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuaW1nIHtcclxuICAgIG1heC1oZWlnaHQ6IDUwcHg7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCAjZmZmO1xyXG4gICAgZGlzcGxheTogaW5saW5lO1xyXG59Il19 */\";","export default \"<div class=\\\"row\\\" *ngIf=\\\"member\\\">\\n    <div class=\\\"col-4\\\">\\n        <h1>Your profile</h1>\\n    </div>\\n    <div class=\\\"col-8\\\">\\n        <div class=\\\"alert alert-info\\\" *ngIf=\\\"editForm.dirty\\\">\\n            <strong>Information: </strong>You have made changes. Any unsaved changes will be lost\\n        </div>\\n    </div>\\n    <div class=\\\"col-4\\\">\\n        <div class=\\\"card\\\">\\n            <img src=\\\"{{member.photoUrl || './assets/user.png'}}\\\" alt=\\\"{{member.knownAs}}\\\" \\n                class=\\\"card-img-top img-thumbnail\\\">  \\n            <div class=\\\"card-body\\\">\\n                <div>\\n                    <strong>Location:</strong>\\n                    <p>{{member.city}}, {{member.country}}</p>\\n                </div>\\n                <div>\\n                    <strong>Age:</strong>\\n                    <p>{{member.age}}</p>\\n                </div>\\n                <div>\\n                    <strong>Last Active:</strong>\\n                    <p>{{member.lastActive | timeago}}</p>\\n                </div>\\n                <div>\\n                    <strong>Member since:</strong>\\n                    <p>{{member.created | date: 'dd MMM yyyy'}}</p>\\n                </div>\\n            </div>  \\n            <div class=\\\"card-footer\\\">\\n                <button [disabled]=\\\"!editForm.dirty\\\" form=\\\"editForm\\\" type=\\\"submit\\\" class=\\\"btn btn-success btn-block\\\">Save Changes</button>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"col-8\\\">\\n        <tabset class=\\\"member-tabset\\\"> \\n            <tab heading=\\\"About {{member.knownAs}}\\\">\\n                <form #editForm=\\\"ngForm\\\" id=\\\"editForm\\\" (ngSubmit)=\\\"updateMember()\\\">\\n                    <h4>Desciption</h4>\\n                    <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"member.introduction\\\" name=\\\"introduction\\\" rows=\\\"6\\\"></textarea>\\n                    <h4 class=\\\"mt-2\\\">Looking for</h4>\\n                    <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"member.lookingFor\\\" name=\\\"lookingFor\\\" rows=\\\"6\\\"></textarea>\\n                    <h4 class=\\\"mt-2\\\">Interests</h4>\\n                    <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"member.interests\\\" name=\\\"interests\\\" rows=\\\"6\\\"></textarea>\\n                    <h4 class=\\\"mt-2\\\">Location Details: </h4>\\n                    <div class=\\\"form-inline\\\">\\n                        <label for=\\\"city\\\">City: </label>\\n                        <input [(ngModel)]=\\\"member.city\\\" type=\\\"text\\\" name=\\\"city\\\" class=\\\"form-control mx-2\\\">\\n                        <label for=\\\"city\\\">Country: </label>\\n                        <input [(ngModel)]=\\\"member.country\\\" type=\\\"text\\\" name=\\\"country\\\" class=\\\"form-control mx-2\\\">\\n                    </div>\\n                </form>\\n            </tab>\\n            <tab heading=\\\"Edit Photos\\\">\\n                <app-photo-editor [member]=\\\"member\\\"></app-photo-editor>\\n            </tab>\\n        </tabset>\\n    </div>\\n</div>\";","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from './_models/user';\nimport { AccountService } from './_services/account.service';\nimport { PresenceService } from './_services/presence.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'The Dating app';\n  users: any;\n\n  constructor(private accountService: AccountService, private presence: PresenceService) {}\n  \n  ngOnInit() {\n    this.setCurrentUser();\n  }\n\n  setCurrentUser() {\n    const user: User = JSON.parse(localStorage.getItem('user') || null!); \n    if (user) {\n      this.accountService.setCurrentUser(user);\n      this.presence.createHubConnection(user);\n    }\n    }\n\n}\n","export default \"<div class=\\\"container\\\">\\n    <h1>Not found</h1>\\n    <button class=\\\"btn btn-info btn-lg\\\" routerLink=\\\"/\\\">Return to home page</button>\\n</div>\\n\";","export default \".img-thumbnail {\\r\\n    margin: 25px;\\r\\n    width: 85%;\\r\\n    height: 85%;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer {\\r\\n    padding: 10px 15px;\\r\\n    background-color: #fff;\\r\\n    border-top: none;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVtYmVycy9tZW1iZXItZWRpdC9tZW1iZXItZWRpdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLFVBQVU7SUFDVixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9tZW1iZXJzL21lbWJlci1lZGl0L21lbWJlci1lZGl0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW1nLXRodW1ibmFpbCB7XHJcbiAgICBtYXJnaW46IDI1cHg7XHJcbiAgICB3aWR0aDogODUlO1xyXG4gICAgaGVpZ2h0OiA4NSU7XHJcbn1cclxuXHJcbi5jYXJkLWJvZHkge1xyXG4gICAgcGFkZGluZzogMCAyNXB4O1xyXG59XHJcblxyXG4uY2FyZC1mb290ZXIge1xyXG4gICAgcGFkZGluZzogMTBweCAxNXB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIGJvcmRlci10b3A6IG5vbmU7XHJcbn0iXX0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL19mb3Jtcy9kYXRlLWlucHV0L2RhdGUtaW5wdXQuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"card mb-4\\\">\\n    <div class=\\\"card-img-wrapper\\\">\\n        <img src=\\\"{{member.photoUrl || './assets/user.png'}}\\\" alt=\\\"{{member.knownAs}}\\\" class=\\\"card-img-top\\\">\\n        <ul class=\\\"list-inline member-icons animate text-center\\\">\\n            <li class=\\\"list-inline-item\\\"><button routerLink=\\\"/members/{{member.username}}\\\" class=\\\"btn btn-primary\\\">\\n                <i class=\\\"fa fa-user\\\"></i></button></li>\\n            <li class=\\\"list-inline-item\\\"><button (click)=\\\"addLike(member)\\\" class=\\\"btn btn-primary\\\">\\n                <i class=\\\"fa fa-heart\\\"></i></button></li>\\n            <li class=\\\"list-inline-item\\\"><button \\n                routerLink='/members/{{member.username}}'\\n                [queryParams]='{tab: 3}'\\n                 class=\\\"btn btn-primary\\\">\\n                <i class=\\\"fa fa-envelope\\\"></i></button></li>\\n        </ul>\\n    </div>\\n    <div class=\\\"card-body p-1\\\">\\n        <h6 class=\\\"card-title text-center mb-1\\\">\\n            <span [class.is-online]=\\\"(presence.onlineUsers$ | async).includes(member.username)\\\">\\n                <i class=\\\"fa fa-user mr-2\\\"> </i>\\n            </span>\\n           \\n            {{member.knownAs}}, {{member.age}}\\n        </h6>\\n        <p class=\\\"card-text text-muted text-center\\\">{{member.city}}</p>\\n    </div>\\n</div>\";","export default \".img-thumbnail {\\r\\n    margin: 25px;\\r\\n    width: 85%;\\r\\n    height: 85%;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    padding: 0 25px;\\r\\n}\\r\\n\\r\\n.card-footer {\\r\\n    padding: 10px 15px;\\r\\n    background-color: #fff;\\r\\n    border-top: none;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVtYmVycy9tZW1iZXItZGV0YWlsL21lbWJlci1kZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixVQUFVO0lBQ1YsV0FBVztBQUNmOztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixzQkFBc0I7SUFDdEIsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvbWVtYmVycy9tZW1iZXItZGV0YWlsL21lbWJlci1kZXRhaWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbWctdGh1bWJuYWlsIHtcclxuICAgIG1hcmdpbjogMjVweDtcclxuICAgIHdpZHRoOiA4NSU7XHJcbiAgICBoZWlnaHQ6IDg1JTtcclxufVxyXG5cclxuLmNhcmQtYm9keSB7XHJcbiAgICBwYWRkaW5nOiAwIDI1cHg7XHJcbn1cclxuXHJcbi5jYXJkLWZvb3RlciB7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDE1cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgYm9yZGVyLXRvcDogbm9uZTtcclxufSJdfQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbWJlcnMvbWVtYmVyLWxpc3QvbWVtYmVyLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\";","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BusyService } from '../_services/busy.service';\nimport { delay, finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n\n  constructor(private busyService: BusyService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    this.busyService.busy();\n\n    return next.handle(request).pipe(\n      finalize(() => {\n        this.busyService.idle();\n      })\n    )\n  }\n}\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { PaginatedResult } from \"../_models/pagination\";\r\n\r\nexport function getPaginatedResult<T>(url: any, params: any, http: HttpClient) {\r\n  const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\r\n  return http.get<T>(url, { observe: 'response', params }).pipe(\r\n    map(response => {\r\n        paginatedResult.result = response.body! ;\r\n      if (response.headers.get('Pagination') !== null) {\r\n        paginatedResult.pagination = JSON.parse(response.headers.get('Pagination') ?? '');\r\n      }\r\n      return paginatedResult;\r\n    })\r\n  );\r\n}\r\n\r\nexport function getPaginationHeaders(pageNumber: number, pageSize: number) {\r\n  let params = new HttpParams();\r\n\r\n  params = params.append('pageNumber', pageNumber.toString());\r\n  params = params.append('pageSize', pageSize.toString());\r\n\r\n  return params;\r\n}","export default \"<ngx-spinner>\\r\\n    <h3>Loading...</h3>\\r\\n</ngx-spinner>\\r\\n\\r\\n<app-nav></app-nav>\\r\\n\\r\\n<div class=\\\"container\\\" style=\\\"margin-top: 100px\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\\r\\n\";","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Member } from '../_models/member';\nimport {of} from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { PaginatedResult } from '../_models/pagination';\nimport { UserParams } from '../_models/userParams';\nimport { AccountService } from './account.service';\nimport { User } from '../_models/user';\nimport { Params } from '@angular/router';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelpers';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MembersService {\n  baseUrl = environment.apiUrl;\n  members: Member[] = [];\n  memberCache = new Map();\n  user!: User;\n  userParams!: UserParams;\n\n\n  constructor(private http : HttpClient, private accountService: AccountService) { \n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      this.user = this.user;\n      this.userParams = new UserParams(user);\n  })\n  }\n\n  getUserParams () {\n    return this.userParams;\n  }\n\n  setUserParams(params : UserParams){\n    this.userParams = params;\n  }\n\n  resetUserParams() {\n    this.userParams = new UserParams(this.user);\n    return this.userParams;\n  }\n\n\n  getMembers(userParams: UserParams) {\n    var response = this.memberCache.get(Object.values(userParams).join('-'));\n    if(response){\n      return of(response);\n    }\n    let params = getPaginationHeaders(userParams.pageNumber, userParams.pageSize);\n\n    params = params.append('minAge',userParams.minAge.toString());\n    params = params.append('maxAge',userParams.maxAge.toString());\n    params = params.append('gender',userParams.gender);\n    params = params.append('orderBy',userParams.orderBy);\n    \n\n    return getPaginatedResult<Member[]>(this.baseUrl + 'users', params, this.http)\n    .pipe(map(response =>{\n      this.memberCache.set(Object.values(userParams).join('-'), response);\n      return response;\n    }))\n   \n  }\n\n  getMember(username: string) {\n    const member = [...this.memberCache.values()]\n    .reduce((arr,elem) => arr.concat(elem.result), [])\n    .find((member: Member) => member.username === username);\n\n    if(member){\n      return of(member);\n    }\n    return this.http.get<Member>(this.baseUrl + 'users/' + username);\n  }\n\n  updateMember(member: Member) {\n    return this.http.put(this.baseUrl + 'users', member).pipe(\n      map(() => {\n        const index = this.members.indexOf(member);\n        this.members[index] = member;\n      })\n    )\n  }\n\n  setMainPhoto(photoId: Number){\n    return this.http.put(this.baseUrl + 'users/set-main-photo/' + photoId, {});\n  }\n\n  deletePhoto(photoId: number){\n    return this.http.delete(this.baseUrl + 'users/delete-photo/' + photoId);\n\n  }\n\n  addLike(username: string){\n    return this.http.post(this.baseUrl + 'likes/' + username, {});\n  }\n\n  getLikes(predicate: string, pageNumber:number, pageSize:number) {\n    let params = getPaginationHeaders(pageNumber, pageSize); \n    params = params.append('predicate', predicate)\n    return getPaginatedResult<Partial<Member[]>>(this.baseUrl + 'likes', params, this.http);\n  }\n  \n  }\n  \n  \n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { ToastrModule } from 'ngx-toastr';\nimport { SharedModule } from './_modules/shared.module';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { HasRoleDirective } from './_directives/has-role.directive';\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n    MemberListComponent,\n    MemberDetailComponent,\n    ListsComponent,\n    MessagesComponent,\n    TestErrorsComponent,\n    NotFoundComponent,\n    ServerErrorComponent,\n    MemberCardComponent,\n    MemberEditComponent,\n    PhotoEditorComponent,\n    TextInputComponent,\n    DateInputComponent,\n    MemberMessagesComponent,\n    AdminPanelComponent,\n    HasRoleDirective,\n    UserManagementComponent,\n    PhotoManagementComponent,\n    RolesModalComponent,\n    ConfirmDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    NgxSpinnerModule\n  \n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true},\n    {provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true},\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { Photo } from 'src/app/_models/photo';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() member!:Member;\n  uploader !: FileUploader;\n  hasBaseDropZoneOver = false;\n  baseUrl = environment.apiUrl;\n  user !: User;\n  constructor(private accountService: AccountService, private memberService: MembersService) { \n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\n  }\n\n  ngOnInit(): void {\n    this.initializeUploader();\n  }\n\n  fileOverBase(e: any){\n    this.hasBaseDropZoneOver = e;\n  }\n\n  setMainPhoto(photo: Photo) {\n    this.memberService.setMainPhoto(photo.id).subscribe(() =>{\n      this.user.photoUrl = photo.url;\n      this.accountService.setCurrentUser(this.user);\n      this.member.photoUrl = photo.url;\n      this.member.photos.forEach(p =>{\n        if(p.isMain) p.isMain = false;\n        if(p.id === photo.id) p.isMain = true;\n      })\n    })\n  }\n\n  deletePhoto(photoId: number) {\n    this.memberService.deletePhoto(photoId).subscribe(() => {\n      this.member.photos = this. member.photos.filter(x => x.id !== photoId);\n    })\n  }\n  initializeUploader(){\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/add-photo',\n      authToken: 'Bearer ' + this.user.token,\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize:10 *1024 *1024\n    });\n    this.uploader.onAfterAddingFile = (file) =>{\n      file.withCredentials = false;\n    }\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if(response) {\n        const photo: Photo = JSON.parse(response);\n        this.member.photos.push(photo);\n        if(photo.isMain){\n          this.user.photoUrl = photo.url;\n          this.member.photoUrl = photo.url;\n          this.accountService.setCurrentUser(this.user);\n        }\n      }\n    }\n  }\n\n\n}\n\n","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Member } from \"../_models/member\";\r\nimport { MembersService } from \"../_services/members.service\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MemberDetailedResolver implements Resolve<Member> {\r\n\r\n    constructor(private memberService: MembersService) {\r\n\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Member> {\r\n        return this.memberService.getMember(route.paramMap.get('username')!);\r\n    }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbWJlcnMvcGhvdG8tZWRpdG9yL3Bob3RvLWVkaXRvci5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGFscy9yb2xlcy1tb2RhbC9yb2xlcy1tb2RhbC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit,Input, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.css']\n})\nexport class TextInputComponent implements ControlValueAccessor {\n  @Input() label: string = '';\n  @Input() type = 'text'; \n\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this\n   }\n  writeValue(obj: any): void {\n    \n  }\n  registerOnChange(fn: any): void {\n    \n  }\n  registerOnTouched(fn: any): void {\n    \n  }\n  setDisabledState?(isDisabled: boolean): void {\n    \n  }\n\n  ngOnInit(): void {\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Member } from '../_models/member';\nimport { Pagination } from '../_models/pagination';\nimport { MembersService } from '../_services/members.service';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  members!: Partial<Member[]>;\n  predicate = 'liked';\n  pageNumber = 1;\n  pageSize = 5;\n  pagination!: Pagination;\n\n  constructor(private memberService: MembersService) { }\n\n  ngOnInit(): void {\n    this.loadLikes();\n  }\n\n  loadLikes() {\n    this.memberService.getLikes(this.predicate, this.pageNumber, this.pageSize).subscribe(response => {\n      this.members = response.result;\n      this.pagination = response.pagination;  \n    })\n  }\n\n  pageChanged(event: any) {\n    this.pageNumber = event.page;\n    this.loadLikes();\n  }\n\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLXBhbmVsL2FkbWluLXBhbmVsLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"<div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title pull-left\\\">{{title}}</h4>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <p>{{message}}</p>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"confirm()\\\">{{btnOkText}}</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"decline()\\\">{{btnCancelText}}</button>\\n  </div>\";","import { Component, OnInit } from '@angular/core';\nimport { AccountService } from '../_services/account.service';\nimport { User } from '../_models/user';\nimport { Observable } from 'rxjs';\nimport {Router} from '@angular/router'\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit{\n    model : any ={};\n\n    constructor(public accountService: AccountService, private router: Router, private toastr:ToastrService) {}\n\n    ngOnInit(): void{\n        \n    }\n    login() {\n      this.accountService.login(this.model).subscribe(response =>{\n        this.router.navigateByUrl('\\members');\n      })\n    }\n      \n  logout() {\n    this.accountService.logout();\n    this.router.navigateByUrl('/');\n  }   \n}\n","export default \"<nav class=\\\"navbar navbar-expand-md navbar-dark fixed-top bg-primary\\\">\\n  <div class='container'>\\n    <a class=\\\"navbar-brand\\\" routerLink='/' routerLinkActive=\\\"active\\\">Dating App</a>\\n      \\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <ng-container *ngIf=\\\"accountService.currentUser$ | async\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink='/members' routerLinkActive=\\\"active\\\">Matches</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink='/lists' routerLinkActive=\\\"active\\\">Lists</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink='/messages' routerLinkActive=\\\"active\\\">Messages</a>\\n        </li>\\n        <li *appHasRole='[\\\"Admin\\\", \\\"Moderator\\\"]' class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink='/admin' routerLinkActive=\\\"active\\\">Admin</a>\\n        </li>\\n      </ng-container>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink='/errors' routerLinkActive=\\\"active\\\">Errors</a>\\n      </li>\\n        \\n      </ul>\\n      <div class=\\\"dropdown\\\" *ngIf=\\\"accountService.currentUser$ | async as user\\\"  dropdown>\\n        <img src=\\\"{{user.photoUrl || './assets/user.png'}}\\\" alt=\\\"{{user.username}}\\\">\\n        <a class=\\\"dropdown-toggle text-light ml-2\\\" dropdownToggle>Welcome {{user.knownAs || user.username | titlecase}}</a>\\n        <div class=\\\"dropdown-menu mt-3\\\" *dropdownMenu>\\n          <a class=\\\"dropdown-item\\\"routerLink=\\\"/member/edit\\\" routerLinkActive=\\\"active\\\">Edit Profile</a>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">Logout</a>\\n        </div>\\n      </div>\\n      <form *ngIf=\\\"(accountService.currentUser$ | async) === null\\\" #loginForm=\\\"ngForm\\\" class=\\\"d-flex\\\" (ngSubmit)=\\\"login()\\\" \\n      autocomplete=\\\"off\\\">\\n        <input \\n        name=\\\"username\\\"\\n        [(ngModel)] = \\\"model.username\\\"\\n        class=\\\"form-control mr-sm-2\\\" \\n        type=\\\"text\\\" \\n        placeholder=\\\"Username\\\">\\n        <input \\n        name=\\\"password\\\"\\n        [(ngModel)] = \\\"model.password\\\"\\n        class=\\\"form-control mr-sm-2\\\" \\n        type=\\\"password\\\" \\n        placeholder=\\\"Password\\\">\\n        <button class=\\\"btn btn-success my-2 my-sm-0\\\" type=\\\"submit\\\">Login</button>\\n      </form>\\n    </div>\\n</nav>\\n  \\n    \\n\";","import { Component, Input, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Member } from 'src/app/_models/member';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { PresenceService } from 'src/app/_services/presence.service';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() member!: Member\n\n  constructor(private memberService: MembersService, private toastr: ToastrService,\n    public presence: PresenceService) { }\n  \n  ngOnInit(): void {\n    \n  }\n\n  addLike(member: Member) {\n    this.memberService.addLike(member.username).subscribe(() =>{\n      this.toastr.success('You have liked ' + member.knownAs);\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PresenceService {\n  hubUrl = environment.hubUrl;\n  private hubConnection!: HubConnection;\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\n  onlineUsers$ = this.onlineUsersSource.asObservable();\n\n  constructor(private toastr: ToastrService, private router: Router) { }\n\n  createHubConnection (user: User) {\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(this.hubUrl + 'presence', {\n        accessTokenFactory: () => user.token\n      })\n      .withAutomaticReconnect()\n      .build()\n\n    this.hubConnection\n      .start()\n      .catch(error => console.log(error));\n\n    this.hubConnection.on('UserIsOnline', username => {\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\n        this.onlineUsersSource.next([...usernames, username])\n      })\n    })\n\n    this.hubConnection.on('UserIsOffline', username => {\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames => {\n        this.onlineUsersSource.next([...usernames.filter(x => x !== username)])\n      })\n    })\n\n    this.hubConnection.on('GetOnlineUsers', (usernames: string[]) => {\n      this.onlineUsersSource.next(usernames);\n    })\n\n    this.hubConnection.on('NewMessageReceived', ({username, knownAs}) => {\n      this.toastr.info(knownAs + ' has sent you a new message')\n        .onTap\n        .pipe(take(1))\n        .subscribe(() => this.router.navigateByUrl('/members/' + username + '?tab=3'));\n    })\n  }\n\n  stopHubConnection() {\n    this.hubConnection.stop().catch(error => console.log(error));\n  }\n}","export default \"<div class=\\\"form-group\\\">\\n    <input \\n    [class.is-invalid]=\\\"ngControl.touched && ngControl.invalid\\\"\\n    type={{type}}\\n    class=\\\"form-control\\\"\\n    [formControl]=\\\"ngControl.control\\\" \\n    placeholder={{label}}>\\n\\n    <div *ngIf=\\\"ngControl.control?.errors?.required\\\" \\n    class=\\\"invalid-feedback\\\">Please enter a {{label}}</div>\\n\\n    <div *ngIf=\\\"ngControl.control?.errors?.minlength\\\"\\n    class=\\\"invalid-feedback\\\">\\n    {{label}} must be least {{ngControl.control?.errors?.minlength['requiredLength']}}\\n    </div>\\n\\n    <div *ngIf=\\\"ngControl.control?.errors?.maxlength\\\" \\n    class=\\\"invalid-feedback\\\">\\n    {{label}} must be most {{ngControl.control?.errors?.maxlength['requiredLength']}}\\n    </div>\\n\\n    <div *ngIf=\\\"ngControl.control?.errors?.isMatching\\\" \\n    class=\\\"invalid-feedback\\\">Passwords do not match</div>\\n\\n\\n</div>\";","import { User } from \"./user\";\r\n\r\nexport class UserParams {\r\n    gender: string;\r\n    minAge = 18;\r\n    maxAge = 99;\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    orderBy = 'lastActive';\r\n\r\n    constructor(user: User) {\r\n        this.gender = user && user.gender === 'female' ? 'male' : 'female';\r\n    }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGFscy9jb25maXJtLWRpYWxvZy9jb25maXJtLWRpYWxvZy5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3VzZXItbWFuYWdlbWVudC91c2VyLW1hbmFnZW1lbnQuY29tcG9uZW50LmNzcyJ9 */\";","export default \".card:hover img {\\r\\n    transform: scale(1.2, 1.2);\\r\\n    transition-duration: 500ms;\\r\\n    transition-timing-function: ease-out;\\r\\n    opacity: 0.7;\\r\\n}\\r\\n\\r\\n.card img {\\r\\n    transform: scale(1.0, 1.0);\\r\\n    transition-duration: 500ms;\\r\\n    transition-timing-function: ease-out;    \\r\\n}\\r\\n\\r\\n.card-img-wrapper {\\r\\n    overflow: hidden;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.member-icons {\\r\\n    position: absolute;\\r\\n    bottom: -30%;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    opacity: 0;\\r\\n}\\r\\n\\r\\n.card-img-wrapper:hover .member-icons {\\r\\n    opacity: 1;\\r\\n    bottom: 0;\\r\\n}\\r\\n\\r\\n.animate {\\r\\n    transition: all 0.3s ease-in-out;\\r\\n}\\r\\n\\r\\n@keyframes fa-blink {\\r\\n    0% {opacity: 1;}\\r\\n    100% {opacity: 0.4;}\\r\\n}\\r\\n\\r\\n.is-online {\\r\\n    animation: fa-blink 1.5s linear infinite;\\r\\n    color: rgb(1, 180, 42);    \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVtYmVycy9tZW1iZXItY2FyZC9tZW1iZXItY2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksMEJBQTBCO0lBQzFCLDBCQUEwQjtJQUMxQixvQ0FBb0M7SUFDcEMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLDBCQUEwQjtJQUMxQiwwQkFBMEI7SUFDMUIsb0NBQW9DO0FBQ3hDOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osT0FBTztJQUNQLFFBQVE7SUFDUixpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLFVBQVU7QUFDZDs7QUFFQTtJQUNJLFVBQVU7SUFDVixTQUFTO0FBQ2I7O0FBRUE7SUFDSSxnQ0FBZ0M7QUFDcEM7O0FBRUE7SUFDSSxJQUFJLFVBQVUsQ0FBQztJQUNmLE1BQU0sWUFBWSxDQUFDO0FBQ3ZCOztBQUVBO0lBQ0ksd0NBQXdDO0lBQ3hDLHNCQUFzQjtBQUMxQiIsImZpbGUiOiJzcmMvYXBwL21lbWJlcnMvbWVtYmVyLWNhcmQvbWVtYmVyLWNhcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkOmhvdmVyIGltZyB7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMiwgMS4yKTtcclxuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDUwMG1zO1xyXG4gICAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2Utb3V0O1xyXG4gICAgb3BhY2l0eTogMC43O1xyXG59XHJcblxyXG4uY2FyZCBpbWcge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjAsIDEuMCk7XHJcbiAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiA1MDBtcztcclxuICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLW91dDsgICAgXHJcbn1cclxuXHJcbi5jYXJkLWltZy13cmFwcGVyIHtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5tZW1iZXItaWNvbnMge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYm90dG9tOiAtMzAlO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBvcGFjaXR5OiAwO1xyXG59XHJcblxyXG4uY2FyZC1pbWctd3JhcHBlcjpob3ZlciAubWVtYmVyLWljb25zIHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgICBib3R0b206IDA7XHJcbn1cclxuXHJcbi5hbmltYXRlIHtcclxuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0O1xyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGZhLWJsaW5rIHtcclxuICAgIDAlIHtvcGFjaXR5OiAxO31cclxuICAgIDEwMCUge29wYWNpdHk6IDAuNDt9XHJcbn1cclxuXHJcbi5pcy1vbmxpbmUge1xyXG4gICAgYW5pbWF0aW9uOiBmYS1ibGluayAxLjVzIGxpbmVhciBpbmZpbml0ZTtcclxuICAgIGNvbG9yOiByZ2IoMSwgMTgwLCA0Mik7ICAgIFxyXG59Il19 */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","export default \"<div class=\\\"form-group\\\">\\n    <input \\n    type=\\\"text\\\"\\n    [class.is-invalid]='ngControl.touched && ngControl.invalid'\\n    class=\\\"form-control\\\"\\n    [formControl]='ngControl.control'\\n    placeholder=\\\"{{label}}\\\"\\n    bsDatepicker\\n    [bsConfig]='bsConfig'\\n    [maxDate]='maxDate'\\n>\\n    <div *ngIf=\\\"ngControl.control?.errors?.required\\\" class=\\\"invalid-feedback\\\">{{label}} is required</div>\\n</div>\";","export default \"<div class=\\\"row mb-4\\\">\\n    <div class=\\\"btn-group\\\" name='container'>\\n        <button class=\\\"btn btn-primary\\\" btnRadio='Unread' [(ngModel)]=\\\"container\\\" \\n            (click)=\\\"loadMessages()\\\">\\n            <i class=\\\"fa fa-envelope\\\"></i> Unread\\n        </button>\\n        <button class=\\\"btn btn-primary\\\" btnRadio='Inbox' [(ngModel)]=\\\"container\\\" \\n            (click)=\\\"loadMessages()\\\">\\n            <i class=\\\"fa fa-envelope-open\\\"></i> Inbox\\n        </button>\\n        <button class=\\\"btn btn-primary\\\" btnRadio='Outbox' [(ngModel)]=\\\"container\\\" \\n            (click)=\\\"loadMessages()\\\">\\n            <i class=\\\"fa fa-paper-plane\\\"></i> Outbox\\n        </button>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"messages?.length === 0\\\">\\n    <h3>No messages</h3>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"messages?.length > 0\\\">\\n    <table class=\\\"table table-hover\\\" style=\\\"cursor: pointer;\\\">\\n        <tr>\\n            <th style=\\\"width: 40%;\\\">Message</th>\\n            <th style=\\\"width: 20%;\\\">From / To</th>\\n            <th style=\\\"width: 20%;\\\">Sent / Received</th>\\n            <th style=\\\"width: 20%;\\\"></th>\\n        </tr>\\n        <tr [hidden]=\\\"loading\\\" *ngFor=\\\"let message of messages\\\" \\n            routerLink='{{container === \\\"Outbox\\\" \\n            ? \\\"/members/\\\" + message.recipientUsername \\n            : \\\"/members/\\\" + message.senderUsername}}' [queryParams]=\\\"{tab: 3}\\\" >\\n            <td>{{message.content}}</td>\\n            <td>\\n                <div *ngIf=\\\"containter === 'Outbox'\\\">\\n                    <img \\n                        class=\\\"img-circle rounded-circle mr-2\\\"\\n                        src=\\\"{{message.recipientPhotoUrl || './assets/user.png'}}\\\" \\n                        alt=\\\"{{message.recipientUsername}}\\\">\\n                    <strong>{{message.recipientUsername | titlecase}}</strong>\\n                </div>\\n                <div *ngIf=\\\"containter !== 'Outbox'\\\">\\n                    <img \\n                        class=\\\"img-circle rounded-circle mr-2\\\"\\n                        src=\\\"{{message.senderPhotoUrl || './assets/user.png'}}\\\" \\n                        alt=\\\"{{message.senderUsername}}\\\">\\n                    <strong>{{message.senderUsername | titlecase}}</strong>\\n                </div>\\n            </td>\\n            <td>{{message.messageSent | timeago}}</td>\\n            <td>\\n                <button (click)=\\\"$event.stopPropagation()\\\" (click)=\\\"deleteMessage(message.id)\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n            </td>\\n        </tr>\\n    </table>\\n</div>\\n\\n<div class=\\\"d-flex justify-content-center\\\" *ngIf=\\\"pagination && !loading\\\">\\n    <pagination \\n        [boundaryLinks]=\\\"true\\\" \\n        [totalItems]='pagination.totalItems'\\n        [itemsPerPage]='pagination.itemsPerPage'\\n        [(ngModel)]=\\\"pagination.currentPage\\\"\\n        (pageChanged)=\\\"pageChanged($event)\\\"\\n        previousText=\\\"&lsaquo;\\\" \\n        nextText=\\\"&rsaquo;\\\" \\n        firstText=\\\"&laquo;\\\"\\n        lastText=\\\"&raquo;\\\">\\n</pagination>\\n</div>\\n\";","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col-4\\\">\\n        <div class=\\\"card\\\">\\n            <img src=\\\"{{member.photoUrl || './assets/user.png'}}\\\" alt=\\\"{{member.knownAs}}\\\" \\n                class=\\\"card-img-top img-thumbnail\\\">  \\n            <div class=\\\"card-body\\\">\\n                <div class=\\\"mb-2\\\" *ngIf=\\\"(presence.onlineUsers$ | async).includes(member.username)\\\">\\n                    <i class=\\\"fa fa-user-circle text-success\\\"></i> Online now\\n                </div>\\n                <div>\\n                    <strong>Location:</strong>\\n                    <p>{{member.city}}, {{member.country}}</p>\\n                </div>\\n                <div>\\n                    <strong>Age:</strong>\\n                    <p>{{member.age}}</p>\\n                </div>\\n                <div>\\n                    <strong>Last Active:</strong>\\n                    <p>{{member.lastActive | timeago}}</p>\\n                </div>\\n                <div>\\n                    <strong>Member since:</strong>\\n                    <p>{{member.created | date: 'dd mmmm yyyy'}}</p>\\n                </div>\\n            </div>  \\n            <div class=\\\"card-footer\\\">\\n                <div class=\\\"btn-group d-flex\\\">\\n                    <button class=\\\"btn btn-primary\\\">Like</button>\\n                    <button (click)=\\\"selectTab(3)\\\" class=\\\"btn btn-success\\\">Message</button>\\n                </div>    \\n            </div>\\n        </div>\\n    </div>\\n    \\n\\n    <div class=\\\"col-8\\\">\\n        <tabset class=\\\"member-tabset\\\" #memberTabs> \\n            <tab heading=\\\"About {{member.knownAs}}\\\" (selectTab)=\\\"onTabActivated($event)\\\">\\n                <h4>Desciption</h4>\\n                <p>{{member.introduction}}</p>\\n                <h4>Looking for</h4>\\n                <p>{{member.lookingFor}}</p>\\n            </tab>\\n            <tab heading=\\\"Interests\\\" (selectTab)=\\\"onTabActivated($event)\\\">\\n                <h4>Interests</h4>\\n                <p>{{member.interests}}</p>\\n            </tab>\\n            <tab heading=\\\"Photos\\\" (selectTab)=\\\"onTabActivated($event)\\\">\\n                <ngx-gallery [options]=\\\"galleryOptions\\\" [images]=\\\"galleryImages\\\" \\n                style=\\\"display: inline-block; margin-bottom: 20px;\\\"></ngx-gallery>\\n            </tab>\\n            <tab heading=\\\"Messages\\\" (selectTab)=\\\"onTabActivated($event)\\\">\\n                <app-member-messages  [username]=\\\"member.username\\\"></app-member-messages>\\n            </tab>\\n        </tabset>\\n    </div>\\n</div>\\n        \";","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { take } from 'rxjs/operators';\nimport { Member } from 'src/app/_models/member';\nimport { User } from 'src/app/_models/user';\nimport { AccountService } from 'src/app/_services/account.service';\nimport { MembersService } from 'src/app/_services/members.service';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm') \n  editForm!: NgForm;\n  member!: Member;\n  user!: User;\n  @HostListener('window:beforeunload', ['$event']) unloadNotification($event: any) {\n    if (this.editForm.dirty) {\n      $event.returnValue = true; \n    }  \n  }\n\n  constructor(private accountService: AccountService, private memberService: MembersService, \n    private toastr: ToastrService) {\n      this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\n  }\n\n  ngOnInit(): void {\n    this.loadMember();\n  }\n\n  loadMember() {\n    this.memberService.getMember(this.user.username).subscribe(member => {\n      this.member = member;\n    })   \n  }\n\n  updateMember() {\n    this.memberService.updateMember(this.member).subscribe(() => {\n      this.toastr.success('Profile updated successfully');\n      this.editForm.reset(this.member);\n    })\n  }\n}  ","import { Injectable } from '@angular/core';\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\nimport { ConfirmService } from '../_services/confirm.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\n\n  constructor(private confirmService: ConfirmService) {}\n\n  canDeactivate(component: MemberEditComponent): Observable<boolean> | boolean {\n    if (component.editForm.dirty) {\n      return this.confirmService.confirm();\n    }\n    return true;\n  }\n  \n}","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n  title!: string;\n  message!: string;\n  btnOkText!: string;\n  btnCancelText!: string;\n  result!: boolean;\n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  confirm() {\n    this.result = true;\n    this.bsModalRef.hide();\n  }\n\n  decline() {\n    this.result = false;\n    this.bsModalRef.hide();\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\nimport { MemberDetailedResolver } from './_resolvers/member-detailed.resolver';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { AdminGuard } from './_guards/admin.guard';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    canActivate: [AuthGuard],\n    children: [\n      {path: 'members', component: MemberListComponent},\n      {path: 'members/:username', component: MemberDetailComponent, resolve: {member: MemberDetailedResolver}},\n      {path: 'member/edit', component: MemberEditComponent, canDeactivate: [PreventUnsavedChangesGuard]}, \n      {path: 'lists', component: ListsComponent},\n      {path: 'messages', component: MessagesComponent},\n      {path: 'admin', component: AdminPanelComponent, canActivate: [AdminGuard]},\n    ]\n  },\n  {path: 'errors', component: TestErrorsComponent},\n  {path: 'not-found', component: NotFoundComponent},\n  {path: 'server-error', component: ServerErrorComponent},\n  {path: '**', component: NotFoundComponent,pathMatch:'full'}\n];\n  \n  \n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { ConfirmDialogComponent } from '../modals/confirm-dialog/confirm-dialog.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmService {\n  bsModelRef!: BsModalRef;\n\n  constructor(private modalService: BsModalService) { }\n\n  confirm(title = 'Confirmation', \n    message = 'Are you sure you want to do this?',\n    btnOkText = 'Ok',\n    btnCancelText = 'Cancel'): Observable<boolean> {\n      const config = {\n        initialState: {\n          title,\n          message,\n          btnOkText,\n          btnCancelText  \n        }\n      } \n      this.bsModelRef = this.modalService.show(ConfirmDialogComponent, config);\n      \n      return new Observable<boolean>(this.getResult());\n    }\n\n    private getResult() {\n      return (observer : any) => {\n        const subcription = this.bsModelRef.onHidden.subscribe(() => {\n          observer.next(this.bsModelRef.content.result);\n          observer.complete();\n        });\n\n        return {\n          unsubscribe() {\n            subcription.unsubscribe();  \n          }\n        }\n      }\n    }\n}","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { User } from 'src/app/_models/user';\n\n@Component({\n  selector: 'app-roles-modal',\n  templateUrl: './roles-modal.component.html',\n  styleUrls: ['./roles-modal.component.css']\n})\nexport class RolesModalComponent implements OnInit {\n  @Input() updateSelectedRoles = new EventEmitter();\n  user!: User;\n  roles!: any[];\n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  updateRoles() {\n    this.updateSelectedRoles.emit(this.roles);\n    this.bsModalRef.hide();\n  }\n}","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3RzL2xpc3RzLmNvbXBvbmVudC5jc3MifQ== */\";"]}